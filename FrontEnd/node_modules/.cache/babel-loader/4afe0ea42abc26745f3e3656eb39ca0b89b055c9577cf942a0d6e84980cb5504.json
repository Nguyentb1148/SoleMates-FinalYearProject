{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport volumeIcon from '../Icon/icons8-volume-50.png';\nimport moreoption from '../Icon/icons8-more-50.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  tracks\n}) => {\n  _s();\n  // State\n  const [trackIndex, setTrackIndex] = useState(0);\n  const [trackProgress, setTrackProgress] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Destructure for conciseness\n  const {\n    title,\n    artist,\n    audioSrc,\n    image\n  } = tracks[trackIndex];\n\n  // Refs\n  const audioRef = useRef(new Audio(audioSrc));\n  const intervalRef = useRef();\n  const isReady = useRef(false);\n\n  // Destructure for conciseness\n  const {\n    duration\n  } = audioRef.current;\n  const currentPercentage = duration ? `${trackProgress / duration * 100}%` : \"0%\";\n  const trackStyling = `\n    -webkit-gradient(linear, 0% 0%, 100% 0%, color-stop(${currentPercentage}, #fff), color-stop(${currentPercentage}, #777))\n  `;\n  const startTimer = () => {\n    // Clear any timers already running\n    clearInterval(intervalRef.current);\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        toNextTrack();\n      } else {\n        setTrackProgress(audioRef.current.currentTime);\n      }\n    }, [1000]);\n  };\n  const onScrub = value => {\n    // Clear any timers already running\n    clearInterval(intervalRef.current);\n    audioRef.current.currentTime = value;\n    setTrackProgress(audioRef.current.currentTime);\n  };\n  const onScrubEnd = () => {\n    // If not already playing, start\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n    startTimer();\n  };\n  const toPrevTrack = () => {\n    if (trackIndex - 1 < 0) {\n      setTrackIndex(tracks.length - 1);\n    } else {\n      setTrackIndex(trackIndex - 1);\n    }\n  };\n  const toNextTrack = () => {\n    if (trackIndex < tracks.length - 1) {\n      setTrackIndex(trackIndex + 1);\n    } else {\n      setTrackIndex(0);\n    }\n  };\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n      startTimer();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  // Handles cleanup and setup when changing tracks\n  useEffect(() => {\n    audioRef.current.pause();\n    audioRef.current = new Audio(audioSrc);\n    setTrackProgress(audioRef.current.currentTime);\n    if (isReady.current) {\n      audioRef.current.play();\n      setIsPlaying(true);\n      startTimer();\n    } else {\n      // Set the isReady ref as true for the next pass\n      isReady.current = true;\n    }\n  }, [trackIndex]);\n  useEffect(() => {\n    // Pause and clean up on unmount\n    return () => {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  // const playerContainerStyle = {\n  //     display: 'flex',\n  //     justifyContent: 'space-between',\n  //     alignItems: 'center',\n  //     backgroundColor: '#000000',\n  //     color: '#ffffff',\n  //     position: 'fixed',\n  //     bottom: '0',\n  //     left: '0',\n  //     right: '0',\n  //     width: '100%',\n  // };\n  // const leftSectionStyle = {\n  //     display: 'flex',\n  //     alignItems: 'center',\n  //     justifyContent: 'flex-start',\n  //     color: '#ffffff',\n  //     marginRight:'5px',\n  //     width: '350px'\n  // };\n  // const centerSectionStyle = {\n  //     flex: '1',\n  //     display: 'flex',\n  //     flexDirection: 'column',\n  //     alignItems: 'center',\n  //     padding: '5px',\n  //     marginRight:'5px'\n  // };\n  //\n  // const rightSectionStyle = {\n  //     display: 'flex',\n  //     justifyContent: 'flex-end',\n  //     alignItems: 'center',\n  //     marginRight: '15px',\n  //     width: '150px',\n  // };\n  //\n  //\n  // const progressBarStyle = {\n  //     width: '100%', // Allow the progress bar to fill the width of the center section\n  //     // marginBottom: '1px', // Space between progress bar and control icons\n  //     // marginTop:'5px'\n  // };\n\n  const playerContainerStyle = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: '#000000',\n    color: '#ffffff',\n    position: 'fixed',\n    bottom: '0',\n    left: '0',\n    right: '0',\n    width: '100vw'\n  };\n  const leftSectionStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  };\n  const centerSectionStyle = {\n    flex: '1',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  };\n  const rightSectionStyle = {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  };\n  const progressBarStyle = {\n    width: '100%'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    style: playerContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: leftSectionStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: tracks[trackIndex].image,\n        alt: `Track artwork for ${tracks[trackIndex].title} by ${tracks[trackIndex].artist}`,\n        style: {\n          width: '90px',\n          height: '90px',\n          borderRadius: '90px',\n          margin: '1px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: tracks[trackIndex].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tracks[trackIndex].artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: centerSectionStyle,\n      children: [/*#__PURE__*/_jsxDEV(AudioControls, {\n        isPlaying: isPlaying,\n        onPrevClick: toPrevTrack,\n        onNextClick: toNextTrack,\n        onPlayPauseClick: setIsPlaying\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: trackProgress,\n        step: \"1\",\n        min: \"0\",\n        max: duration || 0,\n        className: \"progress\",\n        onChange: e => onScrub(e.target.value),\n        onMouseUp: onScrubEnd,\n        onKeyUp: onScrubEnd,\n        style: progressBarStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: rightSectionStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: volumeIcon,\n        alt: \"Volume control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: moreoption,\n        alt: \"More options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioPlayer, \"E9Pm1fLhcuO8D0WYi7gJIZx8ngQ=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AudioControls","volumeIcon","moreoption","jsxDEV","_jsxDEV","AudioPlayer","tracks","_s","trackIndex","setTrackIndex","trackProgress","setTrackProgress","isPlaying","setIsPlaying","title","artist","audioSrc","image","audioRef","Audio","intervalRef","isReady","duration","current","currentPercentage","trackStyling","startTimer","clearInterval","setInterval","ended","toNextTrack","currentTime","onScrub","value","onScrubEnd","toPrevTrack","length","play","pause","playerContainerStyle","display","justifyContent","alignItems","backgroundColor","color","position","bottom","left","right","width","leftSectionStyle","centerSectionStyle","flex","flexDirection","rightSectionStyle","progressBarStyle","className","style","children","src","alt","height","borderRadius","margin","fileName","_jsxFileName","lineNumber","columnNumber","onPrevClick","onNextClick","onPlayPauseClick","type","step","min","max","onChange","e","target","onMouseUp","onKeyUp","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport volumeIcon from '../Icon/icons8-volume-50.png';\nimport moreoption from '../Icon/icons8-more-50.png'\nconst AudioPlayer = ({ tracks }) => {\n    // State\n    const [trackIndex, setTrackIndex] = useState(0);\n    const [trackProgress, setTrackProgress] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    // Destructure for conciseness\n    const { title, artist, audioSrc,image } = tracks[trackIndex];\n\n    // Refs\n    const audioRef = useRef(new Audio(audioSrc));\n    const intervalRef = useRef();\n    const isReady = useRef(false);\n\n    // Destructure for conciseness\n    const { duration } = audioRef.current;\n\n    const currentPercentage = duration\n        ? `${(trackProgress / duration) * 100}%`\n        : \"0%\";\n    const trackStyling = `\n    -webkit-gradient(linear, 0% 0%, 100% 0%, color-stop(${currentPercentage}, #fff), color-stop(${currentPercentage}, #777))\n  `;\n\n    const startTimer = () => {\n        // Clear any timers already running\n        clearInterval(intervalRef.current);\n\n        intervalRef.current = setInterval(() => {\n            if (audioRef.current.ended) {\n                toNextTrack();\n            } else {\n                setTrackProgress(audioRef.current.currentTime);\n            }\n        }, [1000]);\n    };\n\n    const onScrub = (value) => {\n        // Clear any timers already running\n        clearInterval(intervalRef.current);\n        audioRef.current.currentTime = value;\n        setTrackProgress(audioRef.current.currentTime);\n    };\n\n    const onScrubEnd = () => {\n        // If not already playing, start\n        if (!isPlaying) {\n            setIsPlaying(true);\n        }\n        startTimer();\n    };\n\n    const toPrevTrack = () => {\n        if (trackIndex - 1 < 0) {\n            setTrackIndex(tracks.length - 1);\n        } else {\n            setTrackIndex(trackIndex - 1);\n        }\n    };\n\n    const toNextTrack = () => {\n        if (trackIndex < tracks.length - 1) {\n            setTrackIndex(trackIndex + 1);\n        } else {\n            setTrackIndex(0);\n        }\n    };\n\n    useEffect(() => {\n        if (isPlaying) {\n            audioRef.current.play();\n            startTimer();\n        } else {\n            audioRef.current.pause();\n        }\n    }, [isPlaying]);\n\n    // Handles cleanup and setup when changing tracks\n    useEffect(() => {\n        audioRef.current.pause();\n\n        audioRef.current = new Audio(audioSrc);\n        setTrackProgress(audioRef.current.currentTime);\n\n        if (isReady.current) {\n            audioRef.current.play();\n            setIsPlaying(true);\n            startTimer();\n        } else {\n            // Set the isReady ref as true for the next pass\n            isReady.current = true;\n        }\n    }, [trackIndex]);\n\n    useEffect(() => {\n        // Pause and clean up on unmount\n        return () => {\n            audioRef.current.pause();\n            clearInterval(intervalRef.current);\n        };\n    }, []);\n\n\n    // const playerContainerStyle = {\n    //     display: 'flex',\n    //     justifyContent: 'space-between',\n    //     alignItems: 'center',\n    //     backgroundColor: '#000000',\n    //     color: '#ffffff',\n    //     position: 'fixed',\n    //     bottom: '0',\n    //     left: '0',\n    //     right: '0',\n    //     width: '100%',\n    // };\n    // const leftSectionStyle = {\n    //     display: 'flex',\n    //     alignItems: 'center',\n    //     justifyContent: 'flex-start',\n    //     color: '#ffffff',\n    //     marginRight:'5px',\n    //     width: '350px'\n    // };\n    // const centerSectionStyle = {\n    //     flex: '1',\n    //     display: 'flex',\n    //     flexDirection: 'column',\n    //     alignItems: 'center',\n    //     padding: '5px',\n    //     marginRight:'5px'\n    // };\n    //\n    // const rightSectionStyle = {\n    //     display: 'flex',\n    //     justifyContent: 'flex-end',\n    //     alignItems: 'center',\n    //     marginRight: '15px',\n    //     width: '150px',\n    // };\n    //\n    //\n    // const progressBarStyle = {\n    //     width: '100%', // Allow the progress bar to fill the width of the center section\n    //     // marginBottom: '1px', // Space between progress bar and control icons\n    //     // marginTop:'5px'\n    // };\n\n    const playerContainerStyle = {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#000000',\n        color: '#ffffff',\n        position: 'fixed',\n        bottom: '0',\n        left: '0',\n        right: '0',\n        width: '100vw',\n    };\n\n    const leftSectionStyle = {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n    };\n\n    const centerSectionStyle = {\n        flex: '1',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    };\n\n    const rightSectionStyle = {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    };\n\n    const progressBarStyle = {\n        width: '100%',\n    };\n\n\n    return (\n        <div className=\"audio-player\" style={playerContainerStyle}>\n            <div style={leftSectionStyle}>\n                <img\n                    src={tracks[trackIndex].image}\n                    alt={`Track artwork for ${tracks[trackIndex].title} by ${tracks[trackIndex].artist}`}\n                    style={{ width: '90px', height: '90px', borderRadius: '90px',margin:'1px' }}\n                />\n                <div >\n                    <h2 >{tracks[trackIndex].title}</h2>\n                    <p >{tracks[trackIndex].artist}</p>\n                </div>\n\n            </div>\n\n            <div style={centerSectionStyle}>\n                <AudioControls\n                    isPlaying={isPlaying}\n                    onPrevClick={toPrevTrack}\n                    onNextClick={toNextTrack}\n                    onPlayPauseClick={setIsPlaying}\n                />\n                <input\n                    type=\"range\"\n                    value={trackProgress}\n                    step=\"1\"\n                    min=\"0\"\n                    max={duration || 0}\n                    className=\"progress\"\n                    onChange={(e) => onScrub(e.target.value)}\n                    onMouseUp={onScrubEnd}\n                    onKeyUp={onScrubEnd}\n                    style={progressBarStyle}\n                />\n            </div>\n\n            <div style={rightSectionStyle}>\n                <img src={volumeIcon} alt=\"Volume control\" />\n                <img src={moreoption} alt=\"More options\" />\n            </div>\n        </div>\n    );\n};\n\nexport default AudioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}