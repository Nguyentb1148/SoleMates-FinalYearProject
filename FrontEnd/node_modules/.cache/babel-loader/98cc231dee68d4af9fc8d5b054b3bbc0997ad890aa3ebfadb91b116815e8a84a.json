{"ast":null,"code":"import axios from 'axios';\nconst baseLink = 'http://localhost:5163';\nconst authApi = axios.create({\n  baseURL: baseLink,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nconst userApi = axios.create({\n  baseURL: baseLink,\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  }\n});\nlet refreshingTokenPromise = null;\nuserApi.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && !originalRequest._retry) {\n    if (!refreshingTokenPromise) {\n      originalRequest._retry = true;\n      refreshingTokenPromise = authApi.post('/Account/refresh-token', {\n        Token: localStorage.getItem('refreshToken')\n      }).then(tokenResponse => {\n        if (tokenResponse.data && tokenResponse.data.accessToken) {\n          localStorage.setItem('accessToken', tokenResponse.data.accessToken);\n          console.log('New access token received: ', tokenResponse.data.accessToken);\n          userApi.defaults.headers['Authorization'] = `Bearer ${tokenResponse.data.accessToken}`;\n          originalRequest.headers['Authorization'] = `Bearer ${tokenResponse.data.accessToken}`;\n          return userApi(originalRequest);\n        }\n      }).finally(() => {\n        refreshingTokenPromise = null;\n      });\n    }\n    return refreshingTokenPromise;\n  }\n  return Promise.reject(error);\n});\nconst getUserData = async userId => {\n  try {\n    console.log(\"get user data\", userId);\n    const response = await userApi.get(`/User/getUserData/${userId}`, userId);\n    console.log(\"User data: \", response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nconst updateUserProfile = async data => {\n  try {\n    const user = JSON.parse(localStorage.getItem('user'));\n    const userId = user.Id;\n    const response = await userApi.post(`/User/updateUserProfile/${userId}`, {\n      data\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport { getUserData, updateUserProfile };","map":{"version":3,"names":["axios","baseLink","authApi","create","baseURL","headers","userApi","refreshingTokenPromise","interceptors","response","use","error","originalRequest","config","status","_retry","post","Token","localStorage","getItem","then","tokenResponse","data","accessToken","setItem","console","log","defaults","finally","Promise","reject","getUserData","userId","get","updateUserProfile","user","JSON","parse","Id"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Api/UserApi.js"],"sourcesContent":["import axios from 'axios';\n\nconst baseLink = 'http://localhost:5163';\n\nconst authApi = axios.create({\n    baseURL: baseLink,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\nconst userApi = axios.create({\n    baseURL: baseLink,\n    headers: {\n        'Content-Type': 'multipart/form-data'\n    }\n});\nlet refreshingTokenPromise = null;\nuserApi.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n        const originalRequest = error.config;\n        if (error.response.status === 401 && !originalRequest._retry) {\n            if (!refreshingTokenPromise) {\n                originalRequest._retry = true;\n                refreshingTokenPromise = authApi.post('/Account/refresh-token', { Token: localStorage.getItem('refreshToken') })\n                    .then(tokenResponse => {\n                        if (tokenResponse.data && tokenResponse.data.accessToken) {\n                            localStorage.setItem('accessToken', tokenResponse.data.accessToken);\n                            console.log('New access token received: ', tokenResponse.data.accessToken);\n                            userApi.defaults.headers['Authorization'] = `Bearer ${tokenResponse.data.accessToken}`;\n                            originalRequest.headers['Authorization'] = `Bearer ${tokenResponse.data.accessToken}`;\n                            return userApi(originalRequest);\n                        }\n                    }).finally(() => {\n                        refreshingTokenPromise = null;\n                    });\n            }\n            return refreshingTokenPromise;\n        }\n        return Promise.reject(error);\n    }\n);\n\nconst getUserData = async (userId) => {\n    try {\n        console.log(\"get user data\", userId);\n        const response = await userApi.get(`/User/getUserData/${userId}`,userId);\n        console.log(\"User data: \",response.data)\n        return response.data;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n};\nconst updateUserProfile=async (data)=>{\n    try{\n        const user = JSON.parse(localStorage.getItem('user'));\n        const userId=user.Id\n        const response = await userApi.post(`/User/updateUserProfile/${userId}`,{data});\n        return response.data;\n    }catch (error){\n        console.error('Error:', error);\n        throw error;\n    }\n}\n\nexport {getUserData,updateUserProfile};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}