{"ast":null,"code":"import axios from 'axios';\nconst baseLink = 'http://localhost:5163';\nconst songApi = axios.create({\n  baseURL: `${baseLink}/api/Song`,\n  // Specify the base URL for SongController API\n  headers: {\n    'Content-Type': 'multipart/form-data' // Use multipart/form-data for file uploads\n  }\n});\nsongApi.interceptors.request.use(config => {\n  console.log(\"Interceptor hit for URL:\", config.url); // Debugging\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nconst getAllSongsByUserId = async userId => {\n  try {\n    const response = await songApi.get(`user/${userId}`);\n    const songs = response.data;\n    const pageSize = 10; // Number of songs per page\n    const paginatedSongs = [];\n    for (let i = 0; i < songs.length; i += pageSize) {\n      paginatedSongs.push(songs.slice(i, i + pageSize));\n    }\n    return paginatedSongs;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nconst getAllSongs = async () => {\n  try {\n    const response = await songApi.get('');\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\n\n// Function to search songs by title\nconst searchByTitle = async title => {\n  try {\n    const response = await songApi.get('search', {\n      params: {\n        title\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\n\n// Function to add a new song\nconst addNewSong = async songData => {\n  try {\n    const response = await songApi.post('', songData);\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\n\n// Function to update a song by ID\nconst updateSongById = async (id, updatedSongData) => {\n  try {\n    const response = await songApi.put(`${id}`, updatedSongData);\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\n\n// Function to delete a song by ID\nconst deleteSongById = async id => {\n  try {\n    const response = await songApi.delete(`${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport { getAllSongs, getAllSongsByUserId, searchByTitle, addNewSong, updateSongById, deleteSongById };","map":{"version":3,"names":["axios","baseLink","songApi","create","baseURL","headers","interceptors","request","use","config","console","log","url","token","localStorage","getItem","Authorization","error","Promise","reject","getAllSongsByUserId","userId","response","get","songs","data","pageSize","paginatedSongs","i","length","push","slice","getAllSongs","searchByTitle","title","params","addNewSong","songData","post","updateSongById","id","updatedSongData","put","deleteSongById","delete"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Api/SongApi.js"],"sourcesContent":["import axios from 'axios';\n\nconst baseLink = 'http://localhost:5163';\n\nconst songApi = axios.create({\n    baseURL: `${baseLink}/api/Song`, // Specify the base URL for SongController API\n    headers: {\n        'Content-Type': 'multipart/form-data' // Use multipart/form-data for file uploads\n    }\n});\nsongApi.interceptors.request.use((config) => {\n    console.log(\"Interceptor hit for URL:\", config.url); // Debugging\n    const token = localStorage.getItem('token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n}, (error) => {\n    return Promise.reject(error);\n});\nconst getAllSongsByUserId = async (userId) => {\n    try {\n        const response = await songApi.get(`user/${userId}`);\n        const songs = response.data;\n\n        const pageSize = 10; // Number of songs per page\n        const paginatedSongs = [];\n        for (let i = 0; i < songs.length; i += pageSize) {\n            paginatedSongs.push(songs.slice(i, i + pageSize));\n        }\n\n        return paginatedSongs;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n}\n\nconst getAllSongs = async () => {\n    try {\n        const response = await songApi.get('');\n        return response.data;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n};\n\n// Function to search songs by title\nconst searchByTitle = async (title) => {\n    try {\n        const response = await songApi.get('search', {\n            params: { title }\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n};\n\n// Function to add a new song\nconst addNewSong = async (songData) => {\n    try {\n        const response = await songApi.post('', songData);\n        return response.data;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n};\n\n// Function to update a song by ID\nconst updateSongById = async (id, updatedSongData) => {\n    try {\n        const response = await songApi.put(`${id}`, updatedSongData);\n        return response.data;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n};\n\n// Function to delete a song by ID\nconst deleteSongById = async (id) => {\n    try {\n        const response = await songApi.delete(`${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n};\n\nexport { getAllSongs, getAllSongsByUserId, searchByTitle, addNewSong, updateSongById, deleteSongById };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}