{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Components/StoreOwner/ProductPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { deleteObject, getDownloadURL, listAll, ref, uploadBytes } from \"firebase/storage\";\nimport { storage } from \"../../firebase\";\nimport { addProduct, deleteProductById, GetAllProductNamesAndIds, getProductById, updateProductById } from \"../../utils/Api/ProductApi\";\nimport { addProductSize, getProductSizesByProductId, updateProductSize } from \"../../utils/Api/ProductSizeApi\";\nimport { Guid } from \"guid-typescript\";\nimport './ProductPage.css';\nimport { Dropdown } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductPage = () => {\n  _s();\n  const [mainImage, setMainImage] = useState(null); // State to hold the main image\n  let [listImages, setListImages] = useState([]);\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [design, setDesign] = useState(0);\n  const [productLine, setProductLine] = useState(0);\n  const [material, setMaterial] = useState(0);\n  const [color, setColor] = useState(0);\n  const [products, setProducts] = useState([]);\n  const [sizes, setSizes] = useState([]);\n  const [ProductSizes, setProductSizes] = useState([]);\n  const [newSize, setNewSize] = useState('');\n  const [newQuantity, setNewQuantity] = useState('');\n  const [listImagesNull, setListImagesNull] = useState(false); // New state variable\n  const [colorDropdownOpen, setColorDropdownOpen] = useState(false);\n  const [selectedColor, setSelectedColor] = useState('Select Color');\n  const Design = ['LowTop', 'HighTop', 'Mule'];\n  const ProductLine = ['Basas', 'Vintas', 'Urbas', 'Pattas', 'Socks', 'Shoelaces'];\n  const Material = ['Canvas', 'Suede', 'Leather', 'Flannel', 'Corduroy'];\n  const Color = ['Gray', 'White', 'Cream', 'Charcoal', 'Teal', 'Beige', 'Silver', 'NavyBlue', 'OliveGreen', 'Lavender', 'Coral', 'CarrotOrange', 'CrimsonRed'];\n  const Size = ['35', '36', '36,5', '37', '38', '38,5', '39', '40', '40,5', '41', '42', '42,5', '43', '44', '44,5', '45', '46'];\n  const colorMapping = [{\n    color: '#808080',\n    name: 'Gray'\n  }, {\n    color: '#ffffff',\n    name: 'White'\n  }, {\n    color: '#ffffcc',\n    name: 'Cream'\n  }, {\n    color: '#36454f',\n    name: 'Charcoal'\n  }, {\n    color: '#008080',\n    name: 'Teal'\n  }, {\n    color: '#f5f5dc',\n    name: 'Beige'\n  }, {\n    color: '#c0c0c0',\n    name: 'Silver'\n  }, {\n    color: '#000080',\n    name: 'NavyBlue'\n  }, {\n    color: '#808000',\n    name: 'OliveGreen'\n  }, {\n    color: '#e6e6fa',\n    name: 'Lavender'\n  }, {\n    color: '#ff7f50',\n    name: 'Coral'\n  }, {\n    color: '#ed9121',\n    name: 'CarrotOrange'\n  }, {\n    color: '#dc143c',\n    name: 'CrimsonRed'\n  }];\n  // Maps for converting dropdown values to numbers\n  const designMap = {\n    LowTop: 0,\n    HighTop: 1,\n    Mule: 2\n  };\n  const productLineMap = {\n    Basas: 0,\n    Vintas: 1,\n    Urbas: 2,\n    Pattas: 3,\n    Socks: 4,\n    Shoelaces: 5\n  };\n  const materialMap = {\n    Canvas: 0,\n    Suede: 1,\n    Leather: 2,\n    Flannel: 3,\n    Corduroy: 4\n  };\n  const colorMap = {\n    Gray: 0,\n    White: 1,\n    Cream: 2,\n    Charcoal: 3,\n    Teal: 4,\n    Beige: 5,\n    Silver: 6,\n    NavyBlue: 7,\n    OliveGreen: 8,\n    Lavender: 9,\n    Coral: 10,\n    CarrotOrange: 11,\n    CrimsonRed: 12\n  };\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const productsData = await GetAllProductNamesAndIds();\n        console.log('product data list: ', productsData);\n        setProducts(productsData);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleMainImageClick = index => {\n    if (listImages[index]) {\n      setMainImage(listImages[index]);\n    } else {\n      setMainImage(listImages[0]);\n    }\n  };\n  const handleDeleteAllImages = async () => {\n    const confirmDelete = window.confirm('Are you sure you want to delete all images?');\n    if (confirmDelete) {\n      try {\n        if (selectedProduct) {\n          const imagesFolderRef = ref(storage, `products/${selectedProduct.productId}`);\n          const items = await listAll(imagesFolderRef);\n          await Promise.all(items.items.map(async item => {\n            await deleteObject(item);\n            console.log('Deleted file:', item.name);\n          }));\n        }\n        setMainImage(null);\n        setListImages([]);\n        setListImagesNull(true);\n        console.log('All images deleted successfully');\n      } catch (error) {\n        console.error('Error deleting images:', error);\n      }\n    }\n  };\n  const handleProductClick = async productId => {\n    try {\n      const productData = await getProductById(productId);\n      console.log('Product details:', productData);\n      setName(productData.name);\n      setDescription(productData.description);\n      setPrice(productData.price.toString());\n      setDesign(Design[productData.design]);\n      setProductLine(ProductLine[productData.productLine]);\n      setMaterial(Material[productData.material]);\n      setColor(Color[productData.color]);\n      setMainImage(productData.imageUrls[0]);\n      setListImages(productData.imageUrls);\n      setSelectedProduct(productData);\n      const productSizes = await getProductSizesByProductId(productId);\n      console.log('Product sizes:', productSizes);\n      setSizes(productSizes);\n      setProductSizes(productSizes);\n    } catch (error) {\n      console.error('Error fetching product details:', error);\n    }\n  };\n  const handleAddNewSize = () => {\n    if (newSize && newQuantity) {\n      if (Size.includes(newSize)) {\n        const sizeIndex = Size.indexOf(newSize);\n        const newSizeObject = {\n          size: sizeIndex,\n          quantity: parseInt(newQuantity),\n          addQuantity: ''\n        };\n        const updatedSizes = [...sizes, newSizeObject];\n        setSizes(updatedSizes);\n        setNewSize('');\n        setNewQuantity('');\n      } else {\n        console.error('Invalid size selected');\n      }\n    } else {\n      console.error('Please provide both size and quantity');\n    }\n  };\n  const handleAddQuantity = index => {\n    if (sizes[index].addQuantity) {\n      const updatedSizes = [...sizes];\n      updatedSizes[index].quantity += parseInt(sizes[index].addQuantity);\n      updatedSizes[index].addQuantity = ''; // Reset addQuantity\n      setSizes(updatedSizes);\n    } else {\n      console.error('Please provide a quantity to add');\n    }\n  };\n  const handleSizeChange = (index, field, value) => {\n    const updatedSizes = [...sizes];\n    if (field === 'addQuantity') {\n      updatedSizes[index] = {\n        ...updatedSizes[index],\n        [field]: isNaN(value) ? '' : parseInt(value)\n      };\n    } else if (field === 'size') {\n      const sanitizedValue = value.replace(',', '');\n      updatedSizes[index] = {\n        ...updatedSizes[index],\n        [field]: sanitizedValue\n      };\n    } else {\n      updatedSizes[index] = {\n        ...updatedSizes[index],\n        [field]: value\n      };\n    }\n    setSizes(updatedSizes);\n  };\n  const handleImageUpload = event => {\n    const files = event.target.files;\n    const fileArray = Array.from(files);\n    if (fileArray.length === 0) return;\n    const listImagePreviews = fileArray.map(file => URL.createObjectURL(file));\n    setListImages([...listImages, ...listImagePreviews]);\n    if (!mainImage && listImagePreviews.length > 0) {\n      setMainImage(listImagePreviews[0]);\n    }\n  };\n  const handleDeleteImage = async (productId, index) => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this image?');\n    if (confirmDelete) {\n      try {\n        const imageRef = ref(storage, `products/${productId}/image_${index}`);\n        await deleteObject(imageRef);\n        console.log('Deleted image:', imageRef.fullPath);\n        const updatedImageUrls = selectedProduct.imageUrls.filter((_, idx) => idx !== index);\n        setSelectedProduct(prevProduct => ({\n          ...prevProduct,\n          imageUrls: updatedImageUrls\n        }));\n        if (mainImage === listImages[index]) {\n          if (listImages.length > 1) {\n            setMainImage(listImages[0]);\n          } else {\n            setMainImage(null);\n          }\n        }\n        const updatedListImages = listImages.filter((_, idx) => idx !== index);\n        setListImages(updatedListImages);\n        if (updatedListImages.length === 0) {\n          setListImagesNull(true);\n        }\n      } catch (error) {\n        console.error('Error deleting image:', error);\n      }\n    }\n  };\n  const handleSaveProduct = async () => {\n    if (listImages.length === 0) {\n      console.error('No images to upload');\n      return;\n    }\n    const newProductId = Guid.create().toString();\n    const imageUrls = [];\n    try {\n      await Promise.all(listImages.map(async (image, index) => {\n        const imageRef = ref(storage, `products/${newProductId}/image_${index}`);\n        try {\n          const blob = await fetch(image).then(res => res.blob());\n          const snapshot = await uploadBytes(imageRef, blob);\n          const imageUrl = await getDownloadURL(snapshot.ref);\n          imageUrls.push(imageUrl);\n        } catch (error) {\n          console.error('Error uploading image:', error);\n        }\n      }));\n      const sortedImageUrls = imageUrls.sort((a, b) => {\n        const indexA = parseInt(a.match(/image_(\\d+)/)[1]);\n        const indexB = parseInt(b.match(/image_(\\d+)/)[1]);\n        return indexA - indexB;\n      });\n      const numericDesign = designMap[design];\n      const numericProductLine = productLineMap[productLine];\n      const numericMaterial = materialMap[material];\n      const numericColor = colorMap[color];\n      const updatedSizes = sizes.map(sizeObj => {\n        const sizeValue = Size[sizeObj.size];\n        console.log('size value:', sizeValue);\n        if (sizeObj.size !== -1) {\n          return {\n            size: sizeObj.size,\n            quantity: (parseInt(sizeObj.quantity) || 0) + (parseInt(sizeObj.addQuantity) || 0),\n            productSizeId: `${sizeValue}-${newProductId}`,\n            productId: newProductId\n          };\n        } else {\n          console.error('Invalid size index:', sizeObj.size);\n          return null;\n        }\n      }).filter(size => size !== null);\n      const productToSave = {\n        name,\n        description,\n        design: numericDesign,\n        productLine: numericProductLine,\n        material: numericMaterial,\n        color: numericColor,\n        price: parseFloat(price),\n        sizes: updatedSizes,\n        productId: newProductId,\n        imageUrls: sortedImageUrls\n      };\n      const response = await addProduct(productToSave);\n      await Promise.all(updatedSizes.map(async size => {\n        const productSizeData = {\n          ProductSizeId: size.productSizeId,\n          Size: size.size,\n          Quantity: size.quantity,\n          ProductId: newProductId\n        };\n        await addProductSize(productSizeData);\n      }));\n      console.log('Product sizes added successfully');\n    } catch (error) {\n      console.error('Error saving product:', error);\n    }\n  };\n  const handleEditProduct = async productId => {\n    try {\n      if (!selectedProduct) {\n        console.error('No product selected for editing');\n        return;\n      }\n      const newImageFiles = listImages.filter(image => !selectedProduct.imageUrls.includes(image));\n      const updatedImageUrls = await Promise.all(newImageFiles.map(async (imageFile, index) => {\n        const imageRef = ref(storage, `products/${productId}/image_${selectedProduct.imageUrls.length + index}`);\n        try {\n          const blob = await fetch(imageFile).then(res => res.blob());\n          await uploadBytes(imageRef, blob);\n          return await getDownloadURL(imageRef);\n        } catch (error) {\n          console.error('Error uploading image:', error);\n          return null;\n        }\n      }));\n      let imageUrls;\n      if (listImagesNull) {\n        imageUrls = updatedImageUrls;\n      } else {\n        const remainingImageUrls = selectedProduct.imageUrls.filter(url => !newImageFiles.includes(url));\n        imageUrls = [...remainingImageUrls, ...updatedImageUrls];\n      }\n      let numericDesign = designMap[selectedProduct.design];\n      let numericProductLine = productLineMap[selectedProduct.productLine];\n      let numericMaterial = materialMap[selectedProduct.material];\n      let numericColor = colorMap[selectedProduct.color];\n      if (design !== selectedProduct.design) {\n        numericDesign = designMap[design];\n      }\n      if (productLine !== selectedProduct.productLine) {\n        numericProductLine = productLineMap[productLine];\n      }\n      if (material !== selectedProduct.material) {\n        numericMaterial = materialMap[material];\n      }\n      if (color !== selectedProduct.color) {\n        numericColor = colorMap[color];\n      }\n      console.log('ProductSizes: ', ProductSizes);\n      for (const item of sizes) {\n        const index = sizes.indexOf(item);\n        let productOfSizeId = item.productId;\n        let sizeValue = Size[item.size];\n        let productSizeId = item.productSizeId;\n        if (!productOfSizeId) {\n          productOfSizeId = productId;\n        }\n        if (!productSizeId) {\n          productSizeId = `${sizeValue}-${productId}`;\n        }\n        if (!ProductSizes.find(size => size.size === item.size)) {\n          console.log('New size detected:', sizeValue);\n          sizes[index].productId = productOfSizeId;\n          sizes[index].productSizeId = productSizeId;\n          try {\n            await addProductSize({\n              productId: productOfSizeId,\n              productSizeId: productSizeId,\n              size: item.size,\n              quantity: item.quantity\n            });\n            console.log('New size added successfully:', sizeValue);\n          } catch (error) {\n            console.error('Error adding new size:', error);\n          }\n        }\n      }\n      const updatedProduct = {\n        productId,\n        name,\n        description,\n        design: numericDesign,\n        productLine: numericProductLine,\n        material: numericMaterial,\n        color: numericColor,\n        price: parseFloat(price),\n        sizes: sizes.map(size => ({\n          ...size,\n          productSizeId: `${Size[size.size]}-${productId}`\n        })),\n        imageUrls: imageUrls\n      };\n      const productSizeUpdatePromises = sizes.map(async size => {\n        try {\n          await updateProductSize(size.productSizeId, {\n            Size: size.size,\n            Quantity: size.quantity,\n            ProductId: productId,\n            ProductSizeId: size.productSizeId\n          });\n          console.log('Product size updated successfully for size:', size.productSizeId);\n        } catch (error) {\n          console.error('Error updating product size:', error);\n        }\n      });\n      await Promise.all(productSizeUpdatePromises);\n      setSelectedProduct(prevProduct => ({\n        ...prevProduct,\n        imageUrls: imageUrls\n      }));\n      const response = await updateProductById(productId, updatedProduct);\n      console.log('Product updated successfully:', response);\n    } catch (error) {\n      console.error('Error updating product:', error);\n    }\n  };\n  const handleDeleteProduct = async productId => {\n    try {\n      const response = await deleteProductById(productId);\n      const imagesFolderRef = ref(storage, `products/${productId}`);\n      const items = await listAll(imagesFolderRef);\n      await Promise.all(items.items.map(async item => {\n        await deleteObject(item);\n        console.log('Deleted file:', item.name);\n      }));\n    } catch (error) {\n      console.error('Error deleting product:', error);\n    }\n  };\n  const handleColorClick = selectedColor => {\n    setColor(selectedColor);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productpage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Product List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-productlist\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: '#f2f2f2'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '5px',\n                textAlign: 'left'\n              },\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => handleProductClick(product.item1),\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"product-list-item\",\n              children: product.item2\n            }, product.item1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 29\n            }, this)\n          }, product.item1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-detail\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-image\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative',\n                marginBottom: '2px',\n                padding: '3px'\n              },\n              children: mainImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: mainImage,\n                alt: \"image\",\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              multiple: true,\n              onChange: handleImageUpload,\n              style: {\n                marginBottom: '3px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 29\n            }, this), listImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: image,\n                alt: `Image ${index}`,\n                style: {\n                  maxWidth: '100px',\n                  maxHeight: '100px',\n                  objectFit: 'cover',\n                  cursor: 'pointer'\n                },\n                onClick: () => handleMainImageClick(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteImage(selectedProduct.productId, index),\n                style: {\n                  position: 'absolute',\n                  top: '1px',\n                  right: '1px',\n                  backgroundColor: 'gray',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '50%',\n                  width: '18px',\n                  height: '18px',\n                  padding: '0',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  cursor: 'pointer'\n                },\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              width: '50%',\n              height: '350px',\n              border: '1px solid #ccc',\n              marginRight: '10px',\n              boxSizing: 'border-box'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n                boxSizing: 'border-box',\n                padding: '4px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: name,\n                  onChange: e => setName(e.target.value),\n                  style: {\n                    width: '90%',\n                    height: '20px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: description,\n                  onChange: e => setDescription(e.target.value),\n                  style: {\n                    width: '95%',\n                    height: '100px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: price,\n                  onChange: e => setPrice(e.target.value),\n                  style: {\n                    width: '20%',\n                    height: '20px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [listImages.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeleteAllImages,\n            style: {\n              backgroundColor: 'red',\n              color: 'white',\n              padding: '10px',\n              fontSize: '15px',\n              fontWeight: 'bold'\n            },\n            children: \"Delete All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 29\n          }, this), selectedProduct ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditProduct(selectedProduct.productId),\n              style: {\n                backgroundColor: 'green',\n                color: 'white',\n                padding: '10px',\n                fontSize: '15px',\n                fontWeight: 'bold'\n              },\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteProduct(selectedProduct.productId),\n              style: {\n                backgroundColor: 'red',\n                color: 'white',\n                padding: '10px',\n                fontSize: '15px',\n                fontWeight: 'bold'\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveProduct,\n            style: {\n              backgroundColor: 'blue',\n              color: 'white',\n              padding: '10px',\n              fontSize: '15px',\n              fontWeight: 'bold'\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Design\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: design,\n              onChange: e => setDesign(e.target.value),\n              children: Design.map((designOption, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: designOption,\n                children: designOption\n              }, designOption, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Product Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: productLine,\n              onChange: e => setProductLine(e.target.value),\n              children: ProductLine.map((productLine, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: productLine,\n                children: productLine\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Material\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: material,\n              onChange: e => setMaterial(e.target.value),\n              children: Material.map((material, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: material,\n                children: material\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: color,\n              onChange: e => setColor(e.target.value),\n              className: \"color-select\",\n              children: colorMapping.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.name,\n                style: {\n                  backgroundColor: item.color\n                },\n                children: item.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            width: '800px',\n            justifyContent: 'space-between',\n            alignItems: 'flex-start',\n            padding: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              marginRight: '10px',\n              overflowY: 'auto',\n              maxHeight: '400px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              style: {\n                width: '100%',\n                borderCollapse: 'collapse',\n                border: '1px solid #ccc'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  style: {\n                    backgroundColor: '#f2f2f2'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding: '10px',\n                      textAlign: 'left'\n                    },\n                    children: \"Size\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding: '10px',\n                      textAlign: 'left'\n                    },\n                    children: \"Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding: '10px',\n                      textAlign: 'left'\n                    },\n                    children: \"Add Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding: '10px',\n                      textAlign: 'left'\n                    },\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [sizes.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"4\",\n                    style: {\n                      textAlign: 'center',\n                      padding: '10px'\n                    },\n                    children: \"No sizes added yet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 37\n                }, this) : sizes.map((size, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  style: {\n                    backgroundColor: 'white',\n                    border: '1px solid #ccc'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      padding: '10px',\n                      textAlign: 'left'\n                    },\n                    children: Size[size.size]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      padding: '10px',\n                      textAlign: 'left'\n                    },\n                    children: size.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      padding: '10px',\n                      textAlign: 'left'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: size.addQuantity,\n                      onChange: e => handleSizeChange(index, 'addQuantity', e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 556,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      padding: '5px',\n                      textAlign: 'left'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleAddQuantity(index),\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 559,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 45\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 41\n                }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  style: {\n                    backgroundColor: 'white',\n                    border: '1px solid #ccc'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: newSize,\n                      onChange: e => setNewSize(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Size\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 567,\n                        columnNumber: 45\n                      }, this), Size.map((size, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: size,\n                        children: size\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 569,\n                        columnNumber: 49\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 566,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: newQuantity,\n                      onChange: e => setNewQuantity(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 574,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleAddNewSize,\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 577,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 411,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductPage, \"+1Jk437CIrQGxc//c2nF+VQ9wlU=\");\n_c = ProductPage;\nexport default ProductPage;\nvar _c;\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"names":["React","useEffect","useState","deleteObject","getDownloadURL","listAll","ref","uploadBytes","storage","addProduct","deleteProductById","GetAllProductNamesAndIds","getProductById","updateProductById","addProductSize","getProductSizesByProductId","updateProductSize","Guid","Dropdown","jsxDEV","_jsxDEV","ProductPage","_s","mainImage","setMainImage","listImages","setListImages","name","setName","price","setPrice","description","setDescription","design","setDesign","productLine","setProductLine","material","setMaterial","color","setColor","products","setProducts","sizes","setSizes","ProductSizes","setProductSizes","newSize","setNewSize","newQuantity","setNewQuantity","listImagesNull","setListImagesNull","colorDropdownOpen","setColorDropdownOpen","selectedColor","setSelectedColor","Design","ProductLine","Material","Color","Size","colorMapping","designMap","LowTop","HighTop","Mule","productLineMap","Basas","Vintas","Urbas","Pattas","Socks","Shoelaces","materialMap","Canvas","Suede","Leather","Flannel","Corduroy","colorMap","Gray","White","Cream","Charcoal","Teal","Beige","Silver","NavyBlue","OliveGreen","Lavender","Coral","CarrotOrange","CrimsonRed","selectedProduct","setSelectedProduct","fetchProducts","productsData","console","log","error","handleMainImageClick","index","handleDeleteAllImages","confirmDelete","window","confirm","imagesFolderRef","productId","items","Promise","all","map","item","handleProductClick","productData","toString","imageUrls","productSizes","handleAddNewSize","includes","sizeIndex","indexOf","newSizeObject","size","quantity","parseInt","addQuantity","updatedSizes","handleAddQuantity","handleSizeChange","field","value","isNaN","sanitizedValue","replace","handleImageUpload","event","files","target","fileArray","Array","from","length","listImagePreviews","file","URL","createObjectURL","handleDeleteImage","imageRef","fullPath","updatedImageUrls","filter","_","idx","prevProduct","updatedListImages","handleSaveProduct","newProductId","create","image","blob","fetch","then","res","snapshot","imageUrl","push","sortedImageUrls","sort","a","b","indexA","match","indexB","numericDesign","numericProductLine","numericMaterial","numericColor","sizeObj","sizeValue","productSizeId","productToSave","parseFloat","response","productSizeData","ProductSizeId","Quantity","ProductId","handleEditProduct","newImageFiles","imageFile","remainingImageUrls","url","productOfSizeId","find","updatedProduct","productSizeUpdatePromises","handleDeleteProduct","handleColorClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","padding","textAlign","product","onClick","item1","item2","display","marginBottom","position","src","alt","justifyContent","type","accept","multiple","onChange","maxWidth","maxHeight","objectFit","cursor","top","right","border","borderRadius","width","height","alignItems","flexDirection","marginRight","boxSizing","e","fontSize","fontWeight","designOption","flex","overflowY","borderCollapse","colSpan","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Components/StoreOwner/ProductPage.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {deleteObject, getDownloadURL, listAll, ref, uploadBytes} from \"firebase/storage\";\nimport {storage} from \"../../firebase\";\nimport {addProduct, deleteProductById, GetAllProductNamesAndIds, getProductById, updateProductById} from \"../../utils/Api/ProductApi\";\nimport {addProductSize, getProductSizesByProductId, updateProductSize} from \"../../utils/Api/ProductSizeApi\";\nimport {Guid} from \"guid-typescript\";\nimport './ProductPage.css'\nimport { Dropdown } from 'react-bootstrap';\n\nconst ProductPage = () => {\n\n    const [mainImage, setMainImage] = useState(null); // State to hold the main image\n    let [listImages, setListImages] = useState([]);\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [description, setDescription] = useState('');\n    const [design, setDesign] = useState(0);\n    const [productLine, setProductLine] = useState(0);\n    const [material, setMaterial] = useState(0);\n    const [color, setColor] = useState(0);\n    const [products, setProducts] = useState([]);\n    const [sizes, setSizes] = useState([]);\n    const [ProductSizes,setProductSizes]=useState([]);\n    const [newSize, setNewSize] = useState('');\n    const [newQuantity, setNewQuantity] = useState('');\n    const [listImagesNull, setListImagesNull] = useState(false); // New state variable\n    const [colorDropdownOpen, setColorDropdownOpen] = useState(false);\n    const [selectedColor, setSelectedColor] = useState('Select Color');\n\n    const Design = ['LowTop', 'HighTop', 'Mule'];\n    const ProductLine = ['Basas', 'Vintas', 'Urbas', 'Pattas', 'Socks', 'Shoelaces'];\n    const Material = ['Canvas', 'Suede', 'Leather', 'Flannel', 'Corduroy'];\n    const Color = ['Gray', 'White', 'Cream', 'Charcoal', 'Teal', 'Beige', 'Silver', 'NavyBlue', 'OliveGreen', 'Lavender', 'Coral', 'CarrotOrange', 'CrimsonRed'];\n    const Size = ['35', '36', '36,5', '37', '38', '38,5', '39', '40', '40,5', '41', '42', '42,5', '43', '44', '44,5', '45', '46'];\n    const colorMapping=[\n        { color: '#808080', name: 'Gray' },\n        { color: '#ffffff', name: 'White' },\n        { color: '#ffffcc', name: 'Cream' },\n        { color: '#36454f', name: 'Charcoal' },\n        { color: '#008080', name: 'Teal' },\n        { color: '#f5f5dc', name: 'Beige' },\n        { color: '#c0c0c0', name: 'Silver' },\n        { color: '#000080', name: 'NavyBlue' },\n        { color: '#808000', name: 'OliveGreen' },\n        { color: '#e6e6fa', name: 'Lavender' },\n        { color: '#ff7f50', name: 'Coral' },\n        { color: '#ed9121', name: 'CarrotOrange' },\n        { color: '#dc143c', name: 'CrimsonRed' }\n    ]\n    // Maps for converting dropdown values to numbers\n    const designMap = { LowTop: 0, HighTop: 1, Mule: 2 };\n    const productLineMap = { Basas: 0, Vintas: 1, Urbas: 2, Pattas: 3, Socks: 4, Shoelaces: 5 };\n    const materialMap = { Canvas: 0, Suede: 1, Leather: 2, Flannel: 3, Corduroy: 4 };\n    const colorMap = {Gray: 0, White: 1, Cream: 2, Charcoal: 3, Teal: 4, Beige: 5, Silver: 6, NavyBlue: 7, OliveGreen: 8, Lavender: 9, Coral: 10, CarrotOrange: 11, CrimsonRed: 12};\n\n    const [selectedProduct, setSelectedProduct] = useState(null);\n    useEffect(() => {\n        const fetchProducts = async () => {\n            try {\n                const productsData = await GetAllProductNamesAndIds();\n                console.log('product data list: ',productsData)\n                setProducts(productsData);\n            } catch (error) {\n                console.error('Error fetching products:', error);\n            }\n        };\n\n        fetchProducts();\n    }, []);\n    const handleMainImageClick = (index) => {\n        if (listImages[index]) {\n            setMainImage(listImages[index]);\n        }\n        else {\n            setMainImage(listImages[0]);\n        }\n    };\n    const handleDeleteAllImages = async () => {\n        const confirmDelete = window.confirm('Are you sure you want to delete all images?');\n        if (confirmDelete) {\n            try {\n                if (selectedProduct) {\n                    const imagesFolderRef = ref(storage, `products/${selectedProduct.productId}`);\n                    const items = await listAll(imagesFolderRef);\n                    await Promise.all(items.items.map(async (item) => {\n                        await deleteObject(item);\n                        console.log('Deleted file:', item.name);\n                    }));\n                }\n                setMainImage(null);\n                setListImages([]);\n                setListImagesNull(true);\n                console.log('All images deleted successfully');\n            } catch (error) {\n                console.error('Error deleting images:', error);\n            }\n        }\n    };\n    const handleProductClick = async (productId) => {\n        try {\n            const productData = await getProductById(productId);\n            console.log('Product details:', productData);\n            setName(productData.name);\n            setDescription(productData.description);\n            setPrice(productData.price.toString());\n            setDesign(Design[productData.design]);\n            setProductLine(ProductLine[productData.productLine]);\n            setMaterial(Material[productData.material]);\n            setColor(Color[productData.color]);\n\n            setMainImage(productData.imageUrls[0]);\n            setListImages(productData.imageUrls);\n            setSelectedProduct(productData);\n\n            const productSizes = await getProductSizesByProductId(productId);\n            console.log('Product sizes:', productSizes);\n            setSizes(productSizes);\n            setProductSizes(productSizes);\n\n        } catch (error) {\n            console.error('Error fetching product details:', error);\n        }\n    };\n    const handleAddNewSize = () => {\n        if (newSize && newQuantity) {\n            if (Size.includes(newSize)) {\n                const sizeIndex = Size.indexOf(newSize);\n                const newSizeObject = { size: sizeIndex, quantity: parseInt(newQuantity), addQuantity: '' };\n                const updatedSizes = [...sizes, newSizeObject];\n\n                setSizes(updatedSizes);\n                setNewSize('');\n                setNewQuantity('');\n\n            } else {\n                console.error('Invalid size selected');\n            }\n        } else {\n            console.error('Please provide both size and quantity');\n        }\n    };\n    const handleAddQuantity = (index) => {\n        if (sizes[index].addQuantity) {\n            const updatedSizes = [...sizes];\n            updatedSizes[index].quantity += parseInt(sizes[index].addQuantity);\n            updatedSizes[index].addQuantity = ''; // Reset addQuantity\n            setSizes(updatedSizes);\n        } else {\n            console.error('Please provide a quantity to add');\n        }\n    };\n    const handleSizeChange = (index, field, value) => {\n        const updatedSizes = [...sizes];\n        if (field === 'addQuantity') {\n            updatedSizes[index] = {\n                ...updatedSizes[index],\n                [field]: isNaN(value) ? '' : parseInt(value)\n            };\n        } else if (field === 'size') {\n            const sanitizedValue = value.replace(',', '');\n            updatedSizes[index] = {\n                ...updatedSizes[index],\n                [field]: sanitizedValue\n            };\n        } else {\n            updatedSizes[index] = {\n                ...updatedSizes[index],\n                [field]: value\n            };\n        }\n        setSizes(updatedSizes);\n    };\n    const handleImageUpload = (event) => {\n        const files = event.target.files;\n        const fileArray = Array.from(files);\n        if (fileArray.length === 0) return;\n        const listImagePreviews = fileArray.map(file => URL.createObjectURL(file));\n        setListImages([...listImages, ...listImagePreviews]);\n        if (!mainImage && listImagePreviews.length > 0) {\n            setMainImage(listImagePreviews[0]);\n        }\n    };\n    const handleDeleteImage = async (productId, index) => {\n        const confirmDelete = window.confirm('Are you sure you want to delete this image?');\n        if (confirmDelete) {\n            try {\n                const imageRef = ref(storage, `products/${productId}/image_${index}`);\n                await deleteObject(imageRef);\n                console.log('Deleted image:', imageRef.fullPath);\n                const updatedImageUrls = selectedProduct.imageUrls.filter((_, idx) => idx !== index);\n                setSelectedProduct(prevProduct => ({\n                    ...prevProduct,\n                    imageUrls: updatedImageUrls,\n                }));\n                if (mainImage === listImages[index]) {\n                    if (listImages.length > 1) {\n                        setMainImage(listImages[0]);\n                    } else {\n                        setMainImage(null);\n                    }\n                }\n                const updatedListImages = listImages.filter((_, idx) => idx !== index);\n                setListImages(updatedListImages);\n                if (updatedListImages.length === 0) {\n                    setListImagesNull(true);\n                }\n            } catch (error) {\n                console.error('Error deleting image:', error);\n            }\n        }\n    };\n    const handleSaveProduct = async () => {\n        if (listImages.length === 0) {\n            console.error('No images to upload');\n            return;\n        }\n        const newProductId = Guid.create().toString();\n        const imageUrls = [];\n        try {\n            await Promise.all(listImages.map(async (image, index) => {\n                const imageRef = ref(storage, `products/${newProductId}/image_${index}`);\n                try {\n                    const blob = await fetch(image).then(res => res.blob());\n                    const snapshot = await uploadBytes(imageRef, blob);\n                    const imageUrl = await getDownloadURL(snapshot.ref);\n                    imageUrls.push(imageUrl);\n                } catch (error) {\n                    console.error('Error uploading image:', error);\n                }\n            }));\n            const sortedImageUrls = imageUrls.sort((a, b) => {\n                const indexA = parseInt(a.match(/image_(\\d+)/)[1]);\n                const indexB = parseInt(b.match(/image_(\\d+)/)[1]);\n                return indexA - indexB;\n            });\n            const numericDesign = designMap[design];\n            const numericProductLine = productLineMap[productLine];\n            const numericMaterial = materialMap[material];\n            const numericColor = colorMap[color];\n            const updatedSizes = sizes.map((sizeObj) => {\n                const sizeValue = Size[sizeObj.size];\n                console.log('size value:', sizeValue);\n\n                if (sizeObj.size !== -1) {\n                    return {\n                        size: sizeObj.size,\n                        quantity: (parseInt(sizeObj.quantity) || 0) + (parseInt(sizeObj.addQuantity) || 0),\n                        productSizeId: `${sizeValue}-${newProductId}`,\n                        productId: newProductId\n                    };\n                } else {\n                    console.error('Invalid size index:', sizeObj.size);\n                    return null;\n                }\n            }).filter(size => size !== null);\n            const productToSave = {\n                name,\n                description,\n                design: numericDesign,\n                productLine: numericProductLine,\n                material: numericMaterial,\n                color: numericColor,\n                price: parseFloat(price),\n                sizes: updatedSizes,\n                productId: newProductId,\n                imageUrls: sortedImageUrls,\n            };\n            const response = await addProduct(productToSave);\n            await Promise.all(updatedSizes.map(async (size) => {\n                const productSizeData = {\n                    ProductSizeId: size.productSizeId,\n                    Size: size.size,\n                    Quantity: size.quantity,\n                    ProductId: newProductId\n                };\n                await addProductSize(productSizeData);\n            }));\n    \n            console.log('Product sizes added successfully');\n        } catch (error) {\n            console.error('Error saving product:', error);\n        }\n    };\n    const handleEditProduct = async (productId) => {\n        try {\n            if (!selectedProduct) {\n                console.error('No product selected for editing');\n                return;\n            }\n            const newImageFiles = listImages.filter(image => !selectedProduct.imageUrls.includes(image));\n            const updatedImageUrls = await Promise.all(newImageFiles.map(async (imageFile, index) => {\n                const imageRef = ref(storage, `products/${productId}/image_${selectedProduct.imageUrls.length + index}`);\n                try {\n                    const blob = await fetch(imageFile).then(res => res.blob());\n                    await uploadBytes(imageRef, blob);\n                    return await getDownloadURL(imageRef);\n                } catch (error) {\n                    console.error('Error uploading image:', error);\n                    return null;\n                }\n            }));\n            let imageUrls;\n            if (listImagesNull) {\n                imageUrls = updatedImageUrls;\n            } else {\n                const remainingImageUrls = selectedProduct.imageUrls.filter(url => !newImageFiles.includes(url));\n                imageUrls = [...remainingImageUrls, ...updatedImageUrls];\n            }\n            let numericDesign = designMap[selectedProduct.design];\n            let numericProductLine = productLineMap[selectedProduct.productLine];\n            let numericMaterial = materialMap[selectedProduct.material];\n            let numericColor = colorMap[selectedProduct.color];\n            if (design !== selectedProduct.design) {\n                numericDesign = designMap[design];\n            }\n            if (productLine !== selectedProduct.productLine) {\n                numericProductLine = productLineMap[productLine];\n            }\n            if (material !== selectedProduct.material) {\n                numericMaterial = materialMap[material];\n            }\n            if (color !== selectedProduct.color) {\n                numericColor = colorMap[color];\n            }\n            console.log('ProductSizes: ', ProductSizes);\n            for (const item of sizes) {\n                const index = sizes.indexOf(item);\n                let productOfSizeId = item.productId;\n                let sizeValue = Size[item.size];\n                let productSizeId = item.productSizeId;\n                if (!productOfSizeId) {\n                    productOfSizeId = productId;\n                }\n                if (!productSizeId) {\n                    productSizeId = `${sizeValue}-${productId}`;\n                }\n                if (!ProductSizes.find(size => size.size === item.size)) {\n                    console.log('New size detected:', sizeValue);\n                    sizes[index].productId = productOfSizeId;\n                    sizes[index].productSizeId = productSizeId;\n                    try {\n                        await addProductSize({\n                            productId: productOfSizeId,\n                            productSizeId: productSizeId,\n                            size: item.size,\n                            quantity:item.quantity\n                        });\n                        console.log('New size added successfully:', sizeValue);\n                    } catch (error) {\n                        console.error('Error adding new size:', error);\n                    }\n                }\n            }\n            const updatedProduct = {\n                productId,\n                name,\n                description,\n                design: numericDesign,\n                productLine: numericProductLine,\n                material: numericMaterial,\n                color: numericColor,\n                price: parseFloat(price),\n                sizes: sizes.map(size => ({\n                    ...size,\n                    productSizeId: `${Size[size.size]}-${productId}`,\n                })),\n                imageUrls: imageUrls,\n            };\n            const productSizeUpdatePromises = sizes.map(async (size) => {\n                try {\n                    await updateProductSize(size.productSizeId, {\n                        Size: size.size,\n                        Quantity: size.quantity,\n                        ProductId:productId,\n                        ProductSizeId:size.productSizeId\n                    });\n                    console.log('Product size updated successfully for size:', size.productSizeId);\n                } catch (error) {\n                    console.error('Error updating product size:', error);\n                }\n            });\n            await Promise.all(productSizeUpdatePromises);\n            setSelectedProduct(prevProduct => ({\n                ...prevProduct,\n                imageUrls: imageUrls,\n            }));\n            const response = await updateProductById(productId, updatedProduct);\n            console.log('Product updated successfully:', response);\n        } catch (error) {\n            console.error('Error updating product:', error);\n        }\n    };\n    const handleDeleteProduct = async (productId) => {\n        try {\n            const response = await deleteProductById(productId);\n            const imagesFolderRef = ref(storage, `products/${productId}`);\n            const items = await listAll(imagesFolderRef);\n            await Promise.all(items.items.map(async (item) => {\n                await deleteObject(item);\n                console.log('Deleted file:', item.name);\n            }));\n        } catch (error) {\n            console.error('Error deleting product:', error);\n        }\n    };\n    const handleColorClick = (selectedColor) => {\n        setColor(selectedColor);\n    }\n\n    return (\n        <div className=\"productpage-container\">\n            {/* Product List */}\n            <div className=\"product-list\">\n                <h1>Product List</h1>\n                <table className=\"table-productlist\">\n                    <thead>\n                    <tr style={{ backgroundColor: '#f2f2f2' }}>\n                        <th style={{ padding: '5px', textAlign: 'left' }}>Name</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {products.map(product => (\n                        <tr key={product.item1} onClick={() => handleProductClick(product.item1)}>\n                            <td key={product.item1} className=\"product-list-item\">{product.item2}</td>\n                        </tr>\n                    ))}\n\n                    </tbody>\n                </table>\n            </div>\n            {/* Product Details */}\n            <div className=\"product-detail\">\n                {/* Left Section */}\n                <div className=\"left-section\">\n                    {/*Top information*/}\n                    <div style={{ display: 'flex', marginBottom: '20px' }}>\n                        {/* Main image */}\n                        <div className=\"main-image\">\n                            <div style={{ position: 'relative', marginBottom: '2px',padding:'3px' }}>\n                                {mainImage && (\n                                    <img\n                                        src={mainImage}\n                                        alt=\"image\"\n                                        style={{ display:'flex',justifyContent: 'space-between' }}\n                                    />\n                                )}\n\n                            </div>\n                        </div>\n                        {/* List images */}\n                        <div className=\"list-image\">\n                            <input type=\"file\" accept=\"image/*\" multiple onChange={handleImageUpload} style={{ marginBottom: '3px' }} />\n                            {listImages.map((image, index) => (\n                                <div key={index} style={{ position: 'relative' }}>\n                                    <img src={image} alt={`Image ${index}`} style={{ maxWidth: '100px', maxHeight: '100px', objectFit: 'cover', cursor: 'pointer' }} onClick={() => handleMainImageClick(index)} />\n                                    <button onClick={() => handleDeleteImage(selectedProduct.productId, index)} style={{ position: 'absolute', top: '1px', right: '1px', backgroundColor: 'gray', color: 'white', border: 'none', borderRadius: '50%', width: '18px', height: '18px', padding: '0', display: 'flex', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}>X</button>\n                                </div>\n                            ))}\n                        </div>\n                        {/* Product Information */}\n                        <div style={{ display: 'flex', flexDirection: 'column', width: '50%', height: '350px', border: '1px solid #ccc', marginRight: '10px', boxSizing: 'border-box' }}>\n                            <div style={{ display: 'flex', flexDirection: 'column', height: '100%', boxSizing: 'border-box', padding: '4px' }}>\n                                <div>\n                                    <h3>Name:</h3>\n                                    <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} style={{ width: '90%',height:'20px' }} />\n                                </div>\n                                <div>\n                                    <h3>Description:</h3>\n                                    <textarea value={description} onChange={(e) => setDescription(e.target.value)} style={{ width: '95%', height: '100px' }} />\n                                </div>\n                                <div>\n                                    <h3>Price:</h3>\n                                    <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} style={{ width: '20%',height:'20px' }} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {/*Buttons*/}\n                    <div>\n                        {listImages.length > 0 && (\n                            <button onClick={handleDeleteAllImages} style={{ backgroundColor: 'red', color: 'white', padding: '10px', fontSize: '15px', fontWeight: 'bold' }}>Delete All</button>\n                        )}\n                        {selectedProduct ? (\n                            <div>\n                                <button onClick={() => handleEditProduct(selectedProduct.productId)} style={{ backgroundColor: 'green', color: 'white', padding: '10px', fontSize: '15px', fontWeight: 'bold' }}>Update</button>\n                                <button onClick={() => handleDeleteProduct(selectedProduct.productId)} style={{ backgroundColor: 'red', color: 'white', padding: '10px', fontSize: '15px', fontWeight: 'bold' }}>Delete</button>\n                            </div>\n                        ) :\n                            <button onClick={handleSaveProduct} style={{ backgroundColor: 'blue', color: 'white', padding: '10px', fontSize: '15px', fontWeight: 'bold' }}>Add</button>\n                        }\n                    </div>\n\n                    {/*design,line,material,color*/}\n                    <div className=\"dropdown-container\">\n                        <div>\n                            <h3>Design</h3>\n                            <select value={design} onChange={(e) => setDesign(e.target.value)}>\n                                {Design.map((designOption, index) => (\n                                    <option key={designOption} value={designOption}>{designOption}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div>\n                            <h3>Product Line</h3>\n                            <select value={productLine} onChange={(e) => setProductLine(e.target.value)}>\n                                {ProductLine.map((productLine, index) => (\n                                    <option key={index} value={productLine}>{productLine}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div>\n                            <h3>Material</h3>\n                            <select value={material} onChange={(e) => setMaterial(e.target.value)}>\n                                {Material.map((material, index) => (\n                                    <option key={index} value={material}>{material}</option>\n                                ))}\n                            </select>\n                        </div>\n\n                        {/* Color */}\n                        <div>\n                            <h3>Color</h3>\n                            <select value={color} onChange={(e) => setColor(e.target.value)} className=\"color-select\">\n                                {colorMapping.map((item, index) => (\n                                    <option key={index} value={item.name} style={{backgroundColor: item.color}}>\n                                        {item.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n\n                    </div>\n                    {/* Product size */}\n                    <div style={{ display: 'flex', width: '800px', justifyContent: 'space-between', alignItems: 'flex-start', padding: '5px' }}>\n                        <div style={{ flex: 1, marginRight: '10px', overflowY: 'auto', maxHeight: '400px' }}>\n                            <table style={{ width: '100%', borderCollapse: 'collapse', border: '1px solid #ccc' }}>\n                                <thead>\n                                <tr style={{ backgroundColor: '#f2f2f2' }}>\n                                    <th style={{ padding: '10px', textAlign: 'left' }}>Size</th>\n                                    <th style={{ padding: '10px', textAlign: 'left' }}>Quantity</th>\n                                    <th style={{ padding: '10px', textAlign: 'left' }}>Add Quantity</th>\n                                    <th style={{ padding: '10px', textAlign: 'left' }}>Actions</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {sizes.length === 0 ? (\n                                    <tr>\n                                        <td colSpan=\"4\" style={{ textAlign: 'center', padding: '10px' }}>No sizes added yet</td>\n                                    </tr>\n                                ) : (\n                                    sizes.map((size, index) => (\n                                        <tr key={index} style={{ backgroundColor: 'white', border: '1px solid #ccc' }}>\n                                            <td style={{ padding: '10px', textAlign: 'left' }}>{Size[size.size]}</td>\n                                            <td style={{ padding: '10px', textAlign: 'left' }}>{size.quantity}</td>\n                                            <td style={{ padding: '10px', textAlign: 'left' }}>\n                                                <input type=\"number\" value={size.addQuantity} onChange={(e) => handleSizeChange(index, 'addQuantity', e.target.value)} />\n                                            </td>\n                                            <td style={{ padding: '5px', textAlign: 'left' }}>\n                                                <button onClick={() => handleAddQuantity(index)}>Add</button>\n                                            </td>\n                                        </tr>\n                                    ))\n                                )}\n                                <tr style={{ backgroundColor: 'white', border: '1px solid #ccc' }}>\n                                    <td>\n                                        <select value={newSize} onChange={(e) => setNewSize(e.target.value)}>\n                                            <option value=\"\">Size</option>\n                                            {Size.map((size, index) => (\n                                                <option key={index} value={size}>{size}</option>\n                                            ))}\n                                        </select>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" value={newQuantity} onChange={(e) => setNewQuantity(e.target.value)} />\n                                    </td>\n                                    <td>\n                                        <button onClick={handleAddNewSize}>Add</button>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProductPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}