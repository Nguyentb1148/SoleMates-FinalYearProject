{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/User/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getUserData, updateUserProfile } from \"../../Api/UserApi\"; // Make sure this path is correct\nimport defaultAvatar from '../../Img/DefaultAvatar.png';\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { storage } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newUsername, setNewUsername] = useState('');\n  const [newImage, setNewImage] = useState(null);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const storedUser = JSON.parse(localStorage.getItem('user'));\n      const userId = storedUser === null || storedUser === void 0 ? void 0 : storedUser.Id;\n      if (userId) {\n        const userData = await getUserData(userId);\n        setUser(userData);\n        setNewUsername(userData.userName);\n      }\n    };\n    fetchUserData();\n  }, []);\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleImageChange = event => {\n    setNewImage(event.target.files[0]);\n  };\n  const handleSave = async () => {\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    console.log('User data:', user);\n    setIsEditing(true);\n    let imageDownloadUrl = '';\n    if (!user) return;\n    const formData = new FormData();\n    if (newUsername) {\n      formData.append('Username', newUsername);\n    }\n\n    // if (song.imageFile && typeof song.imageFile !== 'string') {\n    //     const imageRef = ref(storage, `SoundTrackImage/${songId}`);\n    //     await uploadBytes(imageRef, song.imageFile).then(async (snapshot) => {\n    //         console.log('Uploaded a blob or file for image!');\n    //         await getDownloadURL(imageRef).then((newImageFileUrl) => {\n    //             updatedSongData.ImageFileUrl = newImageFileUrl;\n    //             console.log('New Image URL:', newImageFileUrl); // Should log the new image URL\n    //         });\n    //     });\n    // }\n    if (newImage) {\n      const imageFileRef = ref(storage, `ProfileImage/${user.Id}`);\n      await uploadBytes(imageFileRef, newImage);\n      imageDownloadUrl = await getDownloadURL(imageFileRef);\n      console.log('Profile image url: ', imageDownloadUrl);\n      formData.append('ImageFile', imageDownloadUrl);\n    }\n    await updateUserProfile(storedUser.Id, formData);\n    console.log('update successfully');\n    window.location.reload();\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No user information found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '600px',\n        margin: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Profile Picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.imageFileName || defaultAvatar,\n          alt: \"Profile\",\n          style: {\n            width: '250px',\n            height: '250px',\n            borderRadius: '50%',\n            objectFit: 'cover'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newUsername,\n          onChange: e => setNewUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 28\n          }, this), \" \", user.userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePage, \"UopKSPrqt6Z8mC+qhvqXbuNxq84=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","getUserData","updateUserProfile","defaultAvatar","ref","uploadBytes","getDownloadURL","storage","jsxDEV","_jsxDEV","ProfilePage","_s","user","setUser","isEditing","setIsEditing","newUsername","setNewUsername","newImage","setNewImage","fetchUserData","storedUser","JSON","parse","localStorage","getItem","userId","Id","userData","userName","handleEdit","handleImageChange","event","target","files","handleSave","console","log","imageDownloadUrl","formData","FormData","append","imageFileRef","window","location","reload","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","src","imageFileName","alt","width","height","borderRadius","objectFit","onClick","marginTop","type","value","onChange","e","marginBottom","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/User/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getUserData, updateUserProfile } from \"../../Api/UserApi\"; // Make sure this path is correct\nimport defaultAvatar from '../../Img/DefaultAvatar.png';\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { storage } from \"../../firebase\";\nconst ProfilePage = () => {\n    const [user, setUser] = useState(null);\n    const [isEditing, setIsEditing] = useState(false);\n    const [newUsername, setNewUsername] = useState('');\n    const [newImage, setNewImage] = useState(null);\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            const storedUser = JSON.parse(localStorage.getItem('user'));\n            const userId = storedUser?.Id;\n            if (userId) {\n                const userData = await getUserData(userId);\n                setUser(userData);\n                setNewUsername(userData.userName);\n            }\n        };\n\n        fetchUserData();\n    }, []);\n\n    const handleEdit = () => {\n        setIsEditing(true);\n    };\n\n    const handleImageChange = (event) => {\n        setNewImage(event.target.files[0]);\n    };\n\n    const handleSave = async () => {\n        const storedUser = JSON.parse(localStorage.getItem('user'));\n        console.log('User data:', user);\n\n        setIsEditing(true)\n        let imageDownloadUrl='';\n        if (!user) return;\n        const formData = new FormData();\n        if (newUsername){\n            formData.append('Username', newUsername);\n        }\n\n        // if (song.imageFile && typeof song.imageFile !== 'string') {\n        //     const imageRef = ref(storage, `SoundTrackImage/${songId}`);\n        //     await uploadBytes(imageRef, song.imageFile).then(async (snapshot) => {\n        //         console.log('Uploaded a blob or file for image!');\n        //         await getDownloadURL(imageRef).then((newImageFileUrl) => {\n        //             updatedSongData.ImageFileUrl = newImageFileUrl;\n        //             console.log('New Image URL:', newImageFileUrl); // Should log the new image URL\n        //         });\n        //     });\n        // }\n        if(newImage){\n            const imageFileRef=ref(storage,`ProfileImage/${user.Id}`);\n            await uploadBytes(imageFileRef, newImage);\n            imageDownloadUrl=await getDownloadURL(imageFileRef);\n            console.log('Profile image url: ', imageDownloadUrl)\n            formData.append('ImageFile',imageDownloadUrl);\n        }\n        await updateUserProfile(storedUser.Id, formData);\n        console.log('update successfully')\n        window.location.reload();\n        setIsEditing(false);\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h1>Profile Page</h1>\n            {!user ? (\n                <div>No user information found.</div>\n            ) : (\n                <div style={{ maxWidth: '600px', margin: 'auto' }}>\n                    <h2>User Information</h2>\n                    <div>\n                        <h3>Profile Picture</h3>\n                        <img\n                            src={user.imageFileName || defaultAvatar}\n                            alt=\"Profile\"\n                            style={{\n                                width: '250px',\n                                height: '250px',\n                                borderRadius: '50%',\n                                objectFit: 'cover',\n                            }}\n                        />\n                        <button onClick={handleEdit}>Edit Profile</button>\n                    </div>\n\n                    {isEditing && (\n                        <div style={{ marginTop: '20px' }}>\n                            <input\n                                type=\"text\"\n                                value={newUsername}\n                                onChange={(e) => setNewUsername(e.target.value)}\n                            />\n                            <input type=\"file\" onChange={handleImageChange} />\n                            <button onClick={handleSave}>Save Changes</button>\n                        </div>\n                    )}\n\n                    <div style={{ marginBottom: '15px' }}>\n                        <p><strong>Username:</strong> {user.userName}</p>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ProfilePage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}