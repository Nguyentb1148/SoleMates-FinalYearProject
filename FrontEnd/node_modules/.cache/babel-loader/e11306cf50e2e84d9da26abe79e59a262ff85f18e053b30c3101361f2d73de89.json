{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/Song/EditSongPage.js\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { updateSongById, deleteSongById } from '../Api/SongApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditSongPage = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const {\n    songId\n  } = useParams();\n  const [song, setSong] = useState(null);\n  const history = useNavigate();\n  useEffect(() => {\n    // Fetch song data using songId\n    // Example: fetchSongById(songId);\n  }, [songId]);\n  const handleUpdate = async updatedSongData => {\n    _s();\n    try {\n      await updateSongById(songId, updatedSongData);\n      // Redirect to the song details page or any other page as needed\n      useNavigate(`/song/${songId}`);\n      window.location.reload();\n    } catch (error) {\n      console.error('Error updating the song:', error);\n    }\n  };\n  _s(handleUpdate, \"7z+bV9xHBQ1A1bt6m/1oQLk0tZA=\", false, function () {\n    return [useNavigate];\n  });\n  const handleDelete = async () => {\n    _s2();\n    try {\n      await deleteSongById(songId);\n      // Redirect to the song list page or any other page as needed\n      useNavigate('/ListSong');\n    } catch (error) {\n      console.error('Error deleting the song:', error);\n    }\n  };\n\n  // Render the edit form with song data\n  _s2(handleDelete, \"7z+bV9xHBQ1A1bt6m/1oQLk0tZA=\", false, function () {\n    return [useNavigate];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: song && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Edit Song: \", song.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Delete Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s3(EditSongPage, \"b/degJeq4QjkhrZxAxZ6WwFE/ew=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditSongPage;\nexport default EditSongPage;\nvar _c;\n$RefreshReg$(_c, \"EditSongPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","updateSongById","deleteSongById","jsxDEV","_jsxDEV","EditSongPage","_s3","_s","$RefreshSig$","_s2","songId","song","setSong","history","handleUpdate","updatedSongData","window","location","reload","error","console","handleDelete","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/Song/EditSongPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { updateSongById, deleteSongById } from '../Api/SongApi';\n\nconst EditSongPage = () => {\n    const { songId } = useParams();\n    const [song, setSong] = useState(null);\n    const history = useNavigate();\n\n    useEffect(() => {\n        // Fetch song data using songId\n        // Example: fetchSongById(songId);\n    }, [songId]);\n\n    const handleUpdate = async (updatedSongData) => {\n        try {\n            await updateSongById(songId, updatedSongData);\n            // Redirect to the song details page or any other page as needed\n            useNavigate(`/song/${songId}`);\n            window.location.reload();\n        } catch (error) {\n            console.error('Error updating the song:', error);\n        }\n    };\n\n    const handleDelete = async () => {\n        try {\n            await deleteSongById(songId);\n            // Redirect to the song list page or any other page as needed\n            useNavigate('/ListSong');\n        } catch (error) {\n            console.error('Error deleting the song:', error);\n        }\n    };\n\n    // Render the edit form with song data\n\n    return (\n        <div>\n            {song && (\n                <div>\n                    <h2>Edit Song: {song.title}</h2>\n                  \n                    <button onClick={handleDelete}>Delete Song</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default EditSongPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;IAAAC,GAAA,GAAAD,YAAA;EACvB,MAAM;IAAEE;EAAO,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMgB,OAAO,GAAGb,WAAW,CAAC,CAAC;EAE7BF,SAAS,CAAC,MAAM;IACZ;IACA;EAAA,CACH,EAAE,CAACY,MAAM,CAAC,CAAC;EAEZ,MAAMI,YAAY,GAAG,MAAOC,eAAe,IAAK;IAAAR,EAAA;IAC5C,IAAI;MACA,MAAMN,cAAc,CAACS,MAAM,EAAEK,eAAe,CAAC;MAC7C;MACAf,WAAW,CAAE,SAAQU,MAAO,EAAC,CAAC;MAC9BM,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAACZ,EAAA,CATIO,YAAY;IAAA,QAIVd,WAAW;EAAA;EAOnB,MAAMqB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAAAZ,GAAA;IAC7B,IAAI;MACA,MAAMP,cAAc,CAACQ,MAAM,CAAC;MAC5B;MACAV,WAAW,CAAC,WAAW,CAAC;IAC5B,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;;EAED;EAAAV,GAAA,CAVMY,YAAY;IAAA,QAIVrB,WAAW;EAAA;EAQnB,oBACII,OAAA;IAAAkB,QAAA,EACKX,IAAI,iBACDP,OAAA;MAAAkB,QAAA,gBACIlB,OAAA;QAAAkB,QAAA,GAAI,aAAW,EAACX,IAAI,CAACY,KAAK;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEhCvB,OAAA;QAAQwB,OAAO,EAAEP,YAAa;QAAAC,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACrB,GAAA,CA5CID,YAAY;EAAA,QACKN,SAAS,EAEZC,WAAW;AAAA;AAAA6B,EAAA,GAHzBxB,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}