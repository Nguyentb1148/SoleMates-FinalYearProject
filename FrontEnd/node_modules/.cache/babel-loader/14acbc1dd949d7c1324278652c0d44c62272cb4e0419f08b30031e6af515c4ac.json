{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/ListSong.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllSongsByUserId } from '../Api/SongApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListSong = () => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  useEffect(() => {\n    if (!user || !user.Id) {\n      console.error('User ID is missing');\n      return;\n    }\n    getAllSongsByUserId(user.Id).then(fetchedSongs => {\n      // Since we're not using localStorage anymore, there's no need to flatten the paginatedSongs\n      setSongs(fetchedSongs.flat());\n    }).catch(error => console.error('Error fetching songs:', error));\n  }, [user.Id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Songs by User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), \" \", song.Title, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [song.ImageData && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Image:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${song.ImageData}`,\n              alt: `${song.Title} cover art`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this), song.SoundTrackData && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Soundtrack:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                src: `data:audio/mpeg;base64,${song.SoundTrackData}`,\n                type: \"audio/mpeg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 41\n              }, this), \"Your browser does not support the audio element.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)]\n      }, song.SongId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(ListSong, \"VOyZriN/Fhf+BilZMpMEIr3tV0w=\");\n_c = ListSong;\nexport default ListSong;\nvar _c;\n$RefreshReg$(_c, \"ListSong\");","map":{"version":3,"names":["React","useState","useEffect","getAllSongsByUserId","jsxDEV","_jsxDEV","ListSong","_s","songs","setSongs","user","JSON","parse","localStorage","getItem","Id","console","error","then","fetchedSongs","flat","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","map","song","Title","ImageData","src","alt","SoundTrackData","controls","type","SongId","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/ListSong.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAllSongsByUserId } from '../Api/SongApi';\n\nconst ListSong = () => {\n    const [songs, setSongs] = useState([]);\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n\n    useEffect(() => {\n        if (!user || !user.Id) {\n            console.error('User ID is missing');\n            return;\n        }\n\n        getAllSongsByUserId(user.Id)\n            .then(fetchedSongs => {\n                // Since we're not using localStorage anymore, there's no need to flatten the paginatedSongs\n                setSongs(fetchedSongs.flat());\n            })\n            .catch(error => console.error('Error fetching songs:', error));\n    }, [user.Id]);\n\n    return (\n        <div>\n            <h2>Songs by User</h2>\n            <ul>\n                {songs.map((song) => (\n                    <li key={song.SongId}>\n                        <strong>Title:</strong> {song.Title}\n                        <div>\n                            {song.ImageData && (\n                                <div>\n                                    <p><strong>Image:</strong></p>\n                                    <img src={`data:image/png;base64,${song.ImageData}`} alt={`${song.Title} cover art`} />\n                                </div>\n                            )}\n                            {song.SoundTrackData && (\n                                <div>\n                                    <p><strong>Soundtrack:</strong></p>\n                                    <audio controls>\n                                        <source src={`data:audio/mpeg;base64,${song.SoundTrackData}`} type=\"audio/mpeg\" />\n                                        Your browser does not support the audio element.\n                                    </audio>\n                                </div>\n                            )}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default ListSong;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;EAE7DZ,SAAS,CAAC,MAAM;IACZ,IAAI,CAACQ,IAAI,IAAI,CAACA,IAAI,CAACK,EAAE,EAAE;MACnBC,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC;MACnC;IACJ;IAEAd,mBAAmB,CAACO,IAAI,CAACK,EAAE,CAAC,CACvBG,IAAI,CAACC,YAAY,IAAI;MAClB;MACAV,QAAQ,CAACU,YAAY,CAACC,IAAI,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CACDC,KAAK,CAACJ,KAAK,IAAID,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,CAACP,IAAI,CAACK,EAAE,CAAC,CAAC;EAEb,oBACIV,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBrB,OAAA;MAAAiB,QAAA,EACKd,KAAK,CAACmB,GAAG,CAAEC,IAAI,iBACZvB,OAAA;QAAAiB,QAAA,gBACIjB,OAAA;UAAAiB,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,IAAI,CAACC,KAAK,eACnCxB,OAAA;UAAAiB,QAAA,GACKM,IAAI,CAACE,SAAS,iBACXzB,OAAA;YAAAiB,QAAA,gBACIjB,OAAA;cAAAiB,QAAA,eAAGjB,OAAA;gBAAAiB,QAAA,EAAQ;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC9BrB,OAAA;cAAK0B,GAAG,EAAG,yBAAwBH,IAAI,CAACE,SAAU,EAAE;cAACE,GAAG,EAAG,GAAEJ,IAAI,CAACC,KAAM;YAAY;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtF,CACR,EACAE,IAAI,CAACK,cAAc,iBAChB5B,OAAA;YAAAiB,QAAA,gBACIjB,OAAA;cAAAiB,QAAA,eAAGjB,OAAA;gBAAAiB,QAAA,EAAQ;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACnCrB,OAAA;cAAO6B,QAAQ;cAAAZ,QAAA,gBACXjB,OAAA;gBAAQ0B,GAAG,EAAG,0BAAyBH,IAAI,CAACK,cAAe,EAAE;gBAACE,IAAI,EAAC;cAAY;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,oDAEtF;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GAlBDE,IAAI,CAACQ,MAAM;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBhB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACnB,EAAA,CA/CID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAiDd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}