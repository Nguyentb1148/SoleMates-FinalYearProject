{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Components/StoreOwner/ProductPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { deleteObject, getDownloadURL, listAll, ref, uploadBytes } from \"firebase/storage\";\nimport { storage } from \"../../firebase\";\nimport { addProduct, deleteProductById, GetAllProductNamesAndIds, getProductById, updateProductById } from \"../../utils/Api/ProductApi\";\nimport { addProductSize, getProductSizesByProductId, updateProductSize } from \"../../utils/Api/ProductSizeApi\";\nimport { Guid } from \"guid-typescript\";\nimport './ProductPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductPage = () => {\n  _s();\n  const [mainImage, setMainImage] = useState(null); // State to hold the main image\n  let [listImages, setListImages] = useState([]);\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [design, setDesign] = useState(0);\n  const [productLine, setProductLine] = useState(0);\n  const [material, setMaterial] = useState(0);\n  const [color, setColor] = useState(0);\n  const [products, setProducts] = useState([]);\n  const [sizes, setSizes] = useState([]);\n  const [ProductSizes, setProductSizes] = useState([]);\n  const [newSize, setNewSize] = useState('');\n  const [newQuantity, setNewQuantity] = useState('');\n  const [listImagesNull, setListImagesNull] = useState(false); // New state variable\n\n  const Design = ['LowTop', 'HighTop', 'Mule'];\n  const ProductLine = ['Basas', 'Vintas', 'Urbas', 'Pattas', 'Socks', 'Shoelaces'];\n  const Material = ['Canvas', 'Suede', 'Leather', 'Flannel', 'Corduroy'];\n  const Color = ['Gray', 'White', 'Cream', 'Charcoal', 'Teal', 'Beige', 'Silver', 'NavyBlue', 'OliveGreen', 'Lavender', 'Coral', 'CarrotOrange', 'CrimsonRed'];\n  const Size = ['35', '36', '36,5', '37', '38', '38,5', '39', '40', '40,5', '41', '42', '42,5', '43', '44', '44,5', '45', '46'];\n\n  // Maps for converting dropdown values to numbers\n  const designMap = {\n    LowTop: 0,\n    HighTop: 1,\n    Mule: 2\n  };\n  const productLineMap = {\n    Basas: 0,\n    Vintas: 1,\n    Urbas: 2,\n    Pattas: 3,\n    Socks: 4,\n    Shoelaces: 5\n  };\n  const materialMap = {\n    Canvas: 0,\n    Suede: 1,\n    Leather: 2,\n    Flannel: 3,\n    Corduroy: 4\n  };\n  const colorMap = {\n    Gray: 0,\n    White: 1,\n    Cream: 2,\n    Charcoal: 3,\n    Teal: 4,\n    Beige: 5,\n    Silver: 6,\n    NavyBlue: 7,\n    OliveGreen: 8,\n    Lavender: 9,\n    Coral: 10,\n    CarrotOrange: 11,\n    CrimsonRed: 12\n  };\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const productsData = await GetAllProductNamesAndIds();\n        console.log('product data list: ', productsData);\n        setProducts(productsData);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleMainImageClick = index => {\n    if (listImages[index]) {\n      setMainImage(listImages[index]);\n    } else {\n      setMainImage(listImages[0]);\n    }\n  };\n  const handleDeleteAllImages = async () => {\n    const confirmDelete = window.confirm('Are you sure you want to delete all images?');\n    if (confirmDelete) {\n      try {\n        if (selectedProduct) {\n          const imagesFolderRef = ref(storage, `products/${selectedProduct.productId}`);\n          const items = await listAll(imagesFolderRef);\n          await Promise.all(items.items.map(async item => {\n            await deleteObject(item);\n            console.log('Deleted file:', item.name);\n          }));\n        }\n        setMainImage(null);\n        setListImages([]);\n        setListImagesNull(true);\n        console.log('All images deleted successfully');\n      } catch (error) {\n        console.error('Error deleting images:', error);\n      }\n    }\n  };\n  const handleProductClick = async productId => {\n    try {\n      const productData = await getProductById(productId);\n      console.log('Product details:', productData);\n      setName(productData.name);\n      setDescription(productData.description);\n      setPrice(productData.price.toString());\n      setDesign(Design[productData.design]);\n      setProductLine(ProductLine[productData.productLine]);\n      setMaterial(Material[productData.material]);\n      setColor(Color[productData.color]);\n      setMainImage(productData.imageUrls[0]);\n      setListImages(productData.imageUrls);\n      setSelectedProduct(productData);\n      const productSizes = await getProductSizesByProductId(productId);\n      console.log('Product sizes:', productSizes);\n      setSizes(productSizes);\n      setProductSizes(productSizes);\n    } catch (error) {\n      console.error('Error fetching product details:', error);\n    }\n  };\n  const handleAddNewSize = () => {\n    if (newSize && newQuantity) {\n      if (Size.includes(newSize)) {\n        const sizeIndex = Size.indexOf(newSize);\n        const newSizeObject = {\n          size: sizeIndex,\n          quantity: parseInt(newQuantity),\n          addQuantity: ''\n        };\n        const updatedSizes = [...sizes, newSizeObject];\n        setSizes(updatedSizes);\n        setNewSize('');\n        setNewQuantity('');\n      } else {\n        console.error('Invalid size selected');\n      }\n    } else {\n      console.error('Please provide both size and quantity');\n    }\n  };\n  const handleAddQuantity = index => {\n    if (sizes[index].addQuantity) {\n      const updatedSizes = [...sizes];\n      updatedSizes[index].quantity += parseInt(sizes[index].addQuantity);\n      updatedSizes[index].addQuantity = ''; // Reset addQuantity\n      setSizes(updatedSizes);\n    } else {\n      console.error('Please provide a quantity to add');\n    }\n  };\n  const handleSizeChange = (index, field, value) => {\n    const updatedSizes = [...sizes];\n    if (field === 'addQuantity') {\n      updatedSizes[index] = {\n        ...updatedSizes[index],\n        [field]: isNaN(value) ? '' : parseInt(value)\n      };\n    } else if (field === 'size') {\n      const sanitizedValue = value.replace(',', '');\n      updatedSizes[index] = {\n        ...updatedSizes[index],\n        [field]: sanitizedValue\n      };\n    } else {\n      updatedSizes[index] = {\n        ...updatedSizes[index],\n        [field]: value\n      };\n    }\n    setSizes(updatedSizes);\n  };\n  const handleImageUpload = event => {\n    const files = event.target.files;\n    const fileArray = Array.from(files);\n    if (fileArray.length === 0) return;\n    const listImagePreviews = fileArray.map(file => URL.createObjectURL(file));\n    setListImages([...listImages, ...listImagePreviews]);\n    if (!mainImage && listImagePreviews.length > 0) {\n      setMainImage(listImagePreviews[0]);\n    }\n  };\n  const handleDeleteImage = async (productId, index) => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this image?');\n    if (confirmDelete) {\n      try {\n        const imageRef = ref(storage, `products/${productId}/image_${index}`);\n        await deleteObject(imageRef);\n        console.log('Deleted image:', imageRef.fullPath);\n        const updatedImageUrls = selectedProduct.imageUrls.filter((_, idx) => idx !== index);\n        setSelectedProduct(prevProduct => ({\n          ...prevProduct,\n          imageUrls: updatedImageUrls\n        }));\n        if (mainImage === listImages[index]) {\n          if (listImages.length > 1) {\n            setMainImage(listImages[0]);\n          } else {\n            setMainImage(null);\n          }\n        }\n        const updatedListImages = listImages.filter((_, idx) => idx !== index);\n        setListImages(updatedListImages);\n        if (updatedListImages.length === 0) {\n          setListImagesNull(true);\n        }\n      } catch (error) {\n        console.error('Error deleting image:', error);\n      }\n    }\n  };\n  const handleSaveProduct = async () => {\n    if (listImages.length === 0) {\n      console.error('No images to upload');\n      return;\n    }\n    const newProductId = Guid.create().toString();\n    const imageUrls = [];\n    try {\n      await Promise.all(listImages.map(async (image, index) => {\n        const imageRef = ref(storage, `products/${newProductId}/image_${index}`);\n        try {\n          const blob = await fetch(image).then(res => res.blob());\n          const snapshot = await uploadBytes(imageRef, blob);\n          const imageUrl = await getDownloadURL(snapshot.ref);\n          imageUrls.push(imageUrl);\n        } catch (error) {\n          console.error('Error uploading image:', error);\n        }\n      }));\n      const sortedImageUrls = imageUrls.sort((a, b) => {\n        const indexA = parseInt(a.match(/image_(\\d+)/)[1]);\n        const indexB = parseInt(b.match(/image_(\\d+)/)[1]);\n        return indexA - indexB;\n      });\n      const numericDesign = designMap[design];\n      const numericProductLine = productLineMap[productLine];\n      const numericMaterial = materialMap[material];\n      const numericColor = colorMap[color];\n      const updatedSizes = sizes.map(sizeObj => {\n        const sizeValue = Size[sizeObj.size];\n        console.log('size value:', sizeValue);\n        if (sizeObj.size !== -1) {\n          return {\n            size: sizeObj.size,\n            quantity: (parseInt(sizeObj.quantity) || 0) + (parseInt(sizeObj.addQuantity) || 0),\n            productSizeId: `${sizeValue}-${newProductId}`,\n            productId: newProductId\n          };\n        } else {\n          console.error('Invalid size index:', sizeObj.size);\n          return null;\n        }\n      }).filter(size => size !== null);\n      const productToSave = {\n        name,\n        description,\n        design: numericDesign,\n        productLine: numericProductLine,\n        material: numericMaterial,\n        color: numericColor,\n        price: parseFloat(price),\n        sizes: updatedSizes,\n        productId: newProductId,\n        imageUrls: sortedImageUrls\n      };\n      const response = await addProduct(productToSave);\n      await Promise.all(updatedSizes.map(async size => {\n        const productSizeData = {\n          ProductSizeId: size.productSizeId,\n          Size: size.size,\n          Quantity: size.quantity,\n          ProductId: newProductId\n        };\n        await addProductSize(productSizeData);\n      }));\n      console.log('Product sizes added successfully');\n    } catch (error) {\n      console.error('Error saving product:', error);\n    }\n  };\n  const handleEditProduct = async productId => {\n    try {\n      if (!selectedProduct) {\n        console.error('No product selected for editing');\n        return;\n      }\n      const newImageFiles = listImages.filter(image => !selectedProduct.imageUrls.includes(image));\n      const updatedImageUrls = await Promise.all(newImageFiles.map(async (imageFile, index) => {\n        const imageRef = ref(storage, `products/${productId}/image_${selectedProduct.imageUrls.length + index}`);\n        try {\n          const blob = await fetch(imageFile).then(res => res.blob());\n          await uploadBytes(imageRef, blob);\n          return await getDownloadURL(imageRef);\n        } catch (error) {\n          console.error('Error uploading image:', error);\n          return null;\n        }\n      }));\n      let imageUrls;\n      if (listImagesNull) {\n        imageUrls = updatedImageUrls;\n      } else {\n        const remainingImageUrls = selectedProduct.imageUrls.filter(url => !newImageFiles.includes(url));\n        imageUrls = [...remainingImageUrls, ...updatedImageUrls];\n      }\n      let numericDesign = designMap[selectedProduct.design];\n      let numericProductLine = productLineMap[selectedProduct.productLine];\n      let numericMaterial = materialMap[selectedProduct.material];\n      let numericColor = colorMap[selectedProduct.color];\n      if (design !== selectedProduct.design) {\n        numericDesign = designMap[design];\n      }\n      if (productLine !== selectedProduct.productLine) {\n        numericProductLine = productLineMap[productLine];\n      }\n      if (material !== selectedProduct.material) {\n        numericMaterial = materialMap[material];\n      }\n      if (color !== selectedProduct.color) {\n        numericColor = colorMap[color];\n      }\n      console.log('ProductSizes: ', ProductSizes);\n      for (const item of sizes) {\n        const index = sizes.indexOf(item);\n        let productOfSizeId = item.productId;\n        let sizeValue = Size[item.size];\n        let productSizeId = item.productSizeId;\n        if (!productOfSizeId) {\n          productOfSizeId = productId;\n        }\n        if (!productSizeId) {\n          productSizeId = `${sizeValue}-${productId}`;\n        }\n        if (!ProductSizes.find(size => size.size === item.size)) {\n          console.log('New size detected:', sizeValue);\n          sizes[index].productId = productOfSizeId;\n          sizes[index].productSizeId = productSizeId;\n          try {\n            await addProductSize({\n              productId: productOfSizeId,\n              productSizeId: productSizeId,\n              size: item.size,\n              quantity: item.quantity\n            });\n            console.log('New size added successfully:', sizeValue);\n          } catch (error) {\n            console.error('Error adding new size:', error);\n          }\n        }\n      }\n      const updatedProduct = {\n        productId,\n        name,\n        description,\n        design: numericDesign,\n        productLine: numericProductLine,\n        material: numericMaterial,\n        color: numericColor,\n        price: parseFloat(price),\n        sizes: sizes.map(size => ({\n          ...size,\n          productSizeId: `${Size[size.size]}-${productId}`\n        })),\n        imageUrls: imageUrls\n      };\n      const productSizeUpdatePromises = sizes.map(async size => {\n        try {\n          await updateProductSize(size.productSizeId, {\n            Size: size.size,\n            Quantity: size.quantity,\n            ProductId: productId,\n            ProductSizeId: size.productSizeId\n          });\n          console.log('Product size updated successfully for size:', size.productSizeId);\n        } catch (error) {\n          console.error('Error updating product size:', error);\n        }\n      });\n      await Promise.all(productSizeUpdatePromises);\n      setSelectedProduct(prevProduct => ({\n        ...prevProduct,\n        imageUrls: imageUrls\n      }));\n      const response = await updateProductById(productId, updatedProduct);\n      console.log('Product updated successfully:', response);\n    } catch (error) {\n      console.error('Error updating product:', error);\n    }\n  };\n  const handleDeleteProduct = async productId => {\n    try {\n      const response = await deleteProductById(productId);\n      const imagesFolderRef = ref(storage, `products/${productId}`);\n      const items = await listAll(imagesFolderRef);\n      await Promise.all(items.items.map(async item => {\n        await deleteObject(item);\n        console.log('Deleted file:', item.name);\n      }));\n    } catch (error) {\n      console.error('Error deleting product:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productpage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"productlist\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Product List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-productlist\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: '#f2f2f2'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '5px',\n                textAlign: 'left'\n              },\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => handleProductClick(product.item1),\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"product-list-item\",\n              children: product.item2\n            }, product.item1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 29\n            }, this)\n          }, product.item1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-detail\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              justifyContent: 'space-between',\n              border: '1px solid #ccc',\n              width: '70%',\n              maxWidth: '350px',\n              maxHeight: '350px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative',\n                marginBottom: '2px',\n                padding: '3px'\n              },\n              children: mainImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: mainImage,\n                alt: \"image\",\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              overflowX: 'scroll',\n              marginBottom: '5px',\n              width: '30%',\n              maxHeight: '350px',\n              maxWidth: '115px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              multiple: true,\n              onChange: handleImageUpload,\n              style: {\n                marginBottom: '3px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 29\n            }, this), listImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: image,\n                alt: `Image ${index}`,\n                style: {\n                  maxWidth: '100px',\n                  maxHeight: '100px',\n                  objectFit: 'cover',\n                  cursor: 'pointer'\n                },\n                onClick: () => handleMainImageClick(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteImage(selectedProduct.productId, index),\n                style: {\n                  position: 'absolute',\n                  top: '1px',\n                  right: '1px',\n                  backgroundColor: 'gray',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '50%',\n                  width: '18px',\n                  height: '18px',\n                  padding: '0',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  cursor: 'pointer'\n                },\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              width: '70%',\n              height: '350px',\n              border: '1px solid #ccc',\n              marginRight: '10px',\n              boxSizing: 'border-box'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n                boxSizing: 'border-box',\n                padding: '4px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: name,\n                  onChange: e => setName(e.target.value),\n                  style: {\n                    width: '90%',\n                    height: '20px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: description,\n                  onChange: e => setDescription(e.target.value),\n                  style: {\n                    width: '95%',\n                    height: '100px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: price,\n                  onChange: e => setPrice(e.target.value),\n                  style: {\n                    width: '20%',\n                    height: '20px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [listImages.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeleteAllImages,\n            style: {\n              backgroundColor: 'red',\n              color: 'white',\n              padding: '10px',\n              fontSize: '15px',\n              fontWeight: 'bold'\n            },\n            children: \"Delete All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 29\n          }, this), selectedProduct ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditProduct(selectedProduct.productId),\n              style: {\n                backgroundColor: 'green',\n                color: 'white',\n                padding: '10px',\n                fontSize: '15px',\n                fontWeight: 'bold'\n              },\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteProduct(selectedProduct.productId),\n              style: {\n                backgroundColor: 'red',\n                color: 'white',\n                padding: '10px',\n                fontSize: '15px',\n                fontWeight: 'bold'\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveProduct,\n            style: {\n              backgroundColor: 'blue',\n              color: 'white',\n              padding: '10px',\n              fontSize: '15px',\n              fontWeight: 'bold'\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              marginRight: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Design\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              style: {\n                width: '100%'\n              },\n              value: design,\n              onChange: e => setDesign(e.target.value),\n              children: Design.map((designOption, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: designOption,\n                children: designOption\n              }, designOption, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              marginRight: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Product Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              style: {\n                width: '100%'\n              },\n              value: productLine,\n              onChange: e => setProductLine(e.target.value),\n              children: ProductLine.map((productLine, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: productLine,\n                children: productLine\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              marginRight: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Material\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              style: {\n                width: '100%'\n              },\n              value: material,\n              onChange: e => setMaterial(e.target.value),\n              children: Material.map((material, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: material,\n                children: material\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              style: {\n                width: '100%'\n              },\n              value: color,\n              onChange: e => setColor(e.target.value),\n              children: Color.map((color, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: color,\n                style: {\n                  backgroundColor: color.toLowerCase(),\n                  color: 'white'\n                },\n                children: color\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            width: '800px',\n            justifyContent: 'space-between',\n            alignItems: 'flex-start',\n            padding: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              marginRight: '10px',\n              overflowY: 'auto',\n              maxHeight: '400px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              style: {\n                width: '100%',\n                borderCollapse: 'collapse',\n                border: '1px solid #ccc'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  style: {\n                    backgroundColor: '#f2f2f2'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding: '10px',\n                      textAlign: 'left'\n                    },\n                    children: \"Size\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding: '10px',\n                      textAlign: 'left'\n                    },\n                    children: \"Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding: '10px',\n                      textAlign: 'left'\n                    },\n                    children: \"Add Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding: '10px',\n                      textAlign: 'left'\n                    },\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [sizes.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"4\",\n                    style: {\n                      textAlign: 'center',\n                      padding: '10px'\n                    },\n                    children: \"No sizes added yet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 37\n                }, this) : sizes.map((size, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  style: {\n                    backgroundColor: 'white',\n                    border: '1px solid #ccc'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      padding: '10px',\n                      textAlign: 'left'\n                    },\n                    children: Size[size.size]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      padding: '10px',\n                      textAlign: 'left'\n                    },\n                    children: size.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      padding: '10px',\n                      textAlign: 'left'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: size.addQuantity,\n                      onChange: e => handleSizeChange(index, 'addQuantity', e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 533,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      padding: '5px',\n                      textAlign: 'left'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleAddQuantity(index),\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 536,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 45\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 41\n                }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  style: {\n                    backgroundColor: 'white',\n                    border: '1px solid #ccc'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: newSize,\n                      onChange: e => setNewSize(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Size\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 544,\n                        columnNumber: 45\n                      }, this), Size.map((size, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: size,\n                        children: size\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 546,\n                        columnNumber: 49\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: newQuantity,\n                      onChange: e => setNewQuantity(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 551,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 550,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleAddNewSize,\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductPage, \"5zhiqYHNC6TgQrNDyl1a7oVyk/U=\");\n_c = ProductPage;\nexport default ProductPage;\nvar _c;\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"names":["React","useEffect","useState","deleteObject","getDownloadURL","listAll","ref","uploadBytes","storage","addProduct","deleteProductById","GetAllProductNamesAndIds","getProductById","updateProductById","addProductSize","getProductSizesByProductId","updateProductSize","Guid","jsxDEV","_jsxDEV","ProductPage","_s","mainImage","setMainImage","listImages","setListImages","name","setName","price","setPrice","description","setDescription","design","setDesign","productLine","setProductLine","material","setMaterial","color","setColor","products","setProducts","sizes","setSizes","ProductSizes","setProductSizes","newSize","setNewSize","newQuantity","setNewQuantity","listImagesNull","setListImagesNull","Design","ProductLine","Material","Color","Size","designMap","LowTop","HighTop","Mule","productLineMap","Basas","Vintas","Urbas","Pattas","Socks","Shoelaces","materialMap","Canvas","Suede","Leather","Flannel","Corduroy","colorMap","Gray","White","Cream","Charcoal","Teal","Beige","Silver","NavyBlue","OliveGreen","Lavender","Coral","CarrotOrange","CrimsonRed","selectedProduct","setSelectedProduct","fetchProducts","productsData","console","log","error","handleMainImageClick","index","handleDeleteAllImages","confirmDelete","window","confirm","imagesFolderRef","productId","items","Promise","all","map","item","handleProductClick","productData","toString","imageUrls","productSizes","handleAddNewSize","includes","sizeIndex","indexOf","newSizeObject","size","quantity","parseInt","addQuantity","updatedSizes","handleAddQuantity","handleSizeChange","field","value","isNaN","sanitizedValue","replace","handleImageUpload","event","files","target","fileArray","Array","from","length","listImagePreviews","file","URL","createObjectURL","handleDeleteImage","imageRef","fullPath","updatedImageUrls","filter","_","idx","prevProduct","updatedListImages","handleSaveProduct","newProductId","create","image","blob","fetch","then","res","snapshot","imageUrl","push","sortedImageUrls","sort","a","b","indexA","match","indexB","numericDesign","numericProductLine","numericMaterial","numericColor","sizeObj","sizeValue","productSizeId","productToSave","parseFloat","response","productSizeData","ProductSizeId","Quantity","ProductId","handleEditProduct","newImageFiles","imageFile","remainingImageUrls","url","productOfSizeId","find","updatedProduct","productSizeUpdatePromises","handleDeleteProduct","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","padding","textAlign","product","onClick","item1","item2","display","marginBottom","justifyContent","border","width","maxWidth","maxHeight","position","src","alt","flexDirection","overflowX","type","accept","multiple","onChange","objectFit","cursor","top","right","borderRadius","height","alignItems","marginRight","boxSizing","e","fontSize","fontWeight","flex","designOption","toLowerCase","overflowY","borderCollapse","colSpan","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Components/StoreOwner/ProductPage.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {deleteObject, getDownloadURL, listAll, ref, uploadBytes} from \"firebase/storage\";\nimport {storage} from \"../../firebase\";\nimport {addProduct, deleteProductById, GetAllProductNamesAndIds, getProductById, updateProductById} from \"../../utils/Api/ProductApi\";\nimport {addProductSize, getProductSizesByProductId, updateProductSize} from \"../../utils/Api/ProductSizeApi\";\nimport {Guid} from \"guid-typescript\";\nimport './ProductPage.css'\nconst ProductPage = () => {\n\n    const [mainImage, setMainImage] = useState(null); // State to hold the main image\n    let [listImages, setListImages] = useState([]);\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [description, setDescription] = useState('');\n    const [design, setDesign] = useState(0);\n    const [productLine, setProductLine] = useState(0);\n    const [material, setMaterial] = useState(0);\n    const [color, setColor] = useState(0);\n    const [products, setProducts] = useState([]);\n    const [sizes, setSizes] = useState([]);\n    const [ProductSizes,setProductSizes]=useState([]);\n    const [newSize, setNewSize] = useState('');\n    const [newQuantity, setNewQuantity] = useState('');\n    const [listImagesNull, setListImagesNull] = useState(false); // New state variable\n\n    const Design = ['LowTop', 'HighTop', 'Mule'];\n    const ProductLine = ['Basas', 'Vintas', 'Urbas', 'Pattas', 'Socks', 'Shoelaces'];\n    const Material = ['Canvas', 'Suede', 'Leather', 'Flannel', 'Corduroy'];\n    const Color = ['Gray', 'White', 'Cream', 'Charcoal', 'Teal', 'Beige', 'Silver', 'NavyBlue', 'OliveGreen', 'Lavender', 'Coral', 'CarrotOrange', 'CrimsonRed'];\n    const Size = ['35', '36', '36,5', '37', '38', '38,5', '39', '40', '40,5', '41', '42', '42,5', '43', '44', '44,5', '45', '46'];\n\n    // Maps for converting dropdown values to numbers\n    const designMap = { LowTop: 0, HighTop: 1, Mule: 2 };\n    const productLineMap = { Basas: 0, Vintas: 1, Urbas: 2, Pattas: 3, Socks: 4, Shoelaces: 5 };\n    const materialMap = { Canvas: 0, Suede: 1, Leather: 2, Flannel: 3, Corduroy: 4 };\n    const colorMap = {Gray: 0, White: 1, Cream: 2, Charcoal: 3, Teal: 4, Beige: 5, Silver: 6, NavyBlue: 7, OliveGreen: 8, Lavender: 9, Coral: 10, CarrotOrange: 11, CrimsonRed: 12};\n\n    const [selectedProduct, setSelectedProduct] = useState(null);\n    useEffect(() => {\n        const fetchProducts = async () => {\n            try {\n                const productsData = await GetAllProductNamesAndIds();\n                console.log('product data list: ',productsData)\n                setProducts(productsData);\n            } catch (error) {\n                console.error('Error fetching products:', error);\n            }\n        };\n\n        fetchProducts();\n    }, []);\n    const handleMainImageClick = (index) => {\n        if (listImages[index]) {\n            setMainImage(listImages[index]);\n        }\n        else {\n            setMainImage(listImages[0]);\n        }\n    };\n    const handleDeleteAllImages = async () => {\n        const confirmDelete = window.confirm('Are you sure you want to delete all images?');\n        if (confirmDelete) {\n            try {\n                if (selectedProduct) {\n                    const imagesFolderRef = ref(storage, `products/${selectedProduct.productId}`);\n                    const items = await listAll(imagesFolderRef);\n                    await Promise.all(items.items.map(async (item) => {\n                        await deleteObject(item);\n                        console.log('Deleted file:', item.name);\n                    }));\n                }\n                setMainImage(null);\n                setListImages([]);\n                setListImagesNull(true);\n                console.log('All images deleted successfully');\n            } catch (error) {\n                console.error('Error deleting images:', error);\n            }\n        }\n    };\n    const handleProductClick = async (productId) => {\n        try {\n            const productData = await getProductById(productId);\n            console.log('Product details:', productData);\n            setName(productData.name);\n            setDescription(productData.description);\n            setPrice(productData.price.toString());\n            setDesign(Design[productData.design]);\n            setProductLine(ProductLine[productData.productLine]);\n            setMaterial(Material[productData.material]);\n            setColor(Color[productData.color]);\n\n            setMainImage(productData.imageUrls[0]);\n            setListImages(productData.imageUrls);\n            setSelectedProduct(productData);\n\n            const productSizes = await getProductSizesByProductId(productId);\n            console.log('Product sizes:', productSizes);\n            setSizes(productSizes);\n            setProductSizes(productSizes);\n\n        } catch (error) {\n            console.error('Error fetching product details:', error);\n        }\n    };\n    const handleAddNewSize = () => {\n        if (newSize && newQuantity) {\n            if (Size.includes(newSize)) {\n                const sizeIndex = Size.indexOf(newSize);\n                const newSizeObject = { size: sizeIndex, quantity: parseInt(newQuantity), addQuantity: '' };\n                const updatedSizes = [...sizes, newSizeObject];\n\n                setSizes(updatedSizes);\n                setNewSize('');\n                setNewQuantity('');\n\n            } else {\n                console.error('Invalid size selected');\n            }\n        } else {\n            console.error('Please provide both size and quantity');\n        }\n    };\n    const handleAddQuantity = (index) => {\n        if (sizes[index].addQuantity) {\n            const updatedSizes = [...sizes];\n            updatedSizes[index].quantity += parseInt(sizes[index].addQuantity);\n            updatedSizes[index].addQuantity = ''; // Reset addQuantity\n            setSizes(updatedSizes);\n        } else {\n            console.error('Please provide a quantity to add');\n        }\n    };\n    const handleSizeChange = (index, field, value) => {\n        const updatedSizes = [...sizes];\n        if (field === 'addQuantity') {\n            updatedSizes[index] = {\n                ...updatedSizes[index],\n                [field]: isNaN(value) ? '' : parseInt(value)\n            };\n        } else if (field === 'size') {\n            const sanitizedValue = value.replace(',', '');\n            updatedSizes[index] = {\n                ...updatedSizes[index],\n                [field]: sanitizedValue\n            };\n        } else {\n            updatedSizes[index] = {\n                ...updatedSizes[index],\n                [field]: value\n            };\n        }\n        setSizes(updatedSizes);\n    };\n    const handleImageUpload = (event) => {\n        const files = event.target.files;\n        const fileArray = Array.from(files);\n        if (fileArray.length === 0) return;\n        const listImagePreviews = fileArray.map(file => URL.createObjectURL(file));\n        setListImages([...listImages, ...listImagePreviews]);\n        if (!mainImage && listImagePreviews.length > 0) {\n            setMainImage(listImagePreviews[0]);\n        }\n    };\n    const handleDeleteImage = async (productId, index) => {\n        const confirmDelete = window.confirm('Are you sure you want to delete this image?');\n        if (confirmDelete) {\n            try {\n                const imageRef = ref(storage, `products/${productId}/image_${index}`);\n                await deleteObject(imageRef);\n                console.log('Deleted image:', imageRef.fullPath);\n                const updatedImageUrls = selectedProduct.imageUrls.filter((_, idx) => idx !== index);\n                setSelectedProduct(prevProduct => ({\n                    ...prevProduct,\n                    imageUrls: updatedImageUrls,\n                }));\n                if (mainImage === listImages[index]) {\n                    if (listImages.length > 1) {\n                        setMainImage(listImages[0]);\n                    } else {\n                        setMainImage(null);\n                    }\n                }\n                const updatedListImages = listImages.filter((_, idx) => idx !== index);\n                setListImages(updatedListImages);\n                if (updatedListImages.length === 0) {\n                    setListImagesNull(true);\n                }\n            } catch (error) {\n                console.error('Error deleting image:', error);\n            }\n        }\n    };\n    const handleSaveProduct = async () => {\n        if (listImages.length === 0) {\n            console.error('No images to upload');\n            return;\n        }\n        const newProductId = Guid.create().toString();\n        const imageUrls = [];\n        try {\n            await Promise.all(listImages.map(async (image, index) => {\n                const imageRef = ref(storage, `products/${newProductId}/image_${index}`);\n                try {\n                    const blob = await fetch(image).then(res => res.blob());\n                    const snapshot = await uploadBytes(imageRef, blob);\n                    const imageUrl = await getDownloadURL(snapshot.ref);\n                    imageUrls.push(imageUrl);\n                } catch (error) {\n                    console.error('Error uploading image:', error);\n                }\n            }));\n            const sortedImageUrls = imageUrls.sort((a, b) => {\n                const indexA = parseInt(a.match(/image_(\\d+)/)[1]);\n                const indexB = parseInt(b.match(/image_(\\d+)/)[1]);\n                return indexA - indexB;\n            });\n            const numericDesign = designMap[design];\n            const numericProductLine = productLineMap[productLine];\n            const numericMaterial = materialMap[material];\n            const numericColor = colorMap[color];\n            const updatedSizes = sizes.map((sizeObj) => {\n                const sizeValue = Size[sizeObj.size];\n                console.log('size value:', sizeValue);\n\n                if (sizeObj.size !== -1) {\n                    return {\n                        size: sizeObj.size,\n                        quantity: (parseInt(sizeObj.quantity) || 0) + (parseInt(sizeObj.addQuantity) || 0),\n                        productSizeId: `${sizeValue}-${newProductId}`,\n                        productId: newProductId\n                    };\n                } else {\n                    console.error('Invalid size index:', sizeObj.size);\n                    return null;\n                }\n            }).filter(size => size !== null);\n            const productToSave = {\n                name,\n                description,\n                design: numericDesign,\n                productLine: numericProductLine,\n                material: numericMaterial,\n                color: numericColor,\n                price: parseFloat(price),\n                sizes: updatedSizes,\n                productId: newProductId,\n                imageUrls: sortedImageUrls,\n            };\n            const response = await addProduct(productToSave);\n            await Promise.all(updatedSizes.map(async (size) => {\n                const productSizeData = {\n                    ProductSizeId: size.productSizeId,\n                    Size: size.size,\n                    Quantity: size.quantity,\n                    ProductId: newProductId\n                };\n                await addProductSize(productSizeData);\n            }));\n    \n            console.log('Product sizes added successfully');\n        } catch (error) {\n            console.error('Error saving product:', error);\n        }\n    };\n    const handleEditProduct = async (productId) => {\n        try {\n            if (!selectedProduct) {\n                console.error('No product selected for editing');\n                return;\n            }\n            const newImageFiles = listImages.filter(image => !selectedProduct.imageUrls.includes(image));\n            const updatedImageUrls = await Promise.all(newImageFiles.map(async (imageFile, index) => {\n                const imageRef = ref(storage, `products/${productId}/image_${selectedProduct.imageUrls.length + index}`);\n                try {\n                    const blob = await fetch(imageFile).then(res => res.blob());\n                    await uploadBytes(imageRef, blob);\n                    return await getDownloadURL(imageRef);\n                } catch (error) {\n                    console.error('Error uploading image:', error);\n                    return null;\n                }\n            }));\n            let imageUrls;\n            if (listImagesNull) {\n                imageUrls = updatedImageUrls;\n            } else {\n                const remainingImageUrls = selectedProduct.imageUrls.filter(url => !newImageFiles.includes(url));\n                imageUrls = [...remainingImageUrls, ...updatedImageUrls];\n            }\n            let numericDesign = designMap[selectedProduct.design];\n            let numericProductLine = productLineMap[selectedProduct.productLine];\n            let numericMaterial = materialMap[selectedProduct.material];\n            let numericColor = colorMap[selectedProduct.color];\n            if (design !== selectedProduct.design) {\n                numericDesign = designMap[design];\n            }\n            if (productLine !== selectedProduct.productLine) {\n                numericProductLine = productLineMap[productLine];\n            }\n            if (material !== selectedProduct.material) {\n                numericMaterial = materialMap[material];\n            }\n            if (color !== selectedProduct.color) {\n                numericColor = colorMap[color];\n            }\n            console.log('ProductSizes: ', ProductSizes);\n            for (const item of sizes) {\n                const index = sizes.indexOf(item);\n                let productOfSizeId = item.productId;\n                let sizeValue = Size[item.size];\n                let productSizeId = item.productSizeId;\n                if (!productOfSizeId) {\n                    productOfSizeId = productId;\n                }\n                if (!productSizeId) {\n                    productSizeId = `${sizeValue}-${productId}`;\n                }\n                if (!ProductSizes.find(size => size.size === item.size)) {\n                    console.log('New size detected:', sizeValue);\n                    sizes[index].productId = productOfSizeId;\n                    sizes[index].productSizeId = productSizeId;\n                    try {\n                        await addProductSize({\n                            productId: productOfSizeId,\n                            productSizeId: productSizeId,\n                            size: item.size,\n                            quantity:item.quantity\n                        });\n                        console.log('New size added successfully:', sizeValue);\n                    } catch (error) {\n                        console.error('Error adding new size:', error);\n                    }\n                }\n            }\n            const updatedProduct = {\n                productId,\n                name,\n                description,\n                design: numericDesign,\n                productLine: numericProductLine,\n                material: numericMaterial,\n                color: numericColor,\n                price: parseFloat(price),\n                sizes: sizes.map(size => ({\n                    ...size,\n                    productSizeId: `${Size[size.size]}-${productId}`,\n                })),\n                imageUrls: imageUrls,\n            };\n            const productSizeUpdatePromises = sizes.map(async (size) => {\n                try {\n                    await updateProductSize(size.productSizeId, {\n                        Size: size.size,\n                        Quantity: size.quantity,\n                        ProductId:productId,\n                        ProductSizeId:size.productSizeId\n                    });\n                    console.log('Product size updated successfully for size:', size.productSizeId);\n                } catch (error) {\n                    console.error('Error updating product size:', error);\n                }\n            });\n            await Promise.all(productSizeUpdatePromises);\n            setSelectedProduct(prevProduct => ({\n                ...prevProduct,\n                imageUrls: imageUrls,\n            }));\n            const response = await updateProductById(productId, updatedProduct);\n            console.log('Product updated successfully:', response);\n        } catch (error) {\n            console.error('Error updating product:', error);\n        }\n    };\n    const handleDeleteProduct = async (productId) => {\n        try {\n            const response = await deleteProductById(productId);\n            const imagesFolderRef = ref(storage, `products/${productId}`);\n            const items = await listAll(imagesFolderRef);\n            await Promise.all(items.items.map(async (item) => {\n                await deleteObject(item);\n                console.log('Deleted file:', item.name);\n            }));\n        } catch (error) {\n            console.error('Error deleting product:', error);\n        }\n    };\n    return (\n        <div className=\"productpage-container\">\n            {/* Product List */}\n            <div className=\"productlist\">\n                <h1>Product List</h1>\n                <table className=\"table-productlist\">\n                    <thead>\n                    <tr style={{ backgroundColor: '#f2f2f2' }}>\n                        <th style={{ padding: '5px', textAlign: 'left' }}>Name</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {products.map(product => (\n                        <tr key={product.item1} onClick={() => handleProductClick(product.item1)}>\n                            <td key={product.item1} className=\"product-list-item\">{product.item2}</td>\n                        </tr>\n                    ))}\n\n                    </tbody>\n                </table>\n            </div>\n            {/* Product Details */}\n            <div className=\"product-detail\">\n                {/* Left Section */}\n                <div className=\"left-section\">\n                    {/*Top information*/}\n                    <div style={{ display: 'flex', marginBottom: '20px' }}>\n                        {/* Main image */}\n                        <div style={{ justifyContent: 'space-between',border: '1px solid #ccc',width: '70%',maxWidth:'350px',maxHeight:'350px' }}>\n                            {/*<input type=\"file\" accept=\"image/*\" onChange={handleMainImageUpload} style={{ display: 'none' }} id=\"mainImageUploadInput\" />*/}\n                            <div style={{ position: 'relative', marginBottom: '2px',padding:'3px' }}>\n                                {mainImage && (\n                                    <img\n                                        src={mainImage}\n                                        alt=\"image\"\n                                        style={{ display:'flex',justifyContent: 'space-between' }}\n                                    />\n                                )}\n\n                            </div>\n                        </div>\n                        {/* List images */}\n                        <div style={{ display: 'flex', flexDirection: 'column', overflowX: 'scroll', marginBottom: '5px', width: '30%', maxHeight: '350px', maxWidth: '115px' }}>\n                            <input type=\"file\" accept=\"image/*\" multiple onChange={handleImageUpload} style={{ marginBottom: '3px' }} />\n                            {listImages.map((image, index) => (\n                                <div key={index} style={{ position: 'relative' }}>\n                                    <img src={image} alt={`Image ${index}`} style={{ maxWidth: '100px', maxHeight: '100px', objectFit: 'cover', cursor: 'pointer' }} onClick={() => handleMainImageClick(index)} />\n                                    <button onClick={() => handleDeleteImage(selectedProduct.productId, index)} style={{ position: 'absolute', top: '1px', right: '1px', backgroundColor: 'gray', color: 'white', border: 'none', borderRadius: '50%', width: '18px', height: '18px', padding: '0', display: 'flex', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}>X</button>\n                                </div>\n                            ))}\n                        </div>\n                        {/* Product Information */}\n                        <div style={{ display: 'flex', flexDirection: 'column', width: '70%', height: '350px', border: '1px solid #ccc', marginRight: '10px', boxSizing: 'border-box' }}>\n                            <div style={{ display: 'flex', flexDirection: 'column', height: '100%', boxSizing: 'border-box', padding: '4px' }}>\n                                <div>\n                                    <h3>Name:</h3>\n                                    <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} style={{ width: '90%',height:'20px' }} />\n                                </div>\n                                <div>\n                                    <h3>Description:</h3>\n                                    <textarea value={description} onChange={(e) => setDescription(e.target.value)} style={{ width: '95%', height: '100px' }} />\n                                </div>\n                                <div>\n                                    <h3>Price:</h3>\n                                    <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} style={{ width: '20%',height:'20px' }} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {/*Buttons*/}\n                    <div>\n                        {listImages.length > 0 && (\n                            <button onClick={handleDeleteAllImages} style={{ backgroundColor: 'red', color: 'white', padding: '10px', fontSize: '15px', fontWeight: 'bold' }}>Delete All</button>\n                        )}\n                        {selectedProduct ? (\n                            <div>\n                                <button onClick={() => handleEditProduct(selectedProduct.productId)} style={{ backgroundColor: 'green', color: 'white', padding: '10px', fontSize: '15px', fontWeight: 'bold' }}>Update</button>\n                                <button onClick={() => handleDeleteProduct(selectedProduct.productId)} style={{ backgroundColor: 'red', color: 'white', padding: '10px', fontSize: '15px', fontWeight: 'bold' }}>Delete</button>\n                            </div>\n                        ) :\n                            <button onClick={handleSaveProduct} style={{ backgroundColor: 'blue', color: 'white', padding: '10px', fontSize: '15px', fontWeight: 'bold' }}>Add</button>\n                        }\n                    </div>\n\n                    {/*design,line,material,color*/}\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\n                        <div style={{ flex: 1, marginRight: '20px' }}>\n                            <h3>Design</h3>\n                            <select style={{ width: '100%' }} value={design} onChange={(e) => setDesign(e.target.value)}>\n                                {Design.map((designOption, index) => (\n                                    <option key={designOption} value={designOption}>{designOption}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div style={{ flex: 1, marginRight: '20px' }}>\n                            <h3>Product Line</h3>\n                            <select style={{ width: '100%' }} value={productLine} onChange={(e) => setProductLine(e.target.value)}>\n                                {ProductLine.map((productLine, index) => (\n                                    <option key={index} value={productLine}>{productLine}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div style={{ flex: 1, marginRight: '20px' }}>\n                            <h3>Material</h3>\n                            <select style={{ width: '100%' }} value={material} onChange={(e) => setMaterial(e.target.value)}>\n                                {Material.map((material, index) => (\n                                    <option key={index} value={material}>{material}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div style={{ flex: 1 }}>\n                            <h3>Color</h3>\n                            <select style={{ width: '100%' }} value={color} onChange={(e) => setColor(e.target.value)}>\n                                {Color.map((color, index) => (\n                                    <option key={index} value={color} style={{ backgroundColor: color.toLowerCase(), color: 'white' }}>\n                                        {color}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n\n                    </div>\n                    {/* Product size */}\n                    <div style={{ display: 'flex', width: '800px', justifyContent: 'space-between', alignItems: 'flex-start', padding: '5px' }}>\n                        <div style={{ flex: 1, marginRight: '10px', overflowY: 'auto', maxHeight: '400px' }}>\n                            <table style={{ width: '100%', borderCollapse: 'collapse', border: '1px solid #ccc' }}>\n                                <thead>\n                                <tr style={{ backgroundColor: '#f2f2f2' }}>\n                                    <th style={{ padding: '10px', textAlign: 'left' }}>Size</th>\n                                    <th style={{ padding: '10px', textAlign: 'left' }}>Quantity</th>\n                                    <th style={{ padding: '10px', textAlign: 'left' }}>Add Quantity</th>\n                                    <th style={{ padding: '10px', textAlign: 'left' }}>Actions</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {sizes.length === 0 ? (\n                                    <tr>\n                                        <td colSpan=\"4\" style={{ textAlign: 'center', padding: '10px' }}>No sizes added yet</td>\n                                    </tr>\n                                ) : (\n                                    sizes.map((size, index) => (\n                                        <tr key={index} style={{ backgroundColor: 'white', border: '1px solid #ccc' }}>\n                                            <td style={{ padding: '10px', textAlign: 'left' }}>{Size[size.size]}</td>\n                                            <td style={{ padding: '10px', textAlign: 'left' }}>{size.quantity}</td>\n                                            <td style={{ padding: '10px', textAlign: 'left' }}>\n                                                <input type=\"number\" value={size.addQuantity} onChange={(e) => handleSizeChange(index, 'addQuantity', e.target.value)} />\n                                            </td>\n                                            <td style={{ padding: '5px', textAlign: 'left' }}>\n                                                <button onClick={() => handleAddQuantity(index)}>Add</button>\n                                            </td>\n                                        </tr>\n                                    ))\n                                )}\n                                <tr style={{ backgroundColor: 'white', border: '1px solid #ccc' }}>\n                                    <td>\n                                        <select value={newSize} onChange={(e) => setNewSize(e.target.value)}>\n                                            <option value=\"\">Size</option>\n                                            {Size.map((size, index) => (\n                                                <option key={index} value={size}>{size}</option>\n                                            ))}\n                                        </select>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" value={newQuantity} onChange={(e) => setNewQuantity(e.target.value)} />\n                                    </td>\n                                    <td>\n                                        <button onClick={handleAddNewSize}>Add</button>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProductPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}