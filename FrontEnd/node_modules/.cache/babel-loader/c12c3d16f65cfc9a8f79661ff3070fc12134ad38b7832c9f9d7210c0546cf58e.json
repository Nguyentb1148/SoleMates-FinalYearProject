{"ast":null,"code":"import axios from 'axios';\nconst baseLink = 'http://localhost:5163';\nconst authApi = axios.create({\n  baseURL: baseLink,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nauthApi.interceptors.request.use(config => {\n  console.log(\"Interceptor hit for URL:\", config.url); // Debugging\n  const token = localStorage.getItem('accessToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Parsing Www-Authenticate header for token expiration message\nfunction parseAuthHeader(header) {\n  if (header.startsWith('Bearer')) {\n    const parts = header.split(',');\n    const errorParts = parts.map(part => part.trim().split('='));\n    const errorDescription = errorParts.find(part => part[0] === 'error_description');\n    if (errorDescription && errorDescription[1]) {\n      // Assuming the error description is wrapped in quotes\n      return errorDescription[1].slice(1, -1);\n    }\n  }\n  return null;\n}\nasync function checkAndRefreshToken(apiResponse) {\n  if (apiResponse.status === 401) {\n    const authHeader = apiResponse.headers.get('Www-Authenticate');\n    const errorMessage = parseAuthHeader(authHeader);\n    if (errorMessage && errorMessage.includes('expired')) {\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (refreshToken) {\n        const refreshResponse = await authApi.post('/Account/refresh-token', {\n          Token: refreshToken\n        });\n        if (refreshResponse.status === 200) {\n          const data = refreshResponse.data;\n          localStorage.setItem('accessToken', data);\n        } else {}\n      }\n    }\n  }\n}\nconst login = async credentials => {\n  try {\n    const response = await axios.post('http://localhost:5163/Account/login', credentials);\n    localStorage.setItem('accessToken', response.data.accessToken);\n    localStorage.setItem('refreshToken', response.data.refreshToken);\n    localStorage.setItem('user', response.data.user);\n    localStorage.setItem('role', response.data.role);\n    console.log('User logged in successfully.');\n    return response.data; // Return the response data\n  } catch (error) {\n    console.error('Error:', error);\n    throw error; // Throwing the error for further handling if necessary\n  }\n};\nconst register = async userData => {\n  try {\n    console.log(\"Register data\", userData);\n    const response = await authApi.post('/Account/register', userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nconst getAuthorizedMessage = async () => {\n  try {\n    const response = await authApi.get('/User/authorized');\n    return response.data.message;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nconst getUserOnlyMessage = async () => {\n  try {\n    const response = await authApi.get('/User/user-only');\n    return response.data.message;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport { login, register, getAuthorizedMessage, getUserOnlyMessage };","map":{"version":3,"names":["axios","baseLink","authApi","create","baseURL","headers","interceptors","request","use","config","console","log","url","token","localStorage","getItem","Authorization","error","Promise","reject","parseAuthHeader","header","startsWith","parts","split","errorParts","map","part","trim","errorDescription","find","slice","checkAndRefreshToken","apiResponse","status","authHeader","get","errorMessage","includes","refreshToken","refreshResponse","post","Token","data","setItem","login","credentials","response","accessToken","user","role","register","userData","getAuthorizedMessage","message","getUserOnlyMessage"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Api/AuthApi.js"],"sourcesContent":["import axios from 'axios';\n\nconst baseLink = 'http://localhost:5163';\n\nconst authApi = axios.create({\n    baseURL: baseLink,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nauthApi.interceptors.request.use((config) => {\n    console.log(\"Interceptor hit for URL:\", config.url); // Debugging\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n}, (error) => {\n    return Promise.reject(error);\n});\n\n// Parsing Www-Authenticate header for token expiration message\nfunction parseAuthHeader(header) {\n    if (header.startsWith('Bearer')) {\n        const parts = header.split(',');\n        const errorParts = parts.map(part => part.trim().split('='));\n        const errorDescription = errorParts.find(part => part[0] === 'error_description');\n        if (errorDescription && errorDescription[1]) {\n            // Assuming the error description is wrapped in quotes\n            return errorDescription[1].slice(1, -1);\n        }\n    }\n    return null;\n}\n\nasync function checkAndRefreshToken(apiResponse) {\n    if (apiResponse.status === 401) {\n        const authHeader = apiResponse.headers.get('Www-Authenticate');\n        const errorMessage = parseAuthHeader(authHeader);\n\n        if (errorMessage && errorMessage.includes('expired')) {\n            const refreshToken = localStorage.getItem('refreshToken');\n            if (refreshToken) {\n                const refreshResponse = await authApi.post('/Account/refresh-token', {\n                    Token: refreshToken\n                });\n\n                if (refreshResponse.status === 200) {\n                    const data = refreshResponse.data;\n                    localStorage.setItem('accessToken', data);\n                } else {\n                }\n            }\n        }\n    }\n}\n\n\nconst login = async (credentials) => {\n    try {\n        const response = await axios.post('http://localhost:5163/Account/login', credentials);\n        localStorage.setItem('accessToken', response.data.accessToken);\n        localStorage.setItem('refreshToken', response.data.refreshToken);\n        localStorage.setItem('user',response.data.user)\n        localStorage.setItem('role',response.data.role)\n        console.log('User logged in successfully.');\n        return response.data; // Return the response data\n    } catch (error) {\n        console.error('Error:', error);\n        throw error; // Throwing the error for further handling if necessary\n    }\n};\n\nconst register = async (userData) => {\n    try {\n        console.log(\"Register data\", userData);\n        const response = await authApi.post('/Account/register', userData);\n        return response.data;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n};\nconst getAuthorizedMessage = async () => {\n    try {\n        const response = await authApi.get('/User/authorized');\n        return response.data.message;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n};\n\nconst getUserOnlyMessage = async () => {\n    try {\n        const response = await authApi.get('/User/user-only');\n        return response.data.message;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n};\nexport { login, register,getAuthorizedMessage,getUserOnlyMessage };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}