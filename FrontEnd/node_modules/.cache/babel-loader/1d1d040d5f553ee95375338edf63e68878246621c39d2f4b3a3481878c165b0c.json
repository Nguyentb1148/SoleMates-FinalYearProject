{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Components/Auth/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { register } from '../../utils/Api/AuthApi';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jwtDecode } from \"jwt-decode\";\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = \"862905097670-678pkbir60a8v0jk4v75ua6nsu4j3k40.apps.googleusercontent.com\";\nconst Registration = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setErrorMessage('The password and confirmation password do not match.');\n      return;\n    }\n    const newUser = {\n      email,\n      password,\n      confirmPassword\n    };\n    console.log(newUser);\n    try {\n      const response = await register(newUser);\n      if (response && response.message) {\n        console.log(response.message);\n        navigate('/');\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 409) {\n        setErrorMessage('Email is already registered.');\n      } else {\n        setErrorMessage('An error occurred while registering. Please try again.');\n      }\n    }\n  };\n  const handleRegisterSuccess = async response => {\n    console.log('register successful:', response);\n    const decoded = jwtDecode(response.credential);\n    console.log('Decoded JWT:', decoded);\n    const {\n      email\n    } = decoded;\n    setPassword(email);\n    setConfirmPassword(email);\n    const userData = {\n      email,\n      password,\n      confirmPassword\n    };\n    const responseRegister = await register(userData);\n    alert(responseRegister.data);\n    console.log('responseRegister: ', responseRegister);\n  };\n  const handleRegisterFailure = response => {\n    console.log('Register failed:', response);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"registration-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"registration-button\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n          clientId: clientId,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Login with Google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n              onSuccess: handleRegisterSuccess,\n              onError: handleRegisterFailure,\n              scope: \"profile email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Registration, \"lValyBkV0MrkCGWzGgdeWmfY9ek=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","register","useNavigate","jwtDecode","GoogleOAuthProvider","GoogleLogin","jsxDEV","_jsxDEV","clientId","Registration","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","navigate","handleSubmit","e","preventDefault","newUser","console","log","response","message","error","status","handleRegisterSuccess","decoded","credential","userData","responseRegister","alert","data","handleRegisterFailure","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onSuccess","onError","scope","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Components/Auth/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { register } from '../../utils/Api/AuthApi';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport {jwtDecode} from \"jwt-decode\";\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nconst clientId = \"862905097670-678pkbir60a8v0jk4v75ua6nsu4j3k40.apps.googleusercontent.com\";\n\nconst Registration = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const navigate = useNavigate(); // Initialize useNavigate\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (password !== confirmPassword) {\n            setErrorMessage('The password and confirmation password do not match.');\n            return;\n        }\n\n        const newUser = {\n            email,\n            password,\n            confirmPassword,\n        };\n\n        console.log(newUser);\n\n        try {\n            const response = await register(newUser);\n            if (response && response.message) {\n                console.log(response.message);\n                navigate('/');\n            }\n        } catch (error) {\n            if (error.response && error.response.status === 409) {\n                setErrorMessage('Email is already registered.');\n            } else {\n                setErrorMessage('An error occurred while registering. Please try again.');\n            }\n        }\n    };\n\n    const handleRegisterSuccess = async (response) => {\n        console.log('register successful:', response);\n        const decoded = jwtDecode(response.credential);\n        console.log('Decoded JWT:', decoded);\n        const {email} = decoded;\n        setPassword(email);\n        setConfirmPassword(email);\n        const userData = {\n            email,\n            password,\n            confirmPassword\n        }\n        const responseRegister = await register(userData);\n        alert(responseRegister.data)\n        console.log('responseRegister: ', responseRegister)\n    };\n    const handleRegisterFailure = (response) => {\n        console.log('Register failed:', response);\n    };\n    return (\n        <div className=\"center-container\">\n            <div className=\"registration-container\">\n                <h2>Register</h2>\n                {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n                <form onSubmit={handleSubmit} className=\"registration-form\">\n                    <div className=\"form-group\">\n                        <label>Email:</label>\n                        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password:</label>\n                        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Confirm Password:</label>\n                        <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} required />\n                    </div>\n                    <button type=\"submit\" className=\"registration-button\">Register</button>\n\n                    <GoogleOAuthProvider clientId={clientId}>\n                        <div className=\"login-container\">\n                            <h2>Login with Google</h2>\n                            <GoogleLogin\n                                onSuccess={handleRegisterSuccess}\n                                onError={handleRegisterFailure}\n                                scope=\"profile email\"\n                            />\n                        </div>\n                    </GoogleOAuthProvider>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Registration;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}