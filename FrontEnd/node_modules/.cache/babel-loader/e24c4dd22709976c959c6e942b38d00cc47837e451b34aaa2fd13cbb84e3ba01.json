{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport moreOption from '../Icon/icons8-more-50.png';\nimport muteIcon from '../Icon/icons8-mute-50.png';\nimport lowVolumeIcon from '../Icon/icons8-low-volume-50.png';\nimport middleVolumeIcon from '../Icon/icons8-volume-50.png';\nimport volumeUpIcon from '../Icon/icons8-volume-up-50.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  tracks\n}) => {\n  _s();\n  const [trackIndex, setTrackIndex] = useState(tracks && tracks.length > 0 ? 0 : null);\n  const [trackProgress, setTrackProgress] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1.0);\n  const [muted, setMuted] = useState(false);\n  const audioRef = useRef(null);\n  const intervalRef = useRef();\n  const isReady = useRef(false);\n  const [audioDuration, setAudioDuration] = useState(0);\n\n  // Destructure for easier access\n  const track = trackIndex !== null ? tracks[trackIndex] : undefined;\n  const {\n    title,\n    artist,\n    image,\n    audioSrc\n  } = track || {};\n\n  // useEffect(() => {\n  //     if (trackIndex !== null) {\n  //         const audio = new Audio(audioSrc);\n  //         audioRef.current = audio;\n  //         audio.addEventListener('loadedmetadata', () => {\n  //             setAudioDuration(audio.duration);\n  //         });\n  //\n  //         if (isPlaying) {\n  //             audio.play().catch((error) => {\n  //                 console.error('Error attempting to play', error);\n  //             });\n  //         }\n  //         return () => {\n  //             audio.removeEventListener('loadedmetadata', () => {\n  //                 setAudioDuration(0);\n  //             });\n  //         };\n  //     }\n  // }, [trackIndex, tracks]);\n\n  // When track changes, update the audio source\n  useEffect(() => {\n    if (track && track.audioSrc) {\n      const audio = new Audio(track.audioSrc);\n      audioRef.current = audio;\n      audioRef.current.play().then(() => {\n        console.log('Audio playback started successfully');\n      }).catch(error => {\n        console.error('Error starting audio playback:', error);\n      });\n    }\n  }, [track]);\n  useEffect(() => {\n    if (isPlaying && audioRef.current) {\n      audioRef.current.play().catch(error => {\n        console.error('Error attempting to play', error);\n      });\n    } else if (audioRef.current) {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = volume;\n      audioRef.current.muted = muted;\n    }\n  }, [volume, muted]);\n  useEffect(() => {\n    if (audioRef.current) {\n      const handleEnded = () => {\n        if (tracks.length && trackIndex !== null) {\n          toNextTrack();\n        } else {\n          setIsPlaying(false);\n        }\n      };\n      audioRef.current.addEventListener('ended', handleEnded);\n      return () => {\n        audioRef.current.removeEventListener('ended', handleEnded);\n      };\n    }\n  }, [tracks, trackIndex]);\n  const toPrevTrack = () => {\n    if (trackIndex === 0) {\n      setTrackIndex(tracks.length - 1);\n    } else if (trackIndex) {\n      setTrackIndex(trackIndex - 1);\n    }\n  };\n  const toNextTrack = () => {\n    if (trackIndex !== null && trackIndex < tracks.length - 1) {\n      setTrackIndex(trackIndex + 1);\n    } else {\n      setTrackIndex(0);\n    }\n  };\n  const getVolumeIcon = () => {\n    if (muted || volume === 0) return muteIcon;\n    if (volume < 0.5) return lowVolumeIcon;\n    if (volume < 1) return middleVolumeIcon;\n    return volumeUpIcon;\n  };\n\n  // Render nothing if no track is selected\n  if (trackIndex === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No track selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 16\n    }, this);\n  }\n  const onScrub = value => {\n    // Clear any timers already running\n    clearInterval(intervalRef.current);\n    audioRef.current.currentTime = value;\n    setTrackProgress(audioRef.current.currentTime);\n  };\n  const onScrubEnd = () => {\n    // If not already playing, start\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n    startTimer();\n  };\n  const toggleMute = () => {\n    const newMutedState = !muted;\n    setMuted(newMutedState);\n    if (audioRef.current) {\n      audioRef.current.muted = newMutedState;\n    }\n  };\n  const changeVolume = newVolume => {\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n    setVolume(newVolume);\n    setMuted(newVolume === 0);\n  };\n  const startTimer = () => {\n    // Clear any timers already running\n    clearInterval(intervalRef.current);\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        toNextTrack();\n      } else {\n        setTrackProgress(audioRef.current.currentTime);\n      }\n    }, [1000]);\n  };\n  const playerContainerStyle = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: '#000000',\n    color: '#ffffff',\n    position: 'fixed',\n    bottom: '0',\n    left: '0',\n    right: '0',\n    width: '100%',\n    maxWidth: '1920px',\n    margin: '0 auto'\n  };\n  const progressBarStyle = {\n    width: '100%'\n  };\n  const volumeIcon = getVolumeIcon();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    style: playerContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Track artwork for ${title} by ${artist}`,\n        style: {\n          width: '80px',\n          height: '80px',\n          borderRadius: '80px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '0'\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0'\n          },\n          children: artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AudioControls, {\n        isPlaying: isPlaying,\n        onPlayPauseClick: setIsPlaying,\n        onPrevClick: toPrevTrack,\n        onNextClick: toNextTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: trackProgress,\n        step: \"1\",\n        min: \"0\",\n        max: audioDuration || 0,\n        className: \"progress\",\n        onChange: e => onScrub(e.target.value),\n        onMouseUp: onScrubEnd,\n        onKeyUp: onScrubEnd,\n        style: progressBarStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginRight: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: volumeIcon,\n        alt: \"Volume\",\n        onClick: toggleMute,\n        style: {\n          width: '30px',\n          height: '30px',\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        value: muted ? 0 : volume,\n        onChange: e => changeVolume(parseFloat(e.target.value)),\n        style: {\n          margin: '0 15px',\n          width: '100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: moreOption,\n        alt: \"More options\",\n        style: {\n          width: '30px',\n          height: '30px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioPlayer, \"5dVjMycNCZjvMZtH4PMmBL0Iw/w=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AudioControls","moreOption","muteIcon","lowVolumeIcon","middleVolumeIcon","volumeUpIcon","jsxDEV","_jsxDEV","AudioPlayer","tracks","_s","trackIndex","setTrackIndex","length","trackProgress","setTrackProgress","isPlaying","setIsPlaying","volume","setVolume","muted","setMuted","audioRef","intervalRef","isReady","audioDuration","setAudioDuration","track","undefined","title","artist","image","audioSrc","audio","Audio","current","play","then","console","log","catch","error","pause","handleEnded","toNextTrack","addEventListener","removeEventListener","toPrevTrack","getVolumeIcon","children","fileName","_jsxFileName","lineNumber","columnNumber","onScrub","value","clearInterval","currentTime","onScrubEnd","startTimer","toggleMute","newMutedState","changeVolume","newVolume","setInterval","ended","playerContainerStyle","display","justifyContent","alignItems","backgroundColor","color","position","bottom","left","right","width","maxWidth","margin","progressBarStyle","volumeIcon","className","style","marginLeft","src","alt","height","borderRadius","flex","flexDirection","onPlayPauseClick","onPrevClick","onNextClick","type","step","min","max","onChange","e","target","onMouseUp","onKeyUp","marginRight","onClick","cursor","parseFloat","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport moreOption from '../Icon/icons8-more-50.png'\nimport muteIcon from '../Icon/icons8-mute-50.png';\nimport lowVolumeIcon from '../Icon/icons8-low-volume-50.png';\nimport middleVolumeIcon from '../Icon/icons8-volume-50.png';\nimport volumeUpIcon from '../Icon/icons8-volume-up-50.png';\n\n\nconst AudioPlayer = ({ tracks }) => {\n    const [trackIndex, setTrackIndex] = useState(tracks && tracks.length > 0 ? 0 : null);\n    const [trackProgress, setTrackProgress] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [volume, setVolume] = useState(1.0);\n    const [muted, setMuted] = useState(false);\n    const audioRef = useRef(null);\n    const intervalRef = useRef();\n    const isReady = useRef(false);\n    const [audioDuration, setAudioDuration] = useState(0);\n\n    // Destructure for easier access\n    const track = trackIndex !== null ? tracks[trackIndex] : undefined;\n    const { title, artist, image, audioSrc } = track || {};\n\n    // useEffect(() => {\n    //     if (trackIndex !== null) {\n    //         const audio = new Audio(audioSrc);\n    //         audioRef.current = audio;\n    //         audio.addEventListener('loadedmetadata', () => {\n    //             setAudioDuration(audio.duration);\n    //         });\n    //\n    //         if (isPlaying) {\n    //             audio.play().catch((error) => {\n    //                 console.error('Error attempting to play', error);\n    //             });\n    //         }\n    //         return () => {\n    //             audio.removeEventListener('loadedmetadata', () => {\n    //                 setAudioDuration(0);\n    //             });\n    //         };\n    //     }\n    // }, [trackIndex, tracks]);\n\n    // When track changes, update the audio source\n    useEffect(() => {\n        if (track && track.audioSrc) {\n            const audio = new Audio(track.audioSrc);\n            audioRef.current = audio;\n            audioRef.current.play()\n                .then(() => {\n                    console.log('Audio playback started successfully');\n                })\n                .catch((error) => {\n                    console.error('Error starting audio playback:', error);\n                });\n        }\n    }, [track]);\n\n    useEffect(() => {\n        if (isPlaying && audioRef.current) {\n            audioRef.current.play().catch((error) => {\n                console.error('Error attempting to play', error);\n            });\n        } else if (audioRef.current) {\n            audioRef.current.pause();\n        }\n    }, [isPlaying]);\n\n    useEffect(() => {\n        if (audioRef.current) {\n            audioRef.current.volume = volume;\n            audioRef.current.muted = muted;\n        }\n    }, [volume, muted]);\n\n    useEffect(() => {\n        if (audioRef.current) {\n            const handleEnded = () => {\n                if (tracks.length && trackIndex !== null) {\n                    toNextTrack();\n                } else {\n                    setIsPlaying(false);\n                }\n            };\n\n            audioRef.current.addEventListener('ended', handleEnded);\n\n            return () => {\n                audioRef.current.removeEventListener('ended', handleEnded);\n            };\n        }\n    }, [tracks, trackIndex]);\n\n    const toPrevTrack = () => {\n        if (trackIndex === 0) {\n            setTrackIndex(tracks.length - 1);\n        } else if (trackIndex) {\n            setTrackIndex(trackIndex - 1);\n        }\n    };\n\n    const toNextTrack = () => {\n        if (trackIndex !== null && trackIndex < tracks.length - 1) {\n            setTrackIndex(trackIndex + 1);\n        } else {\n            setTrackIndex(0);\n        }\n    };\n\n    const getVolumeIcon = () => {\n        if (muted || volume === 0) return muteIcon;\n        if (volume < 0.5) return lowVolumeIcon;\n        if (volume < 1) return middleVolumeIcon;\n        return volumeUpIcon;\n    };\n\n    // Render nothing if no track is selected\n    if (trackIndex === null) {\n        return <div>No track selected</div>;\n    }\n    const onScrub = (value) => {\n        // Clear any timers already running\n        clearInterval(intervalRef.current);\n        audioRef.current.currentTime = value;\n        setTrackProgress(audioRef.current.currentTime);\n    };\n\n    const onScrubEnd = () => {\n        // If not already playing, start\n        if (!isPlaying) {\n            setIsPlaying(true);\n        }\n        startTimer();\n    };\n    const toggleMute = () => {\n        const newMutedState = !muted;\n        setMuted(newMutedState);\n        if (audioRef.current) {\n            audioRef.current.muted = newMutedState;\n        }\n    };\n    const changeVolume = (newVolume) => {\n        if (audioRef.current) {\n            audioRef.current.volume = newVolume;\n        }\n        setVolume(newVolume);\n        setMuted(newVolume === 0);\n    };\n\n    const startTimer = () => {\n        // Clear any timers already running\n        clearInterval(intervalRef.current);\n\n        intervalRef.current = setInterval(() => {\n            if (audioRef.current.ended) {\n                toNextTrack();\n            } else {\n                setTrackProgress(audioRef.current.currentTime);\n            }\n        }, [1000]);\n    };\n\n\n\n\n    const playerContainerStyle = {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#000000',\n        color: '#ffffff',\n        position: 'fixed',\n        bottom: '0',\n        left: '0',\n        right: '0',\n        width: '100%',\n        maxWidth: '1920px',\n        margin: '0 auto',\n    };\n\n    const progressBarStyle = {\n        width: '100%',\n    };\n\n    const volumeIcon = getVolumeIcon();\n\n\n    return (\n        <div className=\"audio-player\" style={playerContainerStyle}>\n            <div style={{ display: 'flex', alignItems: 'center', marginLeft: '20px' }}>\n                <img\n                    src={image}\n                    alt={`Track artwork for ${title} by ${artist}`}\n                    style={{ width: '80px', height: '80px', borderRadius: '80px' }}\n                />\n                <div style={{ marginLeft: '10px' }}>\n                    <h2 style={{ margin: '0' }}>{title}</h2>\n                    <p style={{ margin: '0' }}>{artist}</p>\n                </div>\n            </div>\n\n            <div style={{ flex: 1, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                <AudioControls\n                    isPlaying={isPlaying}\n                    onPlayPauseClick={setIsPlaying}\n                    onPrevClick={toPrevTrack}\n                    onNextClick={toNextTrack}\n                />\n                <input\n                    type=\"range\"\n                    value={trackProgress}\n                    step=\"1\"\n                    min=\"0\"\n                    max={audioDuration || 0}\n                    className=\"progress\"\n                    onChange={(e) => onScrub(e.target.value)}\n                    onMouseUp={onScrubEnd}\n                    onKeyUp={onScrubEnd}\n                    style={progressBarStyle}\n                />\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginRight: '20px' }}>\n                <img\n                    src={volumeIcon}\n                    alt=\"Volume\"\n                    onClick={toggleMute}\n                    style={{ width: '30px', height: '30px', cursor: 'pointer' }}\n                />\n                <input\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"1\"\n                    step=\"0.01\"\n                    value={muted ? 0 : volume}\n                    onChange={(e) => changeVolume(parseFloat(e.target.value))}\n                    style={{ margin: '0 15px', width: '100px' }}\n                />\n                <img\n                    src={moreOption}\n                    alt=\"More options\"\n                    style={{ width: '30px', height: '30px' }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default AudioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}