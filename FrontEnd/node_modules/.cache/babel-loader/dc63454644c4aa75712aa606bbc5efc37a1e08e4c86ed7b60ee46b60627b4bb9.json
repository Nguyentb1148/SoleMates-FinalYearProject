{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/Album/AddAlbum.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { storage } from \"../../firebase\";\nimport defaultAlbumImage from '../../Img/default-cover-art.png';\nimport { getAllSongsByUserId } from '../../Api/SongApi';\nimport { addNewAlbum, addSongToAlbum } from '../../Api/ArtistApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddAlbumPage = () => {\n  _s();\n  const [albumName, setAlbumName] = useState('');\n  const [albumImage, setAlbumImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(defaultAlbumImage);\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  useEffect(() => {\n    loadUserSongs();\n  }, []);\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setAlbumImage(file);\n      const previewUrl = URL.createObjectURL(file);\n      setImagePreview(previewUrl);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!albumName || !albumImage) {\n      alert('Please provide album name and image.');\n      return;\n    }\n    const imageFileRef = ref(storage, `AlbumImages/${albumImage.name}`);\n    const uploadResult = await uploadBytes(imageFileRef, albumImage);\n    const imageURL = await getDownloadURL(uploadResult.ref);\n    try {\n      const addedAlbum = await addNewAlbum(albumData);\n      if (selectedSongIds.size > 0) {\n        await addSongToAlbum(addedAlbum.id, {\n          SongIds: Array.from(selectedSongIds)\n        });\n      }\n      alert('Album added successfully!');\n      navigate('/ListAlbum');\n    } catch (error) {\n      console.error('Error adding album:', error);\n      alert('Failed to add album.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Album\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"albumName\",\n          children: \"Album Name *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"albumName\",\n          type: \"text\",\n          value: albumName,\n          onChange: e => setAlbumName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"albumImage\",\n          children: \"Album Image *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"albumImage\",\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePreview,\n          alt: \"Album Preview\",\n          style: {\n            maxWidth: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(AddAlbumPage, \"sI9T48Ll6R4nmJIeqb+F3KKXCc4=\", false, function () {\n  return [useNavigate];\n});\n_c = AddAlbumPage;\nexport default AddAlbumPage;\nvar _c;\n$RefreshReg$(_c, \"AddAlbumPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ref","uploadBytes","getDownloadURL","storage","defaultAlbumImage","getAllSongsByUserId","addNewAlbum","addSongToAlbum","jsxDEV","_jsxDEV","AddAlbumPage","_s","albumName","setAlbumName","albumImage","setAlbumImage","imagePreview","setImagePreview","navigate","user","JSON","parse","localStorage","getItem","loadUserSongs","handleImageChange","event","file","target","files","previewUrl","URL","createObjectURL","handleSubmit","e","preventDefault","alert","imageFileRef","name","uploadResult","imageURL","addedAlbum","albumData","selectedSongIds","size","id","SongIds","Array","from","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","required","accept","src","alt","style","maxWidth","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/Album/AddAlbum.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { storage } from \"../../firebase\";\nimport defaultAlbumImage from '../../Img/default-cover-art.png';\nimport { getAllSongsByUserId } from '../../Api/SongApi';\nimport { addNewAlbum, addSongToAlbum } from '../../Api/ArtistApi';\n\nconst AddAlbumPage = () => {\n    const [albumName, setAlbumName] = useState('');\n    const [albumImage, setAlbumImage] = useState(null);\n    const [imagePreview, setImagePreview] = useState(defaultAlbumImage);\n    const navigate = useNavigate();\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n\n    useEffect(() => {\n        loadUserSongs();\n    }, []);\n\n\n    const handleImageChange = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            setAlbumImage(file);\n            const previewUrl = URL.createObjectURL(file);\n            setImagePreview(previewUrl);\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!albumName || !albumImage) {\n            alert('Please provide album name and image.');\n            return;\n        }\n\n        const imageFileRef = ref(storage, `AlbumImages/${albumImage.name}`);\n        const uploadResult = await uploadBytes(imageFileRef, albumImage);\n        const imageURL = await getDownloadURL(uploadResult.ref);\n        \n\n        try {\n            const addedAlbum = await addNewAlbum(albumData);\n            if (selectedSongIds.size > 0) {\n                await addSongToAlbum(addedAlbum.id, { SongIds: Array.from(selectedSongIds) });\n            }\n            alert('Album added successfully!');\n            navigate('/ListAlbum');\n        } catch (error) {\n            console.error('Error adding album:', error);\n            alert('Failed to add album.');\n        }\n    };\n\n\n    return (\n        <div>\n            <h2>Add New Album</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"albumName\">Album Name *</label>\n                    <input\n                        id=\"albumName\"\n                        type=\"text\"\n                        value={albumName}\n                        onChange={(e) => setAlbumName(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"albumImage\">Album Image *</label>\n                    <input\n                        id=\"albumImage\"\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={handleImageChange}\n                        required\n                    />\n                    <img src={imagePreview} alt=\"Album Preview\" style={{ maxWidth: '200px' }} />\n                </div>\n\n            </form>\n        </div>\n    );\n};\n\nexport default AddAlbumPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}