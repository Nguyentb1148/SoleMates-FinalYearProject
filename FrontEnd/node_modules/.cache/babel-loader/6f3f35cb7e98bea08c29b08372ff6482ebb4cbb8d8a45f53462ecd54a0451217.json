{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport volumeIcon from '../Icon/icons8-volume-50.png';\nimport moreoption from '../Icon/icons8-more-50.png';\nimport mute from '../Icon/icons8-mute-50.png';\nimport lowVolume from '../Icon/icons8-low-volume-50.png';\nimport volume from '../Icon/icons8-volume-50.png';\nimport volumeUp from '../Icon/icons8-volume-up-50.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  tracks\n}) => {\n  _s();\n  const [trackIndex, setTrackIndex] = useState(0);\n  const [trackProgress, setTrackProgress] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const {\n    title,\n    artist,\n    audioSrc,\n    image\n  } = tracks[trackIndex];\n  const audioRef = useRef(new Audio(audioSrc));\n  const intervalRef = useRef();\n  const isReady = useRef(false);\n  const [volume, setVolume] = useState(1.0);\n  const [muted, setMuted] = useState(false);\n  const {\n    duration\n  } = audioRef.current;\n  const startTimer = () => {\n    clearInterval(intervalRef.current);\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        toNextTrack();\n      } else {\n        setTrackProgress(audioRef.current.currentTime);\n      }\n    }, [1000]);\n  };\n  const onScrub = value => {\n    clearInterval(intervalRef.current);\n    audioRef.current.currentTime = value;\n    setTrackProgress(audioRef.current.currentTime);\n  };\n  const onScrubEnd = () => {\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n    startTimer();\n  };\n  const toPrevTrack = () => {\n    if (trackIndex - 1 < 0) {\n      setTrackIndex(tracks.length - 1);\n    } else {\n      setTrackIndex(trackIndex - 1);\n    }\n  };\n  const toNextTrack = () => {\n    if (trackIndex < tracks.length - 1) {\n      setTrackIndex(trackIndex + 1);\n    } else {\n      setTrackIndex(0);\n    }\n  };\n  const changeVolume = newVolume => {\n    audioRef.current.volume = newVolume;\n    setVolume(newVolume);\n    setMuted(newVolume === 0);\n  };\n  const toggleMute = () => {\n    setMuted(!muted);\n    audioRef.current.muted = !muted;\n    if (muted) {\n      changeVolume(volume); // Restore the previous volume when unmuting\n    }\n  };\n\n  // Use this effect to update the volume when the state changes\n  useEffect(() => {\n    audioRef.current.volume = volume;\n    setMuted(volume === 0);\n  }, [volume]);\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n      startTimer();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    audioRef.current.pause();\n    audioRef.current = new Audio(audioSrc);\n    setTrackProgress(audioRef.current.currentTime);\n    if (isReady.current) {\n      audioRef.current.play();\n      setIsPlaying(true);\n      startTimer();\n    } else {\n      isReady.current = true;\n    }\n  }, [trackIndex]);\n  useEffect(() => {\n    return () => {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n  const playerContainerStyle = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: '#000000',\n    color: '#ffffff',\n    position: 'fixed',\n    bottom: '0',\n    left: '0',\n    right: '0',\n    width: '100%',\n    maxWidth: '1920px',\n    margin: '0 auto'\n  };\n  const leftSectionStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  };\n  const centerSectionStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    flex: 1\n  };\n  const rightSectionStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: '0 1rem',\n    maxWidth: '150px'\n  };\n  const progressBarStyle = {\n    width: '100%'\n  };\n  const volumeIconPath = volume === 0 ? mute : volume < 0.5 ? lowVolume : volume < 1 ? volume : volumeUp;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    style: playerContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: leftSectionStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: tracks[trackIndex].image,\n        alt: `Track artwork for ${tracks[trackIndex].title} by ${tracks[trackIndex].artist}`,\n        style: {\n          width: '90px',\n          height: '90px',\n          borderRadius: '90px',\n          margin: '1px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: tracks[trackIndex].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tracks[trackIndex].artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: centerSectionStyle,\n      children: [/*#__PURE__*/_jsxDEV(AudioControls, {\n        isPlaying: isPlaying,\n        onPrevClick: toPrevTrack,\n        onNextClick: toNextTrack,\n        onPlayPauseClick: setIsPlaying\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: trackProgress,\n        step: \"1\",\n        min: \"0\",\n        max: duration || 0,\n        className: \"progress\",\n        onChange: e => onScrub(e.target.value),\n        onMouseUp: onScrubEnd,\n        onKeyUp: onScrubEnd,\n        style: progressBarStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: rightSectionStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: muted ? mute : volumeIconPath,\n        alt: \"Volume control\",\n        onClick: toggleMute,\n        style: {\n          cursor: 'pointer',\n          marginRight: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        value: muted ? 0 : volume,\n        onChange: e => changeVolume(parseFloat(e.target.value)),\n        style: {\n          marginRight: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: moreoption,\n        alt: \"More options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioPlayer, \"8wm49Av4qm5JboGJcQvgQyaTt1w=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AudioControls","volumeIcon","moreoption","mute","lowVolume","volume","volumeUp","jsxDEV","_jsxDEV","AudioPlayer","tracks","_s","trackIndex","setTrackIndex","trackProgress","setTrackProgress","isPlaying","setIsPlaying","title","artist","audioSrc","image","audioRef","Audio","intervalRef","isReady","setVolume","muted","setMuted","duration","current","startTimer","clearInterval","setInterval","ended","toNextTrack","currentTime","onScrub","value","onScrubEnd","toPrevTrack","length","changeVolume","newVolume","toggleMute","play","pause","playerContainerStyle","display","justifyContent","alignItems","backgroundColor","color","position","bottom","left","right","width","maxWidth","margin","leftSectionStyle","centerSectionStyle","flexDirection","flex","rightSectionStyle","padding","progressBarStyle","volumeIconPath","className","style","children","src","alt","height","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","onPrevClick","onNextClick","onPlayPauseClick","type","step","min","max","onChange","e","target","onMouseUp","onKeyUp","onClick","cursor","marginRight","parseFloat","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport volumeIcon from '../Icon/icons8-volume-50.png';\nimport moreoption from '../Icon/icons8-more-50.png'\nimport mute from '../Icon/icons8-mute-50.png';\nimport lowVolume from '../Icon/icons8-low-volume-50.png';\nimport volume from '../Icon/icons8-volume-50.png';\nimport volumeUp from '../Icon/icons8-volume-up-50.png';\n\nconst AudioPlayer = ({ tracks }) => {\n    const [trackIndex, setTrackIndex] = useState(0);\n    const [trackProgress, setTrackProgress] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const { title, artist, audioSrc,image } = tracks[trackIndex];\n    const audioRef = useRef(new Audio(audioSrc));\n    const intervalRef = useRef();\n    const isReady = useRef(false);\n    const [volume, setVolume] = useState(1.0);\n    const [muted, setMuted] = useState(false);\n    const { duration } = audioRef.current;\n\n    const startTimer = () => {\n        clearInterval(intervalRef.current);\n        intervalRef.current = setInterval(() => {\n            if (audioRef.current.ended) {\n                toNextTrack();\n            } else {\n                setTrackProgress(audioRef.current.currentTime);\n            }\n        }, [1000]);\n    };\n\n    const onScrub = (value) => {\n        clearInterval(intervalRef.current);\n        audioRef.current.currentTime = value;\n        setTrackProgress(audioRef.current.currentTime);\n    };\n\n    const onScrubEnd = () => {\n        if (!isPlaying) {\n            setIsPlaying(true);\n        }\n        startTimer();\n    };\n\n    const toPrevTrack = () => {\n        if (trackIndex - 1 < 0) {\n            setTrackIndex(tracks.length - 1);\n        } else {\n            setTrackIndex(trackIndex - 1);\n        }\n    };\n\n    const toNextTrack = () => {\n        if (trackIndex < tracks.length - 1) {\n            setTrackIndex(trackIndex + 1);\n        } else {\n            setTrackIndex(0);\n        }\n    };\n    const changeVolume = (newVolume) => {\n        audioRef.current.volume = newVolume;\n        setVolume(newVolume);\n        setMuted(newVolume === 0);\n    };\n\n    const toggleMute = () => {\n        setMuted(!muted);\n        audioRef.current.muted = !muted;\n        if (muted) {\n            changeVolume(volume); // Restore the previous volume when unmuting\n        }\n    };\n\n// Use this effect to update the volume when the state changes\n    useEffect(() => {\n        audioRef.current.volume = volume;\n        setMuted(volume === 0);\n    }, [volume]);\n\n    useEffect(() => {\n        if (isPlaying) {\n            audioRef.current.play();\n            startTimer();\n        } else {\n            audioRef.current.pause();\n        }\n    }, [isPlaying]);\n\n    useEffect(() => {\n        audioRef.current.pause();\n\n        audioRef.current = new Audio(audioSrc);\n        setTrackProgress(audioRef.current.currentTime);\n\n        if (isReady.current) {\n            audioRef.current.play();\n            setIsPlaying(true);\n            startTimer();\n        } else {\n            isReady.current = true;\n        }\n    }, [trackIndex]);\n\n    useEffect(() => {\n        return () => {\n            audioRef.current.pause();\n            clearInterval(intervalRef.current);\n        };\n    }, []);\n\n    const playerContainerStyle = {display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: '#000000',\n        color: '#ffffff', position: 'fixed', bottom: '0', left: '0', right: '0', width: '100%', maxWidth: '1920px', margin: '0 auto',};\n\n    const leftSectionStyle = {display: 'flex', alignItems: 'center', justifyContent: 'flex-start',};\n\n    const centerSectionStyle = {display: 'flex', flexDirection: 'column', alignItems: 'center', flex: 1,};\n\n    const rightSectionStyle = {display: 'flex', flexDirection: 'row', alignItems: 'center',\n        padding: '0 1rem', maxWidth: '150px',\n    };\n    const progressBarStyle = {width: '100%',};\n\n    const volumeIconPath = volume === 0 ? mute :\n        (volume < 0.5 ? lowVolume :\n            (volume < 1 ? volume : volumeUp));\n\n\n    return (\n        <div className=\"audio-player\" style={playerContainerStyle}>\n            <div style={leftSectionStyle}>\n                <img\n                    src={tracks[trackIndex].image}\n                    alt={`Track artwork for ${tracks[trackIndex].title} by ${tracks[trackIndex].artist}`}\n                    style={{ width: '90px', height: '90px', borderRadius: '90px',margin:'1px' }}\n                />\n                <div >\n                    <h2 >{tracks[trackIndex].title}</h2>\n                    <p >{tracks[trackIndex].artist}</p>\n                </div>\n\n            </div>\n\n            <div style={centerSectionStyle}>\n                <AudioControls\n                    isPlaying={isPlaying}\n                    onPrevClick={toPrevTrack}\n                    onNextClick={toNextTrack}\n                    onPlayPauseClick={setIsPlaying}\n                />\n                <input\n                    type=\"range\"\n                    value={trackProgress}\n                    step=\"1\"\n                    min=\"0\"\n                    max={duration || 0}\n                    className=\"progress\"\n                    onChange={(e) => onScrub(e.target.value)}\n                    onMouseUp={onScrubEnd}\n                    onKeyUp={onScrubEnd}\n                    style={progressBarStyle}\n                />\n            </div>\n\n            <div style={rightSectionStyle}>\n                <img src={muted ? mute : volumeIconPath} alt=\"Volume control\" onClick={toggleMute}\n                    style={{ cursor: 'pointer', marginRight: '1rem' }}\n                />\n                <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" value={muted ? 0 : volume}\n                    onChange={(e) => changeVolume(parseFloat(e.target.value))}\n                    style={{ marginRight: '1rem' }}\n                />\n                <img src={moreoption} alt=\"More options\" />\n            </div>\n        </div>\n    );\n};\n\nexport default AudioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}