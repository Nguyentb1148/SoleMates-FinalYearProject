{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport volumeIcon from '../Icon/icons8-volume-50.png';\nimport moreoption from '../Icon/icons8-more-50.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  tracks\n}) => {\n  _s();\n  const [trackIndex, setTrackIndex] = useState(0);\n  const [trackProgress, setTrackProgress] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const {\n    title,\n    artist,\n    audioSrc,\n    image\n  } = tracks[trackIndex];\n  const audioRef = useRef(new Audio(audioSrc));\n  const intervalRef = useRef();\n  const isReady = useRef(false);\n  const [volume, setVolume] = useState(1.0);\n  const [muted, setMuted] = useState(false);\n  const {\n    duration\n  } = audioRef.current;\n  const startTimer = () => {\n    clearInterval(intervalRef.current);\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        toNextTrack();\n      } else {\n        setTrackProgress(audioRef.current.currentTime);\n      }\n    }, [1000]);\n  };\n  const onScrub = value => {\n    clearInterval(intervalRef.current);\n    audioRef.current.currentTime = value;\n    setTrackProgress(audioRef.current.currentTime);\n  };\n  const onScrubEnd = () => {\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n    startTimer();\n  };\n  const toPrevTrack = () => {\n    if (trackIndex - 1 < 0) {\n      setTrackIndex(tracks.length - 1);\n    } else {\n      setTrackIndex(trackIndex - 1);\n    }\n  };\n  const toNextTrack = () => {\n    if (trackIndex < tracks.length - 1) {\n      setTrackIndex(trackIndex + 1);\n    } else {\n      setTrackIndex(0);\n    }\n  };\n  const toggleMute = () => {\n    setMuted(!muted);\n    audioRef.current.muted = !muted;\n    if (muted) {\n      changeVolume(volume); // Restore the previous volume when unmuting\n    }\n  };\n\n  // Use this effect to update the volume when the state changes\n  useEffect(() => {\n    audioRef.current.volume = volume;\n    setMuted(volume === 0);\n  }, [volume]);\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n      startTimer();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    audioRef.current.pause();\n    audioRef.current = new Audio(audioSrc);\n    setTrackProgress(audioRef.current.currentTime);\n    if (isReady.current) {\n      audioRef.current.play();\n      setIsPlaying(true);\n      startTimer();\n    } else {\n      isReady.current = true;\n    }\n  }, [trackIndex]);\n  useEffect(() => {\n    return () => {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n  const playerContainerStyle = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: '#000000',\n    color: '#ffffff',\n    position: 'fixed',\n    bottom: '0',\n    left: '0',\n    right: '0',\n    width: '100%',\n    maxWidth: '1920px',\n    margin: '0 auto'\n  };\n  const leftSectionStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  };\n  const centerSectionStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    flex: 1\n  };\n  const rightSectionStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '150px'\n  };\n  const progressBarStyle = {\n    width: '100%'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    style: playerContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: leftSectionStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: tracks[trackIndex].image,\n        alt: `Track artwork for ${tracks[trackIndex].title} by ${tracks[trackIndex].artist}`,\n        style: {\n          width: '90px',\n          height: '90px',\n          borderRadius: '90px',\n          margin: '1px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: tracks[trackIndex].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tracks[trackIndex].artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: centerSectionStyle,\n      children: [/*#__PURE__*/_jsxDEV(AudioControls, {\n        isPlaying: isPlaying,\n        onPrevClick: toPrevTrack,\n        onNextClick: toNextTrack,\n        onPlayPauseClick: setIsPlaying\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: trackProgress,\n        step: \"1\",\n        min: \"0\",\n        max: duration || 0,\n        className: \"progress\",\n        onChange: e => onScrub(e.target.value),\n        onMouseUp: onScrubEnd,\n        onKeyUp: onScrubEnd,\n        style: progressBarStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: rightSectionStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: volumeIcon,\n        alt: \"Volume control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: moreoption,\n        alt: \"More options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioPlayer, \"8wm49Av4qm5JboGJcQvgQyaTt1w=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AudioControls","volumeIcon","moreoption","jsxDEV","_jsxDEV","AudioPlayer","tracks","_s","trackIndex","setTrackIndex","trackProgress","setTrackProgress","isPlaying","setIsPlaying","title","artist","audioSrc","image","audioRef","Audio","intervalRef","isReady","volume","setVolume","muted","setMuted","duration","current","startTimer","clearInterval","setInterval","ended","toNextTrack","currentTime","onScrub","value","onScrubEnd","toPrevTrack","length","toggleMute","changeVolume","play","pause","playerContainerStyle","display","justifyContent","alignItems","backgroundColor","color","position","bottom","left","right","width","maxWidth","margin","leftSectionStyle","centerSectionStyle","flexDirection","flex","rightSectionStyle","progressBarStyle","className","style","children","src","alt","height","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","onPrevClick","onNextClick","onPlayPauseClick","type","step","min","max","onChange","e","target","onMouseUp","onKeyUp","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport volumeIcon from '../Icon/icons8-volume-50.png';\nimport moreoption from '../Icon/icons8-more-50.png'\nconst AudioPlayer = ({ tracks }) => {\n    const [trackIndex, setTrackIndex] = useState(0);\n    const [trackProgress, setTrackProgress] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const { title, artist, audioSrc,image } = tracks[trackIndex];\n    const audioRef = useRef(new Audio(audioSrc));\n    const intervalRef = useRef();\n    const isReady = useRef(false);\n    const [volume, setVolume] = useState(1.0);\n    const [muted, setMuted] = useState(false);\n    const { duration } = audioRef.current;\n\n    const startTimer = () => {\n        clearInterval(intervalRef.current);\n        intervalRef.current = setInterval(() => {\n            if (audioRef.current.ended) {\n                toNextTrack();\n            } else {\n                setTrackProgress(audioRef.current.currentTime);\n            }\n        }, [1000]);\n    };\n\n    const onScrub = (value) => {\n        clearInterval(intervalRef.current);\n        audioRef.current.currentTime = value;\n        setTrackProgress(audioRef.current.currentTime);\n    };\n\n    const onScrubEnd = () => {\n        if (!isPlaying) {\n            setIsPlaying(true);\n        }\n        startTimer();\n    };\n\n    const toPrevTrack = () => {\n        if (trackIndex - 1 < 0) {\n            setTrackIndex(tracks.length - 1);\n        } else {\n            setTrackIndex(trackIndex - 1);\n        }\n    };\n\n    const toNextTrack = () => {\n        if (trackIndex < tracks.length - 1) {\n            setTrackIndex(trackIndex + 1);\n        } else {\n            setTrackIndex(0);\n        }\n    };\n    const toggleMute = () => {\n        setMuted(!muted);\n        audioRef.current.muted = !muted;\n        if (muted) {\n            changeVolume(volume); // Restore the previous volume when unmuting\n        }\n    };\n\n// Use this effect to update the volume when the state changes\n    useEffect(() => {\n        audioRef.current.volume = volume;\n        setMuted(volume === 0);\n    }, [volume]);\n\n    useEffect(() => {\n        if (isPlaying) {\n            audioRef.current.play();\n            startTimer();\n        } else {\n            audioRef.current.pause();\n        }\n    }, [isPlaying]);\n\n    useEffect(() => {\n        audioRef.current.pause();\n\n        audioRef.current = new Audio(audioSrc);\n        setTrackProgress(audioRef.current.currentTime);\n\n        if (isReady.current) {\n            audioRef.current.play();\n            setIsPlaying(true);\n            startTimer();\n        } else {\n            isReady.current = true;\n        }\n    }, [trackIndex]);\n\n    useEffect(() => {\n        return () => {\n            audioRef.current.pause();\n            clearInterval(intervalRef.current);\n        };\n    }, []);\n\n    const playerContainerStyle = {display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: '#000000',\n        color: '#ffffff', position: 'fixed', bottom: '0', left: '0', right: '0', width: '100%', maxWidth: '1920px', margin: '0 auto',};\n\n    const leftSectionStyle = {display: 'flex', alignItems: 'center', justifyContent: 'flex-start',};\n\n    const centerSectionStyle = {display: 'flex', flexDirection: 'column', alignItems: 'center', flex: 1,};\n\n    const rightSectionStyle = {display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '150px'};\n\n    const progressBarStyle = {width: '100%',};\n\n\n    return (\n        <div className=\"audio-player\" style={playerContainerStyle}>\n            <div style={leftSectionStyle}>\n                <img\n                    src={tracks[trackIndex].image}\n                    alt={`Track artwork for ${tracks[trackIndex].title} by ${tracks[trackIndex].artist}`}\n                    style={{ width: '90px', height: '90px', borderRadius: '90px',margin:'1px' }}\n                />\n                <div >\n                    <h2 >{tracks[trackIndex].title}</h2>\n                    <p >{tracks[trackIndex].artist}</p>\n                </div>\n\n            </div>\n\n            <div style={centerSectionStyle}>\n                <AudioControls\n                    isPlaying={isPlaying}\n                    onPrevClick={toPrevTrack}\n                    onNextClick={toNextTrack}\n                    onPlayPauseClick={setIsPlaying}\n                />\n                <input\n                    type=\"range\"\n                    value={trackProgress}\n                    step=\"1\"\n                    min=\"0\"\n                    max={duration || 0}\n                    className=\"progress\"\n                    onChange={(e) => onScrub(e.target.value)}\n                    onMouseUp={onScrubEnd}\n                    onKeyUp={onScrubEnd}\n                    style={progressBarStyle}\n                />\n            </div>\n\n            <div style={rightSectionStyle}>\n                <img src={volumeIcon} alt=\"Volume control\" />\n                <img src={moreoption} alt=\"More options\" />\n            </div>\n        </div>\n    );\n};\n\nexport default AudioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}