{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport volumeIcon from '../Icon/icons8-sound-48.png';\n// import \"./styles.css\";\n\n/*\n * Read the blog post here:\n * https://letsbuildui.dev/articles/building-an-audio-player-with-react-hooks\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  tracks\n}) => {\n  _s();\n  // State\n  const [trackIndex, setTrackIndex] = useState(0);\n  const [trackProgress, setTrackProgress] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Destructure for conciseness\n  const {\n    title,\n    artist,\n    audioSrc,\n    image\n  } = tracks[trackIndex];\n\n  // Refs\n  const audioRef = useRef(new Audio(audioSrc));\n  const intervalRef = useRef();\n  const isReady = useRef(false);\n\n  // Destructure for conciseness\n  const {\n    duration\n  } = audioRef.current;\n  const currentPercentage = duration ? `${trackProgress / duration * 100}%` : \"0%\";\n  const trackStyling = `\n    -webkit-gradient(linear, 0% 0%, 100% 0%, color-stop(${currentPercentage}, #fff), color-stop(${currentPercentage}, #777))\n  `;\n  const startTimer = () => {\n    // Clear any timers already running\n    clearInterval(intervalRef.current);\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        toNextTrack();\n      } else {\n        setTrackProgress(audioRef.current.currentTime);\n      }\n    }, [1000]);\n  };\n  const onScrub = value => {\n    // Clear any timers already running\n    clearInterval(intervalRef.current);\n    audioRef.current.currentTime = value;\n    setTrackProgress(audioRef.current.currentTime);\n  };\n  const onScrubEnd = () => {\n    // If not already playing, start\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n    startTimer();\n  };\n  const toPrevTrack = () => {\n    if (trackIndex - 1 < 0) {\n      setTrackIndex(tracks.length - 1);\n    } else {\n      setTrackIndex(trackIndex - 1);\n    }\n  };\n  const toNextTrack = () => {\n    if (trackIndex < tracks.length - 1) {\n      setTrackIndex(trackIndex + 1);\n    } else {\n      setTrackIndex(0);\n    }\n  };\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n      startTimer();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  // Handles cleanup and setup when changing tracks\n  useEffect(() => {\n    audioRef.current.pause();\n    audioRef.current = new Audio(audioSrc);\n    setTrackProgress(audioRef.current.currentTime);\n    if (isReady.current) {\n      audioRef.current.play();\n      setIsPlaying(true);\n      startTimer();\n    } else {\n      // Set the isReady ref as true for the next pass\n      isReady.current = true;\n    }\n  }, [trackIndex]);\n  useEffect(() => {\n    // Pause and clean up on unmount\n    return () => {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n  const playerContainerStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100px',\n    // Set a fixed height for the player container\n    width: '100%' // Ensure it takes up the container width\n  };\n  const trackInfoStyle = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%'\n  };\n  const audioControlsStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  };\n  const progressBarStyle = {\n    width: '100%',\n    // Full width\n    flexGrow: 1,\n    alignSelf: 'flex-end' // Align progress bar at the bottom of the container\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-info\",\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Track artwork for ${title} by ${artist}`,\n        style: {\n          width: '120px',\n          height: '120px',\n          marginRight: '20px',\n          borderRadius: '120px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '0'\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0'\n          },\n          children: artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: audioControlsStyle,\n        children: /*#__PURE__*/_jsxDEV(AudioControls, {\n          isPlaying: isPlaying,\n          onPrevClick: toPrevTrack,\n          onNextClick: toNextTrack,\n          onPlayPauseClick: setIsPlaying\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: trackProgress,\n        step: \"1\",\n        min: \"0\",\n        max: duration || 0,\n        className: \"progress\",\n        onChange: e => onScrub(e.target.value),\n        onMouseUp: onScrubEnd,\n        onKeyUp: onScrubEnd,\n        style: progressBarStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: volumeIcon,\n        alt: \"Volume control\",\n        style: {\n          width: '48px',\n          height: '48px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n\n  // return (\n  //     <div className=\"audio-player\">\n  //         <div className=\"track-info\">\n  //             <img\n  //                 className=\"artwork\"\n  //                 src={image}\n  //                 alt={`track artwork for ${title} by ${artist}`}\n  //             />\n  //             <h2 className=\"title\">{title}</h2>\n  //             <h3 className=\"artist\">{artist}</h3>\n  //             <AudioControls\n  //                 isPlaying={isPlaying}\n  //                 onPrevClick={toPrevTrack}\n  //                 onNextClick={toNextTrack}\n  //                 onPlayPauseClick={setIsPlaying}\n  //             />\n  //             <input\n  //                 type=\"range\"\n  //                 value={trackProgress}\n  //                 step=\"1\"\n  //                 min=\"0\"\n  //                 max={duration ? duration : `${duration}`}\n  //                 className=\"progress\"\n  //                 onChange={(e) => onScrub(e.target.value)}\n  //                 onMouseUp={onScrubEnd}\n  //                 onKeyUp={onScrubEnd}\n  //                 style={{ background: trackStyling }}\n  //             />\n  //         </div>\n  //     </div>\n  // );\n};\n_s(AudioPlayer, \"E9Pm1fLhcuO8D0WYi7gJIZx8ngQ=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AudioControls","volumeIcon","jsxDEV","_jsxDEV","AudioPlayer","tracks","_s","trackIndex","setTrackIndex","trackProgress","setTrackProgress","isPlaying","setIsPlaying","title","artist","audioSrc","image","audioRef","Audio","intervalRef","isReady","duration","current","currentPercentage","trackStyling","startTimer","clearInterval","setInterval","ended","toNextTrack","currentTime","onScrub","value","onScrubEnd","toPrevTrack","length","play","pause","playerContainerStyle","display","flexDirection","justifyContent","alignItems","height","width","trackInfoStyle","audioControlsStyle","progressBarStyle","flexGrow","alignSelf","className","style","children","src","alt","marginRight","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","margin","onPrevClick","onNextClick","onPlayPauseClick","type","step","min","max","onChange","e","target","onMouseUp","onKeyUp","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport volumeIcon from '../Icon/icons8-sound-48.png';\n// import \"./styles.css\";\n\n/*\n * Read the blog post here:\n * https://letsbuildui.dev/articles/building-an-audio-player-with-react-hooks\n */\nconst AudioPlayer = ({ tracks }) => {\n    // State\n    const [trackIndex, setTrackIndex] = useState(0);\n    const [trackProgress, setTrackProgress] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    // Destructure for conciseness\n    const { title, artist, audioSrc,image } = tracks[trackIndex];\n\n    // Refs\n    const audioRef = useRef(new Audio(audioSrc));\n    const intervalRef = useRef();\n    const isReady = useRef(false);\n\n    // Destructure for conciseness\n    const { duration } = audioRef.current;\n\n    const currentPercentage = duration\n        ? `${(trackProgress / duration) * 100}%`\n        : \"0%\";\n    const trackStyling = `\n    -webkit-gradient(linear, 0% 0%, 100% 0%, color-stop(${currentPercentage}, #fff), color-stop(${currentPercentage}, #777))\n  `;\n\n    const startTimer = () => {\n        // Clear any timers already running\n        clearInterval(intervalRef.current);\n\n        intervalRef.current = setInterval(() => {\n            if (audioRef.current.ended) {\n                toNextTrack();\n            } else {\n                setTrackProgress(audioRef.current.currentTime);\n            }\n        }, [1000]);\n    };\n\n    const onScrub = (value) => {\n        // Clear any timers already running\n        clearInterval(intervalRef.current);\n        audioRef.current.currentTime = value;\n        setTrackProgress(audioRef.current.currentTime);\n    };\n\n    const onScrubEnd = () => {\n        // If not already playing, start\n        if (!isPlaying) {\n            setIsPlaying(true);\n        }\n        startTimer();\n    };\n\n    const toPrevTrack = () => {\n        if (trackIndex - 1 < 0) {\n            setTrackIndex(tracks.length - 1);\n        } else {\n            setTrackIndex(trackIndex - 1);\n        }\n    };\n\n    const toNextTrack = () => {\n        if (trackIndex < tracks.length - 1) {\n            setTrackIndex(trackIndex + 1);\n        } else {\n            setTrackIndex(0);\n        }\n    };\n\n    useEffect(() => {\n        if (isPlaying) {\n            audioRef.current.play();\n            startTimer();\n        } else {\n            audioRef.current.pause();\n        }\n    }, [isPlaying]);\n\n    // Handles cleanup and setup when changing tracks\n    useEffect(() => {\n        audioRef.current.pause();\n\n        audioRef.current = new Audio(audioSrc);\n        setTrackProgress(audioRef.current.currentTime);\n\n        if (isReady.current) {\n            audioRef.current.play();\n            setIsPlaying(true);\n            startTimer();\n        } else {\n            // Set the isReady ref as true for the next pass\n            isReady.current = true;\n        }\n    }, [trackIndex]);\n\n    useEffect(() => {\n        // Pause and clean up on unmount\n        return () => {\n            audioRef.current.pause();\n            clearInterval(intervalRef.current);\n        };\n    }, []);\n    const playerContainerStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100px', // Set a fixed height for the player container\n        width: '100%' // Ensure it takes up the container width\n    };\n\n    const trackInfoStyle = {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        width: '100%'\n    };\n\n    const audioControlsStyle = {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    };\n\n    const progressBarStyle = {\n        width: '100%', // Full width\n        flexGrow: 1,\n        alignSelf: 'flex-end' // Align progress bar at the bottom of the container\n    };\n\n\n\n\n    return (\n        <div className=\"audio-player\" style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <div className=\"track-info\" style={{ display: 'flex', alignItems: 'center' }}>\n                <img\n                    src={image}\n                    alt={`Track artwork for ${title} by ${artist}`}\n                    style={{ width: '120px', height: '120px', marginRight: '20px' , borderRadius:'120px'}}\n                />\n                <div>\n                    <h2 style={{ margin: '0' }}>{title}</h2>\n                    <h3 style={{ margin: '0' }}>{artist}</h3>\n                </div>\n\n\n                <div style={audioControlsStyle}>\n                    <AudioControls\n                        isPlaying={isPlaying}\n                        onPrevClick={toPrevTrack}\n                        onNextClick={toNextTrack}\n                        onPlayPauseClick={setIsPlaying}\n                    />\n                </div>\n                <input\n                    type=\"range\"\n                    value={trackProgress}\n                    step=\"1\"\n                    min=\"0\"\n                    max={duration || 0}\n                    className=\"progress\"\n                    onChange={(e) => onScrub(e.target.value)}\n                    onMouseUp={onScrubEnd}\n                    onKeyUp={onScrubEnd}\n                    style={progressBarStyle}\n                />\n                <img\n                    src={volumeIcon}\n                    alt=\"Volume control\"\n                    style={{ width: '48px', height: '48px' }}\n                />\n            </div>\n        </div>\n    );\n\n    // return (\n    //     <div className=\"audio-player\">\n    //         <div className=\"track-info\">\n    //             <img\n    //                 className=\"artwork\"\n    //                 src={image}\n    //                 alt={`track artwork for ${title} by ${artist}`}\n    //             />\n    //             <h2 className=\"title\">{title}</h2>\n    //             <h3 className=\"artist\">{artist}</h3>\n    //             <AudioControls\n    //                 isPlaying={isPlaying}\n    //                 onPrevClick={toPrevTrack}\n    //                 onNextClick={toNextTrack}\n    //                 onPlayPauseClick={setIsPlaying}\n    //             />\n    //             <input\n    //                 type=\"range\"\n    //                 value={trackProgress}\n    //                 step=\"1\"\n    //                 min=\"0\"\n    //                 max={duration ? duration : `${duration}`}\n    //                 className=\"progress\"\n    //                 onChange={(e) => onScrub(e.target.value)}\n    //                 onMouseUp={onScrubEnd}\n    //                 onKeyUp={onScrubEnd}\n    //                 style={{ background: trackStyling }}\n    //             />\n    //         </div>\n    //     </div>\n    // );\n};\n\nexport default AudioPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}