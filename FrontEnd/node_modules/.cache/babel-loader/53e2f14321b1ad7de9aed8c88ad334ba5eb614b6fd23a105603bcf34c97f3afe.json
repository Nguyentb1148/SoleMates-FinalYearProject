{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/ListSong.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllSongsByUserId } from '../Api/SongApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListSong = () => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  useEffect(() => {\n    if (!user || !user.Id) {\n      console.error('User ID is missing');\n      return;\n    }\n\n    // Directly set the state without using localStorage\n    getAllSongsByUserId(user.Id).then(fetchedSongs => {\n      setSongs(fetchedSongs);\n    }).catch(error => console.error('Error fetching songs:', error));\n  }, [user.Id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Songs by User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), \" \", song.title, song.imageFileName && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.imageUrl,\n            alt: song.title + ' cover art'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this), song.soundTrackFileName && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Soundtrack:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: song.soundTrackUrl,\n              type: \"audio/mpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)]\n      }, song.songId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(ListSong, \"VOyZriN/Fhf+BilZMpMEIr3tV0w=\");\n_c = ListSong;\nexport default ListSong;\nvar _c;\n$RefreshReg$(_c, \"ListSong\");","map":{"version":3,"names":["React","useState","useEffect","getAllSongsByUserId","jsxDEV","_jsxDEV","ListSong","_s","songs","setSongs","user","JSON","parse","localStorage","getItem","Id","console","error","then","fetchedSongs","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","map","song","title","imageFileName","src","imageUrl","alt","soundTrackFileName","controls","soundTrackUrl","type","songId","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/ListSong.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAllSongsByUserId } from '../Api/SongApi';\n\nconst ListSong = () => {\n    const [songs, setSongs] = useState([]);\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n\n    useEffect(() => {\n        if (!user || !user.Id) {\n            console.error('User ID is missing');\n            return;\n        }\n\n        // Directly set the state without using localStorage\n        getAllSongsByUserId(user.Id)\n            .then(fetchedSongs => {\n                setSongs(fetchedSongs);\n            })\n            .catch(error => console.error('Error fetching songs:', error));\n    }, [user.Id]);\n\n    return (\n        <div>\n            <h2>Songs by User</h2>\n            <ul>\n                {songs.map(song => (\n                    <li key={song.songId}>\n                        <strong>Title:</strong> {song.title}\n                        {song.imageFileName && (\n                            <div>\n                                <p><strong>Image:</strong></p>\n                                <img src={song.imageUrl} alt={song.title + ' cover art'} />\n                            </div>\n                        )}\n                        {song.soundTrackFileName && (\n                            <div>\n                                <p><strong>Soundtrack:</strong></p>\n                                <audio controls>\n                                    <source src={song.soundTrackUrl} type=\"audio/mpeg\" />\n                                </audio>\n                            </div>\n                        )}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default ListSong;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}