{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport moreOption from '../Icon/icons8-more-50.png';\nimport muteIcon from '../Icon/icons8-mute-50.png';\nimport lowVolumeIcon from '../Icon/icons8-low-volume-50.png';\nimport middleVolumeIcon from '../Icon/icons8-volume-50.png';\nimport volumeUpIcon from '../Icon/icons8-volume-up-50.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  tracks\n}) => {\n  _s();\n  const [trackIndex, setTrackIndex] = useState(tracks && tracks.length > 0 ? 0 : null);\n  const [trackProgress, setTrackProgress] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1.0);\n  const [muted, setMuted] = useState(false);\n  const audioRef = useRef(new Audio(tracks[trackIndex].audioSrc));\n  const intervalRef = useRef();\n  const {\n    title,\n    artist,\n    image\n  } = tracks[trackIndex];\n  const startTimer = () => {\n    // Clear any timers already running\n    clearInterval(intervalRef.current);\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        toNextTrack();\n      } else {\n        setTrackProgress(audioRef.current.currentTime);\n      }\n    }, [1000]);\n  };\n  const onScrub = value => {\n    // Clear any timers already running\n    clearInterval(intervalRef.current);\n    audioRef.current.currentTime = value;\n    setTrackProgress(audioRef.current.currentTime);\n  };\n  const onScrubEnd = () => {\n    // If not already playing, start\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n    startTimer();\n  };\n  const toPrevTrack = () => {\n    if (trackIndex - 1 < 0) {\n      setTrackIndex(tracks.length - 1);\n    } else {\n      setTrackIndex(trackIndex - 1);\n    }\n  };\n  const toNextTrack = () => {\n    if (trackIndex < tracks.length - 1) {\n      setTrackIndex(trackIndex + 1);\n    } else {\n      setTrackIndex(0);\n    }\n  };\n\n  // Volume control functions\n  const changeVolume = newVolume => {\n    audioRef.current.volume = newVolume;\n    setVolume(newVolume);\n    setMuted(newVolume === 0);\n  };\n  const toggleMute = () => {\n    const newMutedState = !muted;\n    setMuted(newMutedState);\n    audioRef.current.muted = newMutedState;\n    if (!newMutedState) {\n      audioRef.current.volume = volume;\n    }\n  };\n  useEffect(() => {\n    if (trackIndex === null) {\n      console.log(\"No track selected\");\n      return;\n    }\n    console.log(\"Track index changed to:\", trackIndex);\n    console.log(\"Current track details:\", tracks[trackIndex]);\n    audioRef.current.pause();\n    audioRef.current = new Audio(tracks[trackIndex].audioSrc);\n    setTrackProgress(audioRef.current.currentTime);\n    if (isPlaying) {\n      audioRef.current.play().then(() => {\n        console.log(\"Playback started\");\n        startTimer();\n      }).catch(error => {\n        console.error('Error attempting to play', error);\n      });\n    }\n    return () => {\n      console.log(\"Cleaning up audio player\");\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  }, [trackIndex, tracks]);\n  useEffect(() => {\n    if (trackIndex === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-player\",\n        children: \"No track selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 20\n      }, this);\n    }\n    console.log(\"isPlaying state changed to:\", isPlaying);\n    if (isPlaying) {\n      audioRef.current.play().catch(error => {\n        console.error('Error attempting to play', error);\n      });\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    if (trackIndex === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-player\",\n        children: \"No track selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 20\n      }, this);\n    }\n    console.log(\"Volume or muted state changed\");\n    audioRef.current.volume = volume;\n    audioRef.current.muted = muted;\n  }, [volume, muted]);\n  const getVolumeIcon = () => {\n    if (muted || volume === 0) return muteIcon;\n    if (volume < 0.5) return lowVolumeIcon;\n    if (volume < 1) return middleVolumeIcon;\n    return volumeUpIcon;\n  };\n  const playerContainerStyle = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: '#000000',\n    color: '#ffffff',\n    position: 'fixed',\n    bottom: '0',\n    left: '0',\n    right: '0',\n    width: '100%',\n    maxWidth: '1920px',\n    margin: '0 auto'\n  };\n  const progressBarStyle = {\n    width: '100%'\n  };\n  const volumeIcon = getVolumeIcon();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    style: playerContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Track artwork for ${title} by ${artist}`,\n        style: {\n          width: '80px',\n          height: '80px',\n          borderRadius: '80px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '0'\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0'\n          },\n          children: artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AudioControls, {\n        isPlaying: isPlaying,\n        onPlayPauseClick: setIsPlaying,\n        onPrevClick: toPrevTrack,\n        onNextClick: toNextTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: trackProgress,\n        step: \"1\",\n        min: \"0\",\n        max: audioRef.current.duration || 0,\n        className: \"progress\",\n        onChange: e => onScrub(e.target.value),\n        onMouseUp: onScrubEnd,\n        onKeyUp: onScrubEnd,\n        style: progressBarStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginRight: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: volumeIcon,\n        alt: \"Volume\",\n        onClick: toggleMute,\n        style: {\n          width: '30px',\n          height: '30px',\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        value: muted ? 0 : volume,\n        onChange: e => changeVolume(parseFloat(e.target.value)),\n        style: {\n          margin: '0 15px',\n          width: '100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: moreOption,\n        alt: \"More options\",\n        style: {\n          width: '30px',\n          height: '30px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioPlayer, \"sPfkAXPExCRqrxjTcKl5xuDPR3w=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AudioControls","moreOption","muteIcon","lowVolumeIcon","middleVolumeIcon","volumeUpIcon","jsxDEV","_jsxDEV","AudioPlayer","tracks","_s","trackIndex","setTrackIndex","length","trackProgress","setTrackProgress","isPlaying","setIsPlaying","volume","setVolume","muted","setMuted","audioRef","Audio","audioSrc","intervalRef","title","artist","image","startTimer","clearInterval","current","setInterval","ended","toNextTrack","currentTime","onScrub","value","onScrubEnd","toPrevTrack","changeVolume","newVolume","toggleMute","newMutedState","console","log","pause","play","then","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getVolumeIcon","playerContainerStyle","display","justifyContent","alignItems","backgroundColor","color","position","bottom","left","right","width","maxWidth","margin","progressBarStyle","volumeIcon","style","marginLeft","src","alt","height","borderRadius","flex","flexDirection","onPlayPauseClick","onPrevClick","onNextClick","type","step","min","max","duration","onChange","e","target","onMouseUp","onKeyUp","marginRight","onClick","cursor","parseFloat","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport moreOption from '../Icon/icons8-more-50.png'\nimport muteIcon from '../Icon/icons8-mute-50.png';\nimport lowVolumeIcon from '../Icon/icons8-low-volume-50.png';\nimport middleVolumeIcon from '../Icon/icons8-volume-50.png';\nimport volumeUpIcon from '../Icon/icons8-volume-up-50.png';\n\n\nconst AudioPlayer = ({ tracks }) => {\n    const [trackIndex, setTrackIndex] = useState(tracks && tracks.length > 0 ? 0 : null);\n    const [trackProgress, setTrackProgress] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [volume, setVolume] = useState(1.0);\n    const [muted, setMuted] = useState(false);\n    const audioRef = useRef(new Audio(tracks[trackIndex].audioSrc));\n    const intervalRef = useRef();\n    const { title, artist, image } = tracks[trackIndex];\n\n    const startTimer = () => {\n        // Clear any timers already running\n        clearInterval(intervalRef.current);\n\n        intervalRef.current = setInterval(() => {\n            if (audioRef.current.ended) {\n                toNextTrack();\n            } else {\n                setTrackProgress(audioRef.current.currentTime);\n            }\n        }, [1000]);\n    };\n\n    const onScrub = (value) => {\n        // Clear any timers already running\n        clearInterval(intervalRef.current);\n        audioRef.current.currentTime = value;\n        setTrackProgress(audioRef.current.currentTime);\n    };\n\n    const onScrubEnd = () => {\n        // If not already playing, start\n        if (!isPlaying) {\n            setIsPlaying(true);\n        }\n        startTimer();\n    };\n\n    const toPrevTrack = () => {\n        if (trackIndex - 1 < 0) {\n            setTrackIndex(tracks.length - 1);\n        } else {\n            setTrackIndex(trackIndex - 1);\n        }\n    };\n\n    const toNextTrack = () => {\n        if (trackIndex < tracks.length - 1) {\n            setTrackIndex(trackIndex + 1);\n        } else {\n            setTrackIndex(0);\n        }\n    };\n\n    // Volume control functions\n    const changeVolume = (newVolume) => {\n        audioRef.current.volume = newVolume;\n        setVolume(newVolume);\n        setMuted(newVolume === 0);\n    };\n\n    const toggleMute = () => {\n        const newMutedState = !muted;\n        setMuted(newMutedState);\n        audioRef.current.muted = newMutedState;\n        if (!newMutedState) {\n            audioRef.current.volume = volume;\n        }\n    };\n\n    useEffect(() => {\n        if (trackIndex === null) {\n            console.log(\"No track selected\");\n            return;\n        }\n        console.log(\"Track index changed to:\", trackIndex);\n        console.log(\"Current track details:\", tracks[trackIndex]);\n\n        audioRef.current.pause();\n\n        audioRef.current = new Audio(tracks[trackIndex].audioSrc);\n        setTrackProgress(audioRef.current.currentTime);\n\n        if (isPlaying) {\n            audioRef.current.play().then(() => {\n                console.log(\"Playback started\");\n                startTimer();\n            }).catch((error) => {\n                console.error('Error attempting to play', error);\n            });\n        }\n\n        return () => {\n            console.log(\"Cleaning up audio player\");\n            audioRef.current.pause();\n            clearInterval(intervalRef.current);\n        };\n    }, [trackIndex, tracks]);\n\n\n    useEffect(() => {\n        if (trackIndex === null) {\n            return <div className=\"audio-player\">No track selected</div>;\n        }\n        console.log(\"isPlaying state changed to:\", isPlaying);\n        if (isPlaying) {\n            audioRef.current.play().catch((error) => {\n                console.error('Error attempting to play', error);\n            });\n        } else {\n            audioRef.current.pause();\n        }\n    }, [isPlaying]);\n\n    useEffect(() => {\n        if (trackIndex === null) {\n            return <div className=\"audio-player\">No track selected</div>;\n        }\n        console.log(\"Volume or muted state changed\");\n        audioRef.current.volume = volume;\n        audioRef.current.muted = muted;\n    }, [volume, muted]);\n\n    const getVolumeIcon = () => {\n        if (muted || volume === 0) return muteIcon;\n        if (volume < 0.5) return lowVolumeIcon;\n        if (volume < 1) return middleVolumeIcon;\n        return volumeUpIcon;\n    };\n\n    const playerContainerStyle = {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#000000',\n        color: '#ffffff',\n        position: 'fixed',\n        bottom: '0',\n        left: '0',\n        right: '0',\n        width: '100%',\n        maxWidth: '1920px',\n        margin: '0 auto',\n    };\n\n    const progressBarStyle = {\n        width: '100%',\n    };\n\n    const volumeIcon = getVolumeIcon();\n\n\n    return (\n        <div className=\"audio-player\" style={playerContainerStyle}>\n            <div style={{ display: 'flex', alignItems: 'center', marginLeft: '20px' }}>\n                <img\n                    src={image}\n                    alt={`Track artwork for ${title} by ${artist}`}\n                    style={{ width: '80px', height: '80px', borderRadius: '80px' }}\n                />\n                <div style={{ marginLeft: '10px' }}>\n                    <h2 style={{ margin: '0' }}>{title}</h2>\n                    <p style={{ margin: '0' }}>{artist}</p>\n                </div>\n            </div>\n\n            <div style={{ flex: 1, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                <AudioControls\n                    isPlaying={isPlaying}\n                    onPlayPauseClick={setIsPlaying}\n                    onPrevClick={toPrevTrack}\n                    onNextClick={toNextTrack}\n                />\n                <input\n                    type=\"range\"\n                    value={trackProgress}\n                    step=\"1\"\n                    min=\"0\"\n                    max={audioRef.current.duration || 0}\n                    className=\"progress\"\n                    onChange={(e) => onScrub(e.target.value)}\n                    onMouseUp={onScrubEnd}\n                    onKeyUp={onScrubEnd}\n                    style={progressBarStyle}\n                />\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginRight: '20px' }}>\n                <img\n                    src={volumeIcon}\n                    alt=\"Volume\"\n                    onClick={toggleMute}\n                    style={{ width: '30px', height: '30px', cursor: 'pointer' }}\n                />\n                <input\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"1\"\n                    step=\"0.01\"\n                    value={muted ? 0 : volume}\n                    onChange={(e) => changeVolume(parseFloat(e.target.value))}\n                    style={{ margin: '0 15px', width: '100px' }}\n                />\n                <img\n                    src={moreOption}\n                    alt=\"More options\"\n                    style={{ width: '30px', height: '30px' }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default AudioPlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,aAAa,MAAM,kCAAkC;AAC5D,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,YAAY,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3D,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAACY,MAAM,IAAIA,MAAM,CAACI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;EACpF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,GAAG,CAAC;EACzC,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAMyB,QAAQ,GAAGvB,MAAM,CAAC,IAAIwB,KAAK,CAACd,MAAM,CAACE,UAAU,CAAC,CAACa,QAAQ,CAAC,CAAC;EAC/D,MAAMC,WAAW,GAAG1B,MAAM,CAAC,CAAC;EAC5B,MAAM;IAAE2B,KAAK;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGnB,MAAM,CAACE,UAAU,CAAC;EAEnD,MAAMkB,UAAU,GAAGA,CAAA,KAAM;IACrB;IACAC,aAAa,CAACL,WAAW,CAACM,OAAO,CAAC;IAElCN,WAAW,CAACM,OAAO,GAAGC,WAAW,CAAC,MAAM;MACpC,IAAIV,QAAQ,CAACS,OAAO,CAACE,KAAK,EAAE;QACxBC,WAAW,CAAC,CAAC;MACjB,CAAC,MAAM;QACHnB,gBAAgB,CAACO,QAAQ,CAACS,OAAO,CAACI,WAAW,CAAC;MAClD;IACJ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;EACd,CAAC;EAED,MAAMC,OAAO,GAAIC,KAAK,IAAK;IACvB;IACAP,aAAa,CAACL,WAAW,CAACM,OAAO,CAAC;IAClCT,QAAQ,CAACS,OAAO,CAACI,WAAW,GAAGE,KAAK;IACpCtB,gBAAgB,CAACO,QAAQ,CAACS,OAAO,CAACI,WAAW,CAAC;EAClD,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACrB;IACA,IAAI,CAACtB,SAAS,EAAE;MACZC,YAAY,CAAC,IAAI,CAAC;IACtB;IACAY,UAAU,CAAC,CAAC;EAChB,CAAC;EAED,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAI5B,UAAU,GAAG,CAAC,GAAG,CAAC,EAAE;MACpBC,aAAa,CAACH,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC;IACpC,CAAC,MAAM;MACHD,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;IACjC;EACJ,CAAC;EAED,MAAMuB,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIvB,UAAU,GAAGF,MAAM,CAACI,MAAM,GAAG,CAAC,EAAE;MAChCD,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;IACjC,CAAC,MAAM;MACHC,aAAa,CAAC,CAAC,CAAC;IACpB;EACJ,CAAC;;EAED;EACA,MAAM4B,YAAY,GAAIC,SAAS,IAAK;IAChCnB,QAAQ,CAACS,OAAO,CAACb,MAAM,GAAGuB,SAAS;IACnCtB,SAAS,CAACsB,SAAS,CAAC;IACpBpB,QAAQ,CAACoB,SAAS,KAAK,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,aAAa,GAAG,CAACvB,KAAK;IAC5BC,QAAQ,CAACsB,aAAa,CAAC;IACvBrB,QAAQ,CAACS,OAAO,CAACX,KAAK,GAAGuB,aAAa;IACtC,IAAI,CAACA,aAAa,EAAE;MAChBrB,QAAQ,CAACS,OAAO,CAACb,MAAM,GAAGA,MAAM;IACpC;EACJ,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZ,IAAIa,UAAU,KAAK,IAAI,EAAE;MACrBiC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChC;IACJ;IACAD,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAElC,UAAU,CAAC;IAClDiC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEpC,MAAM,CAACE,UAAU,CAAC,CAAC;IAEzDW,QAAQ,CAACS,OAAO,CAACe,KAAK,CAAC,CAAC;IAExBxB,QAAQ,CAACS,OAAO,GAAG,IAAIR,KAAK,CAACd,MAAM,CAACE,UAAU,CAAC,CAACa,QAAQ,CAAC;IACzDT,gBAAgB,CAACO,QAAQ,CAACS,OAAO,CAACI,WAAW,CAAC;IAE9C,IAAInB,SAAS,EAAE;MACXM,QAAQ,CAACS,OAAO,CAACgB,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;QAC/BJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAC/BhB,UAAU,CAAC,CAAC;MAChB,CAAC,CAAC,CAACoB,KAAK,CAAEC,KAAK,IAAK;QAChBN,OAAO,CAACM,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD,CAAC,CAAC;IACN;IAEA,OAAO,MAAM;MACTN,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCvB,QAAQ,CAACS,OAAO,CAACe,KAAK,CAAC,CAAC;MACxBhB,aAAa,CAACL,WAAW,CAACM,OAAO,CAAC;IACtC,CAAC;EACL,CAAC,EAAE,CAACpB,UAAU,EAAEF,MAAM,CAAC,CAAC;EAGxBX,SAAS,CAAC,MAAM;IACZ,IAAIa,UAAU,KAAK,IAAI,EAAE;MACrB,oBAAOJ,OAAA;QAAK4C,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAChE;IACAZ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE7B,SAAS,CAAC;IACrD,IAAIA,SAAS,EAAE;MACXM,QAAQ,CAACS,OAAO,CAACgB,IAAI,CAAC,CAAC,CAACE,KAAK,CAAEC,KAAK,IAAK;QACrCN,OAAO,CAACM,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD,CAAC,CAAC;IACN,CAAC,MAAM;MACH5B,QAAQ,CAACS,OAAO,CAACe,KAAK,CAAC,CAAC;IAC5B;EACJ,CAAC,EAAE,CAAC9B,SAAS,CAAC,CAAC;EAEflB,SAAS,CAAC,MAAM;IACZ,IAAIa,UAAU,KAAK,IAAI,EAAE;MACrB,oBAAOJ,OAAA;QAAK4C,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAChE;IACAZ,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5CvB,QAAQ,CAACS,OAAO,CAACb,MAAM,GAAGA,MAAM;IAChCI,QAAQ,CAACS,OAAO,CAACX,KAAK,GAAGA,KAAK;EAClC,CAAC,EAAE,CAACF,MAAM,EAAEE,KAAK,CAAC,CAAC;EAEnB,MAAMqC,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIrC,KAAK,IAAIF,MAAM,KAAK,CAAC,EAAE,OAAOhB,QAAQ;IAC1C,IAAIgB,MAAM,GAAG,GAAG,EAAE,OAAOf,aAAa;IACtC,IAAIe,MAAM,GAAG,CAAC,EAAE,OAAOd,gBAAgB;IACvC,OAAOC,YAAY;EACvB,CAAC;EAED,MAAMqD,oBAAoB,GAAG;IACzBC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,OAAO;IACjBC,MAAM,EAAE,GAAG;IACXC,IAAI,EAAE,GAAG;IACTC,KAAK,EAAE,GAAG;IACVC,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,QAAQ;IAClBC,MAAM,EAAE;EACZ,CAAC;EAED,MAAMC,gBAAgB,GAAG;IACrBH,KAAK,EAAE;EACX,CAAC;EAED,MAAMI,UAAU,GAAGf,aAAa,CAAC,CAAC;EAGlC,oBACIlD,OAAA;IAAK4C,SAAS,EAAC,cAAc;IAACsB,KAAK,EAAEf,oBAAqB;IAAAN,QAAA,gBACtD7C,OAAA;MAAKkE,KAAK,EAAE;QAAEd,OAAO,EAAE,MAAM;QAAEE,UAAU,EAAE,QAAQ;QAAEa,UAAU,EAAE;MAAO,CAAE;MAAAtB,QAAA,gBACtE7C,OAAA;QACIoE,GAAG,EAAE/C,KAAM;QACXgD,GAAG,EAAG,qBAAoBlD,KAAM,OAAMC,MAAO,EAAE;QAC/C8C,KAAK,EAAE;UAAEL,KAAK,EAAE,MAAM;UAAES,MAAM,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAO;MAAE;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eACFjD,OAAA;QAAKkE,KAAK,EAAE;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAAtB,QAAA,gBAC/B7C,OAAA;UAAIkE,KAAK,EAAE;YAAEH,MAAM,EAAE;UAAI,CAAE;UAAAlB,QAAA,EAAE1B;QAAK;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxCjD,OAAA;UAAGkE,KAAK,EAAE;YAAEH,MAAM,EAAE;UAAI,CAAE;UAAAlB,QAAA,EAAEzB;QAAM;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENjD,OAAA;MAAKkE,KAAK,EAAE;QAAEM,IAAI,EAAE,CAAC;QAAEpB,OAAO,EAAE,MAAM;QAAEqB,aAAa,EAAE,QAAQ;QAAEnB,UAAU,EAAE;MAAS,CAAE;MAAAT,QAAA,gBACpF7C,OAAA,CAACP,aAAa;QACVgB,SAAS,EAAEA,SAAU;QACrBiE,gBAAgB,EAAEhE,YAAa;QAC/BiE,WAAW,EAAE3C,WAAY;QACzB4C,WAAW,EAAEjD;MAAY;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFjD,OAAA;QACI6E,IAAI,EAAC,OAAO;QACZ/C,KAAK,EAAEvB,aAAc;QACrBuE,IAAI,EAAC,GAAG;QACRC,GAAG,EAAC,GAAG;QACPC,GAAG,EAAEjE,QAAQ,CAACS,OAAO,CAACyD,QAAQ,IAAI,CAAE;QACpCrC,SAAS,EAAC,UAAU;QACpBsC,QAAQ,EAAGC,CAAC,IAAKtD,OAAO,CAACsD,CAAC,CAACC,MAAM,CAACtD,KAAK,CAAE;QACzCuD,SAAS,EAAEtD,UAAW;QACtBuD,OAAO,EAAEvD,UAAW;QACpBmC,KAAK,EAAEF;MAAiB;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENjD,OAAA;MAAKkE,KAAK,EAAE;QAAEd,OAAO,EAAE,MAAM;QAAEqB,aAAa,EAAE,KAAK;QAAEnB,UAAU,EAAE,QAAQ;QAAEiC,WAAW,EAAE;MAAO,CAAE;MAAA1C,QAAA,gBAC7F7C,OAAA;QACIoE,GAAG,EAAEH,UAAW;QAChBI,GAAG,EAAC,QAAQ;QACZmB,OAAO,EAAErD,UAAW;QACpB+B,KAAK,EAAE;UAAEL,KAAK,EAAE,MAAM;UAAES,MAAM,EAAE,MAAM;UAAEmB,MAAM,EAAE;QAAU;MAAE;QAAA3C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eACFjD,OAAA;QACI6E,IAAI,EAAC,OAAO;QACZE,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC,GAAG;QACPF,IAAI,EAAC,MAAM;QACXhD,KAAK,EAAEjB,KAAK,GAAG,CAAC,GAAGF,MAAO;QAC1BuE,QAAQ,EAAGC,CAAC,IAAKlD,YAAY,CAACyD,UAAU,CAACP,CAAC,CAACC,MAAM,CAACtD,KAAK,CAAC,CAAE;QAC1DoC,KAAK,EAAE;UAAEH,MAAM,EAAE,QAAQ;UAAEF,KAAK,EAAE;QAAQ;MAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFjD,OAAA;QACIoE,GAAG,EAAE1E,UAAW;QAChB2E,GAAG,EAAC,cAAc;QAClBH,KAAK,EAAE;UAAEL,KAAK,EAAE,MAAM;UAAES,MAAM,EAAE;QAAO;MAAE;QAAAxB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC9C,EAAA,CAnNIF,WAAW;AAAA0F,EAAA,GAAX1F,WAAW;AAqNjB,eAAeA,WAAW;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}