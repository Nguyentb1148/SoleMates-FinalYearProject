{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/Album/AddAlbum.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { storage } from \"../../firebase\";\nimport defaultAlbumImage from '../../Img/default-cover-art.png';\nimport { getAllSongsByUserId } from '../../Api/SongApi';\nimport { addNewAlbum } from '../../Api/ArtistApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddAlbumPage = () => {\n  _s();\n  const [albumName, setAlbumName] = useState('');\n  const [albumImage, setAlbumImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(defaultAlbumImage);\n  const [selectedSongs, setSelectedSongs] = useState(new Set());\n  const [allUserSongs, setAllUserSongs] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    loadUserSongs();\n  }, []);\n  const loadUserSongs = async () => {\n    try {\n      const userSongs = await getAllSongsByUserId();\n      setAllUserSongs(userSongs);\n    } catch (error) {\n      console.error('Error loading user songs:', error);\n    }\n  };\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setAlbumImage(file);\n      const previewUrl = URL.createObjectURL(file);\n      setImagePreview(previewUrl);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (!albumName || !albumImage) {\n        alert('Please provide album name and image.');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('NameOfAlbum', albumName);\n      const imageFileRef = ref(storage, `AlbumImages/${albumImage.name}`);\n      await uploadBytes(imageFileRef, albumImage);\n      const imageURL = await getDownloadURL(imageFileRef);\n      formData.append('ImageAlbumUrl', imageURL);\n      const result = await addNewAlbum(formData);\n      console.log(result);\n      alert('Album added successfully!');\n      navigate('/ListAlbum');\n    } catch (error) {\n      console.error('Error adding album:', error);\n      alert('Failed to add album.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Album\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"albumName\",\n          children: \"Album Name *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"albumName\",\n          type: \"text\",\n          value: albumName,\n          onChange: e => setAlbumName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"albumImage\",\n          children: \"Album Image *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"albumImage\",\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Image Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePreview,\n          alt: \"Album Preview\",\n          style: {\n            maxWidth: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(AddAlbumPage, \"BBd2kYUdvx4+6nuMHmhTvhPo1L8=\", false, function () {\n  return [useNavigate];\n});\n_c = AddAlbumPage;\nexport default AddAlbumPage;\nvar _c;\n$RefreshReg$(_c, \"AddAlbumPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ref","uploadBytes","getDownloadURL","storage","defaultAlbumImage","getAllSongsByUserId","addNewAlbum","jsxDEV","_jsxDEV","AddAlbumPage","_s","albumName","setAlbumName","albumImage","setAlbumImage","imagePreview","setImagePreview","selectedSongs","setSelectedSongs","Set","allUserSongs","setAllUserSongs","navigate","loadUserSongs","userSongs","error","console","handleImageChange","event","file","target","files","previewUrl","URL","createObjectURL","handleSubmit","e","preventDefault","alert","formData","FormData","append","imageFileRef","name","imageURL","result","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","required","accept","src","alt","style","maxWidth","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/Album/AddAlbum.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { storage } from \"../../firebase\";\nimport defaultAlbumImage from '../../Img/default-cover-art.png';\nimport { getAllSongsByUserId } from '../../Api/SongApi';\nimport { addNewAlbum } from '../../Api/ArtistApi';\n\nconst AddAlbumPage = () => {\n    const [albumName, setAlbumName] = useState('');\n    const [albumImage, setAlbumImage] = useState(null);\n    const [imagePreview, setImagePreview] = useState(defaultAlbumImage);\n    const [selectedSongs, setSelectedSongs] = useState(new Set());\n    const [allUserSongs, setAllUserSongs] = useState([]);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        loadUserSongs();\n    }, []);\n\n    const loadUserSongs = async () => {\n        try {\n            const userSongs = await getAllSongsByUserId();\n            setAllUserSongs(userSongs);\n        } catch (error) {\n            console.error('Error loading user songs:', error);\n        }\n    };\n\n    const handleImageChange = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            setAlbumImage(file);\n            const previewUrl = URL.createObjectURL(file);\n            setImagePreview(previewUrl);\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            if (!albumName || !albumImage) {\n                alert('Please provide album name and image.');\n                return;\n            }\n\n            const formData = new FormData();\n            formData.append('NameOfAlbum', albumName);\n\n            const imageFileRef = ref(storage, `AlbumImages/${albumImage.name}`);\n            await uploadBytes(imageFileRef, albumImage);\n            const imageURL = await getDownloadURL(imageFileRef);\n            formData.append('ImageAlbumUrl', imageURL);\n\n            const result = await addNewAlbum(formData);\n            console.log(result);\n            alert('Album added successfully!');\n            navigate('/ListAlbum');\n        } catch (error) {\n            console.error('Error adding album:', error);\n            alert('Failed to add album.');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Add New Album</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"albumName\">Album Name *</label>\n                    <input\n                        id=\"albumName\"\n                        type=\"text\"\n                        value={albumName}\n                        onChange={(e) => setAlbumName(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"albumImage\">Album Image *</label>\n                    <input\n                        id=\"albumImage\"\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={handleImageChange}\n                        required\n                    />\n                </div>\n                {imagePreview && (\n                    <div>\n                        <h3>Image Preview</h3>\n                        <img src={imagePreview} alt=\"Album Preview\" style={{ maxWidth: '200px' }} />\n                    </div>\n                )}\n                <button type=\"submit\">Add Album</button>\n            </form>\n        </div>\n    );\n};\n\nexport default AddAlbumPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}