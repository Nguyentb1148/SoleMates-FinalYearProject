{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/Search.js\",\n  _s = $RefreshSig$();\n// Search.js\nimport React, { useState } from 'react';\nimport { searchByTitle } from \"../Api/SongApi\"; // Ensure this path matches your project structure\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const handleSearch = async () => {\n    if (!searchQuery) return;\n    try {\n      const results = await searchByTitle(searchQuery);\n      setSearchResults(results);\n    } catch (error) {\n      console.error('Error searching:', error);\n      setSearchResults([]);\n    }\n  };\n  const handleInputChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: handleInputChange,\n      placeholder: \"Search by title...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: searchResults.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"song-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/song/${song.songId}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"song-info\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"song-title\",\n                children: song.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this)\n        }, song.songId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No songs found. Try a different search.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchPage, \"jn4xHEBDfu/IrX9NjeCde/IJa08=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","searchByTitle","Link","jsxDEV","_jsxDEV","SearchPage","_s","searchQuery","setSearchQuery","searchResults","setSearchResults","handleSearch","results","error","console","handleInputChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","length","map","song","to","songId","title","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/Search.js"],"sourcesContent":["// Search.js\nimport React, { useState } from 'react';\nimport { searchByTitle } from \"../Api/SongApi\"; // Ensure this path matches your project structure\nimport { Link } from 'react-router-dom';\n\nconst SearchPage = () => {\n    const [searchQuery, setSearchQuery] = useState('');\n    const [searchResults, setSearchResults] = useState([]);\n\n    const handleSearch = async () => {\n        if (!searchQuery) return;\n        try {\n            const results = await searchByTitle(searchQuery);\n            setSearchResults(results);\n        } catch (error) {\n            console.error('Error searching:', error);\n            setSearchResults([]);\n        }\n    };\n\n    const handleInputChange = (event) => {\n        setSearchQuery(event.target.value);\n    };\n\n    return (\n        <div className=\"search-page-container\">\n            <h2>Search Songs</h2>\n            <input\n                type=\"text\"\n                value={searchQuery}\n                onChange={handleInputChange}\n                placeholder=\"Search by title...\"\n            />\n            <button onClick={handleSearch}>Search</button>\n            <div className=\"search-results\">\n                {searchResults.length > 0 ? (\n                    <ul>\n                        {searchResults.map((song) => (\n                            <li key={song.songId} className=\"song-item\">\n                                <Link to={`/song/${song.songId}`}>\n                                    <div className=\"song-info\">\n                                        <div className=\"song-title\">{song.title}</div>\n                                    </div>\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                ) : (\n                    <p>No songs found. Try a different search.</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SearchPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}