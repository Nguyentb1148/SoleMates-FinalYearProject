{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/ListSong.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllSongsByUserId } from '../Api/SongApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListSong = () => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const user = JSON.parse(localStorage.getItem('user') || '{}'); // Parse the stored string to an object\n\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        if (!user || !user.Id) {\n          console.error('User ID is missing');\n          // Handle missing user ID appropriately, e.g., show an error message\n          return;\n        }\n        const fetchedSongs = await getAllSongsByUserId(user.Id);\n        setSongs(fetchedSongs);\n      } catch (error) {\n        console.error('Error fetching songs:', error);\n      }\n    };\n    fetchSongs();\n  }, [user.Id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Songs by User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), songs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No songs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Artist:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 32\n          }, this), \" \", song.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Release Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 32\n          }, this), \" \", new Date(song.releaseDate).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 32\n          }, this), \" \", song.duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Privacy:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 32\n          }, this), \" \", song.privacy ? 'Private' : 'Public']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this), song.soundTrackUrl && /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: song.soundTrackUrl,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 37\n          }, this), \"Your browser does not support the audio element.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }, this), song.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.imageUrl,\n            alt: `${song.title} cover`,\n            width: \"200\",\n            height: \"200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }, this)]\n      }, song.songId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(ListSong, \"VOyZriN/Fhf+BilZMpMEIr3tV0w=\");\n_c = ListSong;\nexport default ListSong;\nvar _c;\n$RefreshReg$(_c, \"ListSong\");","map":{"version":3,"names":["React","useState","useEffect","getAllSongsByUserId","jsxDEV","_jsxDEV","ListSong","_s","songs","setSongs","user","JSON","parse","localStorage","getItem","fetchSongs","Id","console","error","fetchedSongs","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","song","title","userId","Date","releaseDate","toLocaleDateString","duration","privacy","soundTrackUrl","controls","src","type","imageUrl","alt","width","height","songId","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/ListSong.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAllSongsByUserId } from '../Api/SongApi';\n\nconst ListSong = () => {\n    const [songs, setSongs] = useState([]);\n    const user = JSON.parse(localStorage.getItem('user') || '{}'); // Parse the stored string to an object\n\n    useEffect(() => {\n        const fetchSongs = async () => {\n            try {\n                if (!user || !user.Id) {\n                    console.error('User ID is missing');\n                    // Handle missing user ID appropriately, e.g., show an error message\n                    return;\n                }\n                const fetchedSongs = await getAllSongsByUserId(user.Id);\n                setSongs(fetchedSongs);\n            } catch (error) {\n                console.error('Error fetching songs:', error);\n            }\n        };\n\n        fetchSongs();\n    }, [user.Id]);\n\n    return (\n        <div>\n            <h2>Songs by User</h2>\n            {songs.length === 0 ? (\n                <p>No songs found.</p>\n            ) : (\n                <ul>\n                    {songs.map(song => (\n                        <li key={song.songId}>\n                            <h3>{song.title}</h3>\n                            <p><strong>Artist:</strong> {song.userId}</p> {/* You might want to fetch and display the artist's name instead of the user ID */}\n                            <p><strong>Release Date:</strong> {new Date(song.releaseDate).toLocaleDateString()}</p>\n                            <p><strong>Duration:</strong> {song.duration}</p>\n                            <p><strong>Privacy:</strong> {song.privacy ? 'Private' : 'Public'}</p>\n                            {song.soundTrackUrl && (\n                                <audio controls>\n                                    <source src={song.soundTrackUrl} type=\"audio/mpeg\" />\n                                    Your browser does not support the audio element.\n                                </audio>\n                            )}\n                            {song.imageUrl && (\n                                <div>\n                                    <img src={song.imageUrl} alt={`${song.title} cover`} width=\"200\" height=\"200\" />\n                                </div>\n                            )}\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default ListSong;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}