{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport AudioControls from './AudioControls';\nimport muteIcon from '../Icon/icons8-mute-50.png';\nimport lowVolumeIcon from '../Icon/icons8-low-volume-50.png';\nimport middleVolumeIcon from '../Icon/icons8-volume-50.png';\nimport volumeUpIcon from '../Icon/icons8-volume-up-50.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  track,\n  onPlayPauseClick\n}) => {\n  _s();\n  const audioRef = useRef(new Audio(track.audioSrc));\n  const [volume, setVolume] = useState(1);\n  const [isMuted, setIsMuted] = useState(false);\n  useEffect(() => {\n    if (track && track.audioSrc) {\n      audioRef.current.src = track.audioSrc;\n      audioRef.current.play();\n    }\n  }, [track]);\n  useEffect(() => {\n    if (onPlayPauseClick) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [onPlayPauseClick]);\n  useEffect(() => {\n    audioRef.current.volume = isMuted ? 0 : volume;\n  }, [volume, isMuted]);\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n  };\n  const getVolumeIcon = () => {\n    if (isMuted || volume === 0) return muteIcon;\n    if (volume < 0.5) return lowVolumeIcon;\n    if (volume < 1) return middleVolumeIcon;\n    return volumeUpIcon;\n  };\n  if (!track) return null;\n  // Inline styles\n  const playerContainerStyle = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    position: 'fixed',\n    left: '0',\n    bottom: '0',\n    width: '100%',\n    backgroundColor: '#fff',\n    boxShadow: '0 -2px 5px rgba(0, 0, 0, 0.2)',\n    padding: '1rem'\n  };\n  const trackInfoStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 1rem'\n  };\n  const trackImageStyle = {\n    width: '50px',\n    height: '50px',\n    marginRight: '1rem',\n    borderRadius: '50%'\n  };\n  const trackDetailsStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  };\n  const volumeControlStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: '20px'\n  };\n  const volumeIconStyle = {\n    width: '30px',\n    height: '30px',\n    cursor: 'pointer'\n  };\n  const volumeSliderStyle = {\n    width: '100px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    style: playerContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: trackInfoStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: track.image,\n        alt: track.title,\n        style: trackImageStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: trackDetailsStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: track.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: track.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AudioControls, {\n      isPlaying: onPlayPauseClick,\n      onPlayPauseClick: () => onPlayPauseClick(!onPlayPauseClick)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: volumeControlStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getVolumeIcon(),\n        alt: \"Volume\",\n        onClick: toggleMute,\n        style: volumeIconStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: isMuted ? 0 : volume,\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        onChange: e => setVolume(parseFloat(e.target.value)),\n        style: volumeSliderStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMute,\n        children: isMuted ? 'Unmute' : 'Mute'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onEnded: () => onPlayPauseClick(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioPlayer, \"nuwgIYu5Wj8VqPY2Q1CB7mxHqsg=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","AudioControls","muteIcon","lowVolumeIcon","middleVolumeIcon","volumeUpIcon","jsxDEV","_jsxDEV","AudioPlayer","track","onPlayPauseClick","_s","audioRef","Audio","audioSrc","volume","setVolume","isMuted","setIsMuted","current","src","play","pause","toggleMute","getVolumeIcon","playerContainerStyle","display","justifyContent","alignItems","position","left","bottom","width","backgroundColor","boxShadow","padding","trackInfoStyle","trackImageStyle","height","marginRight","borderRadius","trackDetailsStyle","flexDirection","volumeControlStyle","volumeIconStyle","cursor","volumeSliderStyle","style","children","image","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","artist","isPlaying","onClick","type","value","min","max","step","onChange","e","parseFloat","target","ref","onEnded","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport AudioControls from './AudioControls';\nimport muteIcon from '../Icon/icons8-mute-50.png';\nimport lowVolumeIcon from '../Icon/icons8-low-volume-50.png';\nimport middleVolumeIcon from '../Icon/icons8-volume-50.png';\nimport volumeUpIcon from '../Icon/icons8-volume-up-50.png';\n\nconst AudioPlayer = ({ track, onPlayPauseClick }) => {\n    const audioRef = useRef(new Audio(track.audioSrc));\n    const [volume, setVolume] = useState(1);\n    const [isMuted, setIsMuted] = useState(false);\n\n    useEffect(() => {\n        if (track && track.audioSrc) {\n            audioRef.current.src = track.audioSrc;\n            audioRef.current.play();\n        }\n    }, [track]);\n\n    useEffect(() => {\n        if (onPlayPauseClick) {\n            audioRef.current.play();\n        } else {\n            audioRef.current.pause();\n        }\n    }, [onPlayPauseClick]);\n\n    useEffect(() => {\n        audioRef.current.volume = isMuted ? 0 : volume;\n    }, [volume, isMuted]);\n    const toggleMute = () => {\n        setIsMuted(!isMuted);\n    };\n    const getVolumeIcon = () => {\n        if (isMuted || volume === 0) return muteIcon;\n        if (volume < 0.5) return lowVolumeIcon;\n        if (volume < 1) return middleVolumeIcon;\n        return volumeUpIcon;\n    };\n    if (!track) return null;\n// Inline styles\n    const playerContainerStyle = {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        position: 'fixed',\n        left: '0',\n        bottom: '0',\n        width: '100%',\n        backgroundColor: '#fff',\n        boxShadow: '0 -2px 5px rgba(0, 0, 0, 0.2)',\n        padding: '1rem'\n    };\n\n    const trackInfoStyle = {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 1rem'\n    };\n\n    const trackImageStyle = {\n        width: '50px',\n        height: '50px',\n        marginRight: '1rem',\n        borderRadius: '50%'\n    };\n\n    const trackDetailsStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    };\n\n    const volumeControlStyle = {\n        display: 'flex',\n        alignItems: 'center',\n        marginRight: '20px'\n    };\n\n    const volumeIconStyle = {\n        width: '30px',\n        height: '30px',\n        cursor: 'pointer'\n    };\n\n    const volumeSliderStyle = {\n        width: '100px'\n    };\n\n    return (\n        <footer style={playerContainerStyle}>\n            <div style={trackInfoStyle}>\n                <img src={track.image} alt={track.title} style={trackImageStyle} />\n                <div style={trackDetailsStyle}>\n                    <h3>{track.title}</h3>\n                    <p>{track.artist}</p>\n                </div>\n            </div>\n            <AudioControls\n                isPlaying={onPlayPauseClick}\n                onPlayPauseClick={() => onPlayPauseClick(!onPlayPauseClick)}\n            />\n            <div style={volumeControlStyle}>\n                <img\n                    src={getVolumeIcon()}\n                    alt=\"Volume\"\n                    onClick={toggleMute}\n                    style={volumeIconStyle}\n                />\n                <input\n                    type=\"range\"\n                    value={isMuted ? 0 : volume}\n                    min=\"0\"\n                    max=\"1\"\n                    step=\"0.01\"\n                    onChange={(e) => setVolume(parseFloat(e.target.value))}\n                    style={volumeSliderStyle}\n                />\n                <button onClick={toggleMute}>{isMuted ? 'Unmute' : 'Mute'}</button>\n            </div>\n            <audio ref={audioRef} onEnded={() => onPlayPauseClick(false)} />\n        </footer>\n    );\n};\n\nexport default AudioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}