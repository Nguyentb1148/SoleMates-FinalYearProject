{"ast":null,"code":"import axios from 'axios';\nconst baseLink = 'http://localhost:5163';\nconst api = axios.create({\n  baseURL: baseLink,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nconst login = async credentials => {\n  try {\n    const response = await api.post('/Account/login', credentials);\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error; // Throwing the error for further handling if necessary\n  }\n};\nconst register = async userData => {\n  try {\n    const response = await api.post('/Account/register', userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nconst logout = async () => {\n  try {\n    const response = await api.post('/Account/logout');\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nconst adminOnly = async () => {\n  try {\n    const response = await api.get('/Admin/admin-only');\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nconst artistOnly = async () => {\n  try {\n    const response = await api.get('/Artist/artist-only');\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nconst userOnly = async () => {\n  try {\n    const response = await api.get('/User/user-only');\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport { login, register, logout, adminOnly, artistOnly, userOnly };","map":{"version":3,"names":["axios","baseLink","api","create","baseURL","headers","login","credentials","response","post","data","error","console","register","userData","logout","adminOnly","get","artistOnly","userOnly"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Api/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst baseLink = 'http://localhost:5163';\n\nconst api = axios.create({\n    baseURL: baseLink,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nconst login = async (credentials) => {\n    try {\n        const response = await api.post('/Account/login', credentials);\n        return response.data;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error; // Throwing the error for further handling if necessary\n    }\n};\n\nconst register = async (userData) => {\n    try {\n        const response = await api.post('/Account/register', userData);\n        return response.data;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n};\n\nconst logout = async () => {\n    try {\n        const response = await api.post('/Account/logout');\n        return response.data;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n};\n\nconst adminOnly = async () => {\n    try {\n        const response = await api.get('/Admin/admin-only');\n        return response.data;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n};\n\nconst artistOnly = async () => {\n    try {\n        const response = await api.get('/Artist/artist-only');\n        return response.data;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n};\n\nconst userOnly = async () => {\n    try {\n        const response = await api.get('/User/user-only');\n        return response.data;\n    } catch (error) {\n        console.error('Error:', error);\n        throw error;\n    }\n};\n\nexport { login, register, logout, adminOnly, artistOnly, userOnly };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,MAAMC,KAAK,GAAG,MAAOC,WAAW,IAAK;EACjC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,gBAAgB,EAAEF,WAAW,CAAC;IAC9D,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;AAED,MAAME,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACjC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,mBAAmB,EAAEK,QAAQ,CAAC;IAC9D,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,MAAMI,MAAM,GAAG,MAAAA,CAAA,KAAY;EACvB,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,iBAAiB,CAAC;IAClD,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC1B,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMN,GAAG,CAACe,GAAG,CAAC,mBAAmB,CAAC;IACnD,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC3B,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMN,GAAG,CAACe,GAAG,CAAC,qBAAqB,CAAC;IACrD,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,MAAMQ,QAAQ,GAAG,MAAAA,CAAA,KAAY;EACzB,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMN,GAAG,CAACe,GAAG,CAAC,iBAAiB,CAAC;IACjD,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,SAASL,KAAK,EAAEO,QAAQ,EAAEE,MAAM,EAAEC,SAAS,EAAEE,UAAU,EAAEC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}