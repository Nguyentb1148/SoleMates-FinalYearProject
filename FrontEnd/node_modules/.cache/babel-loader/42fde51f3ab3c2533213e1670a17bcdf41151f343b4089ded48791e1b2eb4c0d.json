{"ast":null,"code":"\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { updateSongById, deleteSongById, getSongById } from '../../Api/SongApi';\n//\n// const EditSong = () => {\n//     const { songId } = useParams();\n//     console.log(`Received songId in EditSong: ${songId}`);\n//     const [song, setSong] = useState(null);\n//     const navigate = useNavigate();\n//\n//     useEffect(() => {\n//         const fetchSong = async () => {\n//             try {\n//                 const songData = await getSongById(songId);\n//                 setSong(songData);\n//             } catch (error) {\n//                 console.error('Error fetching song:', error);\n//             }\n//         };\n//\n//         fetchSong();\n//     }, [songId]);\n//\n//     const handleFileChange = (event) => {\n//         const { name, files } = event.target;\n//         setSong({ ...song, [name]: files[0] });\n//     };\n//\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//\n//         const formData = new FormData();\n//         formData.append('title', song.title);\n//         if (song.image) formData.append('image', song.image);\n//         if (song.soundTrack) formData.append('soundTrack', song.soundTrack);\n//\n//         try {\n//             await updateSongById(songId, formData);\n//             alert('Song updated successfully');\n//             navigate('/ListSong'); // Navigate back to the list of songs\n//         } catch (error) {\n//             console.error('Error updating the song:', error);\n//         }\n//     };\n//\n//     const handleDelete = async () => {\n//         const confirmation = window.confirm('Are you sure you want to delete this song?');\n//         if (confirmation) {\n//             try {\n//                 await deleteSongById(songId);\n//                 alert('Song deleted successfully');\n//                 navigate('/ListSong'); // Navigate back to the list of songs\n//             } catch (error) {\n//                 console.error('Error deleting the song:', error);\n//             }\n//         }\n//     };\n//\n//     return (\n//         <div className=\"edit-song-page\">\n//             <h2>Edit Song</h2>\n//             <form onSubmit={handleSubmit} className=\"edit-song-form\">\n//                 <div className=\"song-media\">\n//                     <div className=\"image-preview\">\n//                         {song && song.imageData && (\n//                             <img src={`data:image/png;base64,${song.imageData}`} alt=\"Cover art\" style={{ width: '150px', height: '150px' }} />\n//                         )}\n//                         <input type=\"file\" name=\"image\" onChange={handleFileChange} />\n//                     </div>\n//                     <div className=\"soundtrack-preview\">\n//                         {song && song.soundTrackData && (\n//                             <audio controls src={`data:audio/mpeg;base64,${song.soundTrackData}`}></audio>\n//                         )}\n//                         <input type=\"file\" name=\"soundTrack\" onChange={handleFileChange} />\n//                     </div>\n//                     <button type=\"submit\" className=\"btn save-changes\">Save Changes</button>\n//                     <button type=\"button\" onClick={handleDelete} className=\"btn delete-song\">Delete Song</button>\n//                 </div>\n//\n//             </form>\n//         </div>\n//     );\n// };\n//\n// export default EditSong;","map":{"version":3,"names":[],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Pages/Song/EditSong.js"],"sourcesContent":["\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { updateSongById, deleteSongById, getSongById } from '../../Api/SongApi';\n//\n// const EditSong = () => {\n//     const { songId } = useParams();\n//     console.log(`Received songId in EditSong: ${songId}`);\n//     const [song, setSong] = useState(null);\n//     const navigate = useNavigate();\n//\n//     useEffect(() => {\n//         const fetchSong = async () => {\n//             try {\n//                 const songData = await getSongById(songId);\n//                 setSong(songData);\n//             } catch (error) {\n//                 console.error('Error fetching song:', error);\n//             }\n//         };\n//\n//         fetchSong();\n//     }, [songId]);\n//\n//     const handleFileChange = (event) => {\n//         const { name, files } = event.target;\n//         setSong({ ...song, [name]: files[0] });\n//     };\n//\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//\n//         const formData = new FormData();\n//         formData.append('title', song.title);\n//         if (song.image) formData.append('image', song.image);\n//         if (song.soundTrack) formData.append('soundTrack', song.soundTrack);\n//\n//         try {\n//             await updateSongById(songId, formData);\n//             alert('Song updated successfully');\n//             navigate('/ListSong'); // Navigate back to the list of songs\n//         } catch (error) {\n//             console.error('Error updating the song:', error);\n//         }\n//     };\n//\n//     const handleDelete = async () => {\n//         const confirmation = window.confirm('Are you sure you want to delete this song?');\n//         if (confirmation) {\n//             try {\n//                 await deleteSongById(songId);\n//                 alert('Song deleted successfully');\n//                 navigate('/ListSong'); // Navigate back to the list of songs\n//             } catch (error) {\n//                 console.error('Error deleting the song:', error);\n//             }\n//         }\n//     };\n//\n//     return (\n//         <div className=\"edit-song-page\">\n//             <h2>Edit Song</h2>\n//             <form onSubmit={handleSubmit} className=\"edit-song-form\">\n//                 <div className=\"song-media\">\n//                     <div className=\"image-preview\">\n//                         {song && song.imageData && (\n//                             <img src={`data:image/png;base64,${song.imageData}`} alt=\"Cover art\" style={{ width: '150px', height: '150px' }} />\n//                         )}\n//                         <input type=\"file\" name=\"image\" onChange={handleFileChange} />\n//                     </div>\n//                     <div className=\"soundtrack-preview\">\n//                         {song && song.soundTrackData && (\n//                             <audio controls src={`data:audio/mpeg;base64,${song.soundTrackData}`}></audio>\n//                         )}\n//                         <input type=\"file\" name=\"soundTrack\" onChange={handleFileChange} />\n//                     </div>\n//                     <button type=\"submit\" className=\"btn save-changes\">Save Changes</button>\n//                     <button type=\"button\" onClick={handleDelete} className=\"btn delete-song\">Delete Song</button>\n//                 </div>\n//\n//             </form>\n//         </div>\n//     );\n// };\n//\n// export default EditSong;\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}