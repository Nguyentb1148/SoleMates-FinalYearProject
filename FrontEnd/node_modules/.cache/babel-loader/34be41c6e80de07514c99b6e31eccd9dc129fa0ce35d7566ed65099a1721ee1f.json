{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport moreOption from '../Icon/icons8-more-50.png';\nimport mute from '../Icon/icons8-mute-50.png';\nimport lowVolume from '../Icon/icons8-low-volume-50.png';\nimport middleVolume from '../Icon/icons8-volume-50.png';\nimport volumeUp from '../Icon/icons8-volume-up-50.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  tracks\n}) => {\n  _s();\n  const [trackIndex, setTrackIndex] = useState(0);\n  const [trackProgress, setTrackProgress] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const {\n    title,\n    artist,\n    audioSrc,\n    image\n  } = tracks[trackIndex];\n  const audioRef = useRef(new Audio(audioSrc));\n  const intervalRef = useRef();\n  const isReady = useRef(false);\n  const [volume, setVolume] = useState(1.0);\n  const [muted, setMuted] = useState(false);\n  const {\n    duration\n  } = audioRef.current;\n  const startTimer = () => {\n    clearInterval(intervalRef.current);\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        toNextTrack();\n      } else {\n        setTrackProgress(audioRef.current.currentTime);\n      }\n    }, [1000]);\n  };\n  const onScrub = value => {\n    clearInterval(intervalRef.current);\n    audioRef.current.currentTime = value;\n    setTrackProgress(audioRef.current.currentTime);\n  };\n  const onScrubEnd = () => {\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n    startTimer();\n  };\n  const toPrevTrack = () => {\n    if (trackIndex - 1 < 0) {\n      setTrackIndex(tracks.length - 1);\n    } else {\n      setTrackIndex(trackIndex - 1);\n    }\n  };\n  const toNextTrack = () => {\n    if (trackIndex < tracks.length - 1) {\n      setTrackIndex(trackIndex + 1);\n    } else {\n      setTrackIndex(0);\n    }\n  };\n  const changeVolume = newVolume => {\n    audioRef.current.volume = newVolume;\n    setVolume(newVolume);\n    setMuted(newVolume === 0);\n  };\n  const toggleMute = () => {\n    setMuted(!muted);\n    audioRef.current.muted = !muted;\n    if (muted) {\n      changeVolume(volume);\n    }\n  };\n  const handlePlayClick = () => {\n    setIsPlaying(true);\n  };\n  useEffect(() => {\n    audioRef.current.volume = volume;\n    setMuted(volume === 0);\n  }, [volume]);\n  useEffect(() => {\n    if (isPlaying && audioRef.current.paused) {\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.then(() => {\n          startTimer();\n        }).catch(error => {\n          console.error('Auto-play was prevented:', error);\n        });\n      }\n    } else {\n      clearInterval(intervalRef.current);\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    audioRef.current.pause();\n    audioRef.current = new Audio(audioSrc);\n    setTrackProgress(0);\n    setTrackProgress(audioRef.current.currentTime);\n    if (isReady.current) {\n      audioRef.current.play();\n      setIsPlaying(true);\n      startTimer();\n    } else {\n      isReady.current = true;\n    }\n  }, [trackIndex]);\n  useEffect(() => {\n    return () => {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n  const playerContainerStyle = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: '#000000',\n    color: '#ffffff',\n    position: 'fixed',\n    bottom: '0',\n    left: '0',\n    right: '0',\n    width: '100%',\n    maxWidth: '1920px',\n    margin: '0 auto'\n  };\n  const leftSectionStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginLeft: '20px',\n    marginRight: '25px'\n  };\n  const centerSectionStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    flex: 1\n  };\n  const rightSectionStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: '0 1rem',\n    maxWidth: '150px',\n    marginLeft: '20px',\n    marginRight: '20px'\n  };\n  const progressBarStyle = {\n    width: '100%'\n  };\n  const volumeIconPath = volume === 0 ? mute : volume < 0.5 ? lowVolume : volume < 1 ? middleVolume : volumeUp;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    style: playerContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: leftSectionStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: tracks[trackIndex].image,\n        alt: `Track artwork for ${tracks[trackIndex].title} by ${tracks[trackIndex].artist}`,\n        style: {\n          width: '80px',\n          height: '80px',\n          borderRadius: '80px',\n          margin: '1px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: tracks[trackIndex].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tracks[trackIndex].artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: centerSectionStyle,\n      children: [/*#__PURE__*/_jsxDEV(AudioControls, {\n        isPlaying: isPlaying,\n        onPrevClick: toPrevTrack,\n        onNextClick: toNextTrack,\n        onPlayPauseClick: setIsPlaying\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: trackProgress,\n        step: \"1\",\n        min: \"0\",\n        max: duration || 0,\n        className: \"progress\",\n        onChange: e => onScrub(e.target.value),\n        onMouseUp: onScrubEnd,\n        onKeyUp: onScrubEnd,\n        style: progressBarStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: rightSectionStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: muted ? mute : volumeIconPath,\n        alt: \"Volume control\",\n        onClick: toggleMute,\n        style: {\n          width: '30px',\n          height: '30px',\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        value: muted ? 0 : volume,\n        onChange: e => changeVolume(parseFloat(e.target.value)),\n        style: {\n          width: '70px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: moreOption,\n        alt: \"More options\",\n        style: {\n          width: '30px',\n          height: '30px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioPlayer, \"8wm49Av4qm5JboGJcQvgQyaTt1w=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AudioControls","moreOption","mute","lowVolume","middleVolume","volumeUp","jsxDEV","_jsxDEV","AudioPlayer","tracks","_s","trackIndex","setTrackIndex","trackProgress","setTrackProgress","isPlaying","setIsPlaying","title","artist","audioSrc","image","audioRef","Audio","intervalRef","isReady","volume","setVolume","muted","setMuted","duration","current","startTimer","clearInterval","setInterval","ended","toNextTrack","currentTime","onScrub","value","onScrubEnd","toPrevTrack","length","changeVolume","newVolume","toggleMute","handlePlayClick","paused","playPromise","play","undefined","then","catch","error","console","pause","playerContainerStyle","display","justifyContent","alignItems","backgroundColor","color","position","bottom","left","right","width","maxWidth","margin","leftSectionStyle","marginLeft","marginRight","centerSectionStyle","flexDirection","flex","rightSectionStyle","padding","progressBarStyle","volumeIconPath","className","style","children","src","alt","height","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","onPrevClick","onNextClick","onPlayPauseClick","type","step","min","max","onChange","e","target","onMouseUp","onKeyUp","onClick","cursor","parseFloat","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport moreOption from '../Icon/icons8-more-50.png'\nimport mute from '../Icon/icons8-mute-50.png';\nimport lowVolume from '../Icon/icons8-low-volume-50.png';\nimport middleVolume from '../Icon/icons8-volume-50.png';\nimport volumeUp from '../Icon/icons8-volume-up-50.png';\n\n\nconst AudioPlayer = ({ tracks }) => {\n    const [trackIndex, setTrackIndex] = useState(0);\n    const [trackProgress, setTrackProgress] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const { title, artist, audioSrc,image } = tracks[trackIndex];\n    const audioRef = useRef(new Audio(audioSrc));\n    const intervalRef = useRef();\n    const isReady = useRef(false);\n    const [volume, setVolume] = useState(1.0);\n    const [muted, setMuted] = useState(false);\n    const { duration } = audioRef.current;\n\n    const startTimer = () => {\n        clearInterval(intervalRef.current);\n        intervalRef.current = setInterval(() => {\n            if (audioRef.current.ended) {\n                toNextTrack();\n            } else {\n                setTrackProgress(audioRef.current.currentTime);\n            }\n        }, [1000]);\n    };\n\n    const onScrub = (value) => {\n        clearInterval(intervalRef.current);\n        audioRef.current.currentTime = value;\n        setTrackProgress(audioRef.current.currentTime);\n    };\n\n    const onScrubEnd = () => {\n        if (!isPlaying) {\n            setIsPlaying(true);\n        }\n        startTimer();\n    };\n\n    const toPrevTrack = () => {\n        if (trackIndex - 1 < 0) {\n            setTrackIndex(tracks.length - 1);\n        } else {\n            setTrackIndex(trackIndex - 1);\n        }\n    };\n\n    const toNextTrack = () => {\n        if (trackIndex < tracks.length - 1) {\n            setTrackIndex(trackIndex + 1);\n        } else {\n            setTrackIndex(0);\n        }\n    };\n    const changeVolume = (newVolume) => {\n        audioRef.current.volume = newVolume;\n        setVolume(newVolume);\n        setMuted(newVolume === 0);\n    };\n\n    const toggleMute = () => {\n        setMuted(!muted);\n        audioRef.current.muted = !muted;\n        if (muted) {\n            changeVolume(volume);\n        }\n    };\n\n    const handlePlayClick = () => {\n        setIsPlaying(true);\n    };\n    useEffect(() => {\n        audioRef.current.volume = volume;\n        setMuted(volume === 0);\n    }, [volume]);\n\n    useEffect(() => {\n        if (isPlaying && audioRef.current.paused) {\n            const playPromise = audioRef.current.play();\n            if (playPromise !== undefined) {\n                playPromise\n                    .then(() => {\n                        startTimer();\n                    })\n                    .catch((error) => {\n                        console.error('Auto-play was prevented:', error);\n                    });\n            }\n        } else {\n            clearInterval(intervalRef.current);\n        }\n    }, [isPlaying]);\n\n\n    useEffect(() => {\n        audioRef.current.pause();\n        audioRef.current = new Audio(audioSrc);\n        setTrackProgress(0);\n        setTrackProgress(audioRef.current.currentTime);\n\n        if (isReady.current) {\n            audioRef.current.play();\n            setIsPlaying(true);\n            startTimer();\n        } else {\n            isReady.current = true;\n        }\n    }, [trackIndex]);\n\n    useEffect(() => {\n        return () => {\n            audioRef.current.pause();\n            clearInterval(intervalRef.current);\n        };\n    }, []);\n\n    const playerContainerStyle = {display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: '#000000',\n        color: '#ffffff', position: 'fixed', bottom: '0', left: '0', right: '0', width: '100%', maxWidth: '1920px', margin: '0 auto',};\n\n    const leftSectionStyle = {display: 'flex', alignItems: 'center', justifyContent: 'flex-start',marginLeft:'20px',marginRight:'25px'};\n\n    const centerSectionStyle = {display: 'flex', flexDirection: 'column', alignItems: 'center', flex: 1}\n\n    const rightSectionStyle = {display: 'flex', flexDirection: 'row', alignItems: 'center',\n        padding: '0 1rem', maxWidth: '150px',marginLeft:'20px',marginRight: '20px'\n    };\n    const progressBarStyle = {width: '100%',};\n\n    const volumeIconPath = volume === 0 ? mute :\n        (volume < 0.5 ? lowVolume :\n            (volume < 1 ? middleVolume : volumeUp));\n\n\n    return (\n        <div className=\"audio-player\" style={playerContainerStyle}>\n            <div style={leftSectionStyle}>\n                <img\n                    src={tracks[trackIndex].image}\n                    alt={`Track artwork for ${tracks[trackIndex].title} by ${tracks[trackIndex].artist}`}\n                    style={{ width: '80px', height: '80px', borderRadius: '80px',margin:'1px' }}\n                />\n                <div >\n                    <h2 >{tracks[trackIndex].title}</h2>\n                    <p >{tracks[trackIndex].artist}</p>\n                </div>\n\n            </div>\n\n            <div style={centerSectionStyle}>\n                <AudioControls\n                    isPlaying={isPlaying}\n                    onPrevClick={toPrevTrack}\n                    onNextClick={toNextTrack}\n                    onPlayPauseClick={setIsPlaying}\n                />\n                <input\n                    type=\"range\"\n                    value={trackProgress}\n                    step=\"1\"\n                    min=\"0\"\n                    max={duration || 0}\n                    className=\"progress\"\n                    onChange={(e) => onScrub(e.target.value)}\n                    onMouseUp={onScrubEnd}\n                    onKeyUp={onScrubEnd}\n                    style={progressBarStyle}\n                />\n            </div>\n\n            <div style={rightSectionStyle}>\n                <img\n                    src={muted ? mute : volumeIconPath}\n                    alt=\"Volume control\"\n                    onClick={toggleMute}\n                    style={{ width: '30px', height: '30px', cursor: 'pointer' }}\n                />\n                <input\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"1\"\n                    step=\"0.01\"\n                    value={muted ? 0 : volume}\n                    onChange={(e) => changeVolume(parseFloat(e.target.value))}\n                    style={{ width: '70px' }}\n                />\n                <img\n                    src={moreOption}\n                    alt=\"More options\"\n                    style={{ width: '30px', height: '30px' }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default AudioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}