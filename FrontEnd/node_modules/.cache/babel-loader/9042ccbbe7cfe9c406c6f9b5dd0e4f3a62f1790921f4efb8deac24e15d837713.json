{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport moreOption from '../Icon/icons8-more-50.png';\nimport muteIcon from '../Icon/icons8-mute-50.png';\nimport lowVolumeIcon from '../Icon/icons8-low-volume-50.png';\nimport middleVolumeIcon from '../Icon/icons8-volume-50.png';\nimport volumeUpIcon from '../Icon/icons8-volume-up-50.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  tracks\n}) => {\n  _s();\n  // State and ref setup\n  const [trackIndex, setTrackIndex] = useState(0);\n  const [trackProgress, setTrackProgress] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1.0);\n  const [muted, setMuted] = useState(false);\n  const audioRef = useRef(new Audio(tracks[trackIndex].audioSrc));\n  const intervalRef = useRef();\n  const {\n    title,\n    artist,\n    image\n  } = tracks[trackIndex];\n\n  // Utility functions\n  const startTimer = () => {\n    // Clear any timers already running\n    clearInterval(intervalRef.current);\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        toNextTrack();\n      } else {\n        setTrackProgress(audioRef.current.currentTime);\n      }\n    }, [1000]);\n  };\n  const onScrub = value => {\n    // Clear any timers already running\n    clearInterval(intervalRef.current);\n    audioRef.current.currentTime = value;\n    setTrackProgress(audioRef.current.currentTime);\n  };\n  const onScrubEnd = () => {\n    // If not already playing, start\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n    startTimer();\n  };\n\n  // Navigation functions for the player\n  const toPrevTrack = () => {\n    if (trackIndex - 1 < 0) {\n      setTrackIndex(tracks.length - 1);\n    } else {\n      setTrackIndex(trackIndex - 1);\n    }\n  };\n  const toNextTrack = () => {\n    if (trackIndex < tracks.length - 1) {\n      setTrackIndex(trackIndex + 1);\n    } else {\n      setTrackIndex(0);\n    }\n  };\n\n  // Volume control functions\n  const changeVolume = newVolume => {\n    audioRef.current.volume = newVolume;\n    setVolume(newVolume);\n    setMuted(newVolume === 0);\n  };\n  const toggleMute = () => {\n    const newMutedState = !muted;\n    setMuted(newMutedState);\n    audioRef.current.muted = newMutedState;\n    if (!newMutedState) {\n      audioRef.current.volume = volume;\n    }\n  };\n\n  // Effect hooks\n  useEffect(() => {\n    console.log(\"Track index changed to:\", trackIndex);\n    console.log(\"Current track details:\", tracks[trackIndex]);\n    audioRef.current.pause();\n\n    // If the src is a URL, you can set it directly\n    // If the src is base64 data, you'll need to convert it first (not shown here)\n    audioRef.current = new Audio(tracks[trackIndex].audioSrc);\n    setTrackProgress(audioRef.current.currentTime);\n    if (isPlaying) {\n      audioRef.current.play().then(() => {\n        console.log(\"Playback started\");\n        startTimer();\n      }).catch(error => {\n        console.error('Error attempting to play', error);\n      });\n    }\n\n    // Cleanup function to pause the audio if the component unmounts\n    return () => {\n      console.log(\"Cleaning up audio player\");\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  }, [trackIndex, tracks]);\n  useEffect(() => {\n    console.log(\"isPlaying state changed to:\", isPlaying);\n    if (isPlaying) {\n      audioRef.current.play().catch(error => {\n        console.error('Error attempting to play', error);\n      });\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    console.log(\"Volume or muted state changed\");\n    audioRef.current.volume = volume;\n    audioRef.current.muted = muted;\n  }, [volume, muted]);\n  const getVolumeIcon = () => {\n    if (muted || volume === 0) return muteIcon;\n    if (volume < 0.5) return lowVolumeIcon;\n    if (volume < 1) return middleVolumeIcon;\n    return volumeUpIcon;\n  };\n  const playerContainerStyle = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: '#000000',\n    color: '#ffffff',\n    position: 'fixed',\n    bottom: '0',\n    left: '0',\n    right: '0',\n    width: '100%',\n    maxWidth: '1920px',\n    margin: '0 auto'\n  };\n  const progressBarStyle = {\n    width: '100%'\n  };\n  const volumeIcon = getVolumeIcon();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    style: playerContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Track artwork for ${title} by ${artist}`,\n        style: {\n          width: '80px',\n          height: '80px',\n          borderRadius: '80px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '0'\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0'\n          },\n          children: artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AudioControls, {\n        isPlaying: isPlaying,\n        onPlayPauseClick: setIsPlaying,\n        onPrevClick: toPrevTrack,\n        onNextClick: toNextTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: trackProgress,\n        step: \"1\",\n        min: \"0\",\n        max: audioRef.current.duration || 0,\n        className: \"progress\",\n        onChange: e => onScrub(e.target.value),\n        onMouseUp: onScrubEnd,\n        onKeyUp: onScrubEnd,\n        style: progressBarStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginRight: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: volumeIcon,\n        alt: \"Volume\",\n        onClick: toggleMute,\n        style: {\n          width: '30px',\n          height: '30px',\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        value: muted ? 0 : volume,\n        onChange: e => changeVolume(parseFloat(e.target.value)),\n        style: {\n          margin: '0 15px',\n          width: '100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: moreOption,\n        alt: \"More options\",\n        style: {\n          width: '30px',\n          height: '30px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioPlayer, \"pU1ybgTaW5W0fS0loUY9ryggIfM=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AudioControls","moreOption","muteIcon","lowVolumeIcon","middleVolumeIcon","volumeUpIcon","jsxDEV","_jsxDEV","AudioPlayer","tracks","_s","trackIndex","setTrackIndex","trackProgress","setTrackProgress","isPlaying","setIsPlaying","volume","setVolume","muted","setMuted","audioRef","Audio","audioSrc","intervalRef","title","artist","image","startTimer","clearInterval","current","setInterval","ended","toNextTrack","currentTime","onScrub","value","onScrubEnd","toPrevTrack","length","changeVolume","newVolume","toggleMute","newMutedState","console","log","pause","play","then","catch","error","getVolumeIcon","playerContainerStyle","display","justifyContent","alignItems","backgroundColor","color","position","bottom","left","right","width","maxWidth","margin","progressBarStyle","volumeIcon","className","style","children","marginLeft","src","alt","height","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","flex","flexDirection","onPlayPauseClick","onPrevClick","onNextClick","type","step","min","max","duration","onChange","e","target","onMouseUp","onKeyUp","marginRight","onClick","cursor","parseFloat","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/FYPProject/FrontEnd/src/Audio/AudioPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport moreOption from '../Icon/icons8-more-50.png'\nimport muteIcon from '../Icon/icons8-mute-50.png';\nimport lowVolumeIcon from '../Icon/icons8-low-volume-50.png';\nimport middleVolumeIcon from '../Icon/icons8-volume-50.png';\nimport volumeUpIcon from '../Icon/icons8-volume-up-50.png';\n\n\nconst AudioPlayer = ({ tracks }) => {\n    // State and ref setup\n    const [trackIndex, setTrackIndex] = useState(0);\n    const [trackProgress, setTrackProgress] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [volume, setVolume] = useState(1.0);\n    const [muted, setMuted] = useState(false);\n    const audioRef = useRef(new Audio(tracks[trackIndex].audioSrc));\n    const intervalRef = useRef();\n    const { title, artist, image } = tracks[trackIndex];\n\n    // Utility functions\n    const startTimer = () => {\n        // Clear any timers already running\n        clearInterval(intervalRef.current);\n\n        intervalRef.current = setInterval(() => {\n            if (audioRef.current.ended) {\n                toNextTrack();\n            } else {\n                setTrackProgress(audioRef.current.currentTime);\n            }\n        }, [1000]);\n    };\n\n    const onScrub = (value) => {\n        // Clear any timers already running\n        clearInterval(intervalRef.current);\n        audioRef.current.currentTime = value;\n        setTrackProgress(audioRef.current.currentTime);\n    };\n\n    const onScrubEnd = () => {\n        // If not already playing, start\n        if (!isPlaying) {\n            setIsPlaying(true);\n        }\n        startTimer();\n    };\n\n    // Navigation functions for the player\n    const toPrevTrack = () => {\n        if (trackIndex - 1 < 0) {\n            setTrackIndex(tracks.length - 1);\n        } else {\n            setTrackIndex(trackIndex - 1);\n        }\n    };\n\n    const toNextTrack = () => {\n        if (trackIndex < tracks.length - 1) {\n            setTrackIndex(trackIndex + 1);\n        } else {\n            setTrackIndex(0);\n        }\n    };\n\n    // Volume control functions\n    const changeVolume = (newVolume) => {\n        audioRef.current.volume = newVolume;\n        setVolume(newVolume);\n        setMuted(newVolume === 0);\n    };\n\n    const toggleMute = () => {\n        const newMutedState = !muted;\n        setMuted(newMutedState);\n        audioRef.current.muted = newMutedState;\n        if (!newMutedState) {\n            audioRef.current.volume = volume;\n        }\n    };\n\n    // Effect hooks\n    useEffect(() => {\n        console.log(\"Track index changed to:\", trackIndex);\n        console.log(\"Current track details:\", tracks[trackIndex]);\n\n        audioRef.current.pause();\n\n        // If the src is a URL, you can set it directly\n        // If the src is base64 data, you'll need to convert it first (not shown here)\n        audioRef.current = new Audio(tracks[trackIndex].audioSrc);\n        setTrackProgress(audioRef.current.currentTime);\n\n        if (isPlaying) {\n            audioRef.current.play().then(() => {\n                console.log(\"Playback started\");\n                startTimer();\n            }).catch((error) => {\n                console.error('Error attempting to play', error);\n            });\n        }\n\n        // Cleanup function to pause the audio if the component unmounts\n        return () => {\n            console.log(\"Cleaning up audio player\");\n            audioRef.current.pause();\n            clearInterval(intervalRef.current);\n        };\n    }, [trackIndex, tracks]);\n\n\n    useEffect(() => {\n        console.log(\"isPlaying state changed to:\", isPlaying);\n        if (isPlaying) {\n            audioRef.current.play().catch((error) => {\n                console.error('Error attempting to play', error);\n            });\n        } else {\n            audioRef.current.pause();\n        }\n    }, [isPlaying]);\n\n    useEffect(() => {\n        console.log(\"Volume or muted state changed\");\n        audioRef.current.volume = volume;\n        audioRef.current.muted = muted;\n    }, [volume, muted]);\n\n    const getVolumeIcon = () => {\n        if (muted || volume === 0) return muteIcon;\n        if (volume < 0.5) return lowVolumeIcon;\n        if (volume < 1) return middleVolumeIcon;\n        return volumeUpIcon;\n    };\n\n    const playerContainerStyle = {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#000000',\n        color: '#ffffff',\n        position: 'fixed',\n        bottom: '0',\n        left: '0',\n        right: '0',\n        width: '100%',\n        maxWidth: '1920px',\n        margin: '0 auto',\n    };\n\n    const progressBarStyle = {\n        width: '100%',\n    };\n\n    const volumeIcon = getVolumeIcon();\n\n\n    return (\n        <div className=\"audio-player\" style={playerContainerStyle}>\n            <div style={{ display: 'flex', alignItems: 'center', marginLeft: '20px' }}>\n                <img\n                    src={image}\n                    alt={`Track artwork for ${title} by ${artist}`}\n                    style={{ width: '80px', height: '80px', borderRadius: '80px' }}\n                />\n                <div style={{ marginLeft: '10px' }}>\n                    <h2 style={{ margin: '0' }}>{title}</h2>\n                    <p style={{ margin: '0' }}>{artist}</p>\n                </div>\n            </div>\n\n            <div style={{ flex: 1, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                <AudioControls\n                    isPlaying={isPlaying}\n                    onPlayPauseClick={setIsPlaying}\n                    onPrevClick={toPrevTrack}\n                    onNextClick={toNextTrack}\n                />\n                <input\n                    type=\"range\"\n                    value={trackProgress}\n                    step=\"1\"\n                    min=\"0\"\n                    max={audioRef.current.duration || 0}\n                    className=\"progress\"\n                    onChange={(e) => onScrub(e.target.value)}\n                    onMouseUp={onScrubEnd}\n                    onKeyUp={onScrubEnd}\n                    style={progressBarStyle}\n                />\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginRight: '20px' }}>\n                <img\n                    src={volumeIcon}\n                    alt=\"Volume\"\n                    onClick={toggleMute}\n                    style={{ width: '30px', height: '30px', cursor: 'pointer' }}\n                />\n                <input\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"1\"\n                    step=\"0.01\"\n                    value={muted ? 0 : volume}\n                    onChange={(e) => changeVolume(parseFloat(e.target.value))}\n                    style={{ margin: '0 15px', width: '100px' }}\n                />\n                <img\n                    src={moreOption}\n                    alt=\"More options\"\n                    style={{ width: '30px', height: '30px' }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default AudioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}